

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Sep 25 19:23:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           	psect	idataCOMRAM
    26  000748                     __pidataCOMRAM:
    27                           	opt stack 0
    28                           
    29                           ;initializer for _stance
    30  000748  01                 	db	1
    31  0000                     _TMR0	set	4054
    32  0000                     _ADCON1	set	4033
    33  0000                     _ANCON0	set	3933
    34  0000                     _INTCON	set	4082
    35  0000                     _PORTA	set	3968
    36  0000                     _PORTCbits	set	3970
    37  0000                     _RCONbits	set	4048
    38  0000                     _TRISA	set	3986
    39  0000                     _TRISB	set	3987
    40  0000                     _TRISC	set	3988
    41  0000                     _GIE	set	32663
    42  0000                     _INTEDG0	set	32654
    43  0000                     _PEIE	set	32662
    44  0000                     _PSA	set	32427
    45  0000                     _T08BIT	set	32430
    46  0000                     _T0CS	set	32429
    47  0000                     _T0PS0	set	32424
    48  0000                     _T0PS1	set	32425
    49  0000                     _T0PS2	set	32426
    50  0000                     _TMR0IE	set	32661
    51  0000                     _TMR0IF	set	32658
    52  0000                     _TMR0ON	set	32431
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  000720                     __pcinit:
    58                           	opt stack 0
    59  000720                     start_initialization:
    60                           	opt stack 0
    61  000720                     __initialization:
    62                           	opt stack 0
    63                           
    64                           ; Clear objects allocated to COMRAM (6 bytes)
    65  000720  6A3B               	clrf	(__pbssCOMRAM+5)& (0+255),c
    66  000722  6A3A               	clrf	(__pbssCOMRAM+4)& (0+255),c
    67  000724  6A39               	clrf	(__pbssCOMRAM+3)& (0+255),c
    68  000726  6A38               	clrf	(__pbssCOMRAM+2)& (0+255),c
    69  000728  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
    70  00072A  6A36               	clrf	__pbssCOMRAM& (0+255),c
    71                           
    72                           ; Initialize objects allocated to COMRAM (1 bytes)
    73                           ; load TBLPTR registers with __pidataCOMRAM
    74  00072C  0E48               	movlw	low __pidataCOMRAM
    75  00072E  6EF6               	movwf	tblptrl,c
    76  000730  0E07               	movlw	high __pidataCOMRAM
    77  000732  6EF7               	movwf	tblptrh,c
    78  000734  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    79  000736  6EF8               	movwf	tblptru,c
    80  000738  0009               	tblrd		*+	;fetch initializer
    81  00073A  CFF5 F03C          	movff	tablat,__pdataCOMRAM
    82  00073E                     end_of_initialization:
    83                           	opt stack 0
    84  00073E                     __end_of__initialization:
    85                           	opt stack 0
    86  00073E  0E00               	movlw	low (__Lmediumconst shr (0+16))
    87  000740  6EF8               	movwf	tblptru,c
    88  000742  0100               	movlb	0
    89  000744  EF5E  F002         	goto	_main	;jump to C main() function
    90                           tblptru	equ	0xFF8
    91                           tblptrh	equ	0xFF7
    92                           tblptrl	equ	0xFF6
    93                           tablat	equ	0xFF5
    94                           
    95                           	psect	bssCOMRAM
    96  000036                     __pbssCOMRAM:
    97                           	opt stack 0
    98  000036                     _time:
    99                           	opt stack 0
   100  000036                     	ds	2
   101  000038                     _balayage:
   102                           	opt stack 0
   103  000038                     	ds	1
   104  000039                     _front_montant:
   105                           	opt stack 0
   106  000039                     	ds	1
   107  00003A                     _old_state:
   108                           	opt stack 0
   109  00003A                     	ds	1
   110  00003B                     _valeur:
   111                           	opt stack 0
   112  00003B                     	ds	1
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           
   118                           	psect	dataCOMRAM
   119  00003C                     __pdataCOMRAM:
   120                           	opt stack 0
   121  00003C                     _stance:
   122                           	opt stack 0
   123  00003C                     	ds	1
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           
   129                           	psect	cstackBANK0
   130  000060                     __pcstackBANK0:
   131                           	opt stack 0
   132  000060                     main@y:
   133                           	opt stack 0
   134                           
   135                           ; 2 bytes @ 0x0
   136  000060                     	ds	2
   137  000062                     main@y_193:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x2
   141  000062                     	ds	2
   142  000064                     main@razdisplay:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x4
   146  000064                     	ds	2
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           
   152                           	psect	cstackCOMRAM
   153  000001                     __pcstackCOMRAM:
   154                           	opt stack 0
   155  000001                     ?i2___lwdiv:
   156                           	opt stack 0
   157  000001                     i2segments@figure:
   158                           	opt stack 0
   159  000001                     i2___lwdiv@dividend:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x0
   163  000001                     	ds	2
   164  000003                     i2___lwdiv@divisor:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x2
   168  000003                     	ds	2
   169  000005                     i2___lwdiv@quotient:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x4
   173  000005                     	ds	2
   174  000007                     i2___lwdiv@counter:
   175                           	opt stack 0
   176                           
   177                           ; 1 bytes @ 0x6
   178  000007                     	ds	1
   179  000008                     ?i2___lwmod:
   180                           	opt stack 0
   181  000008                     i2___lwmod@dividend:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x7
   185  000008                     	ds	2
   186  00000A                     i2___lwmod@divisor:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x9
   190  00000A                     	ds	2
   191  00000C                     i2___lwmod@counter:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0xB
   195  00000C                     	ds	1
   196  00000D                     i2rafraichissement@afficheur:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0xC
   200  00000D                     	ds	2
   201  00000F                     ??i2_rafraichissement:
   202                           
   203                           ; 0 bytes @ 0xE
   204  00000F                     	ds	2
   205  000011                     ??_low_interrupt:
   206                           
   207                           ; 0 bytes @ 0x10
   208  000011                     	ds	14
   209  00001F                     ?___lwdiv:
   210                           	opt stack 0
   211  00001F                     segments@figure:
   212                           	opt stack 0
   213  00001F                     ___lwdiv@dividend:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x1E
   217  00001F                     	ds	2
   218  000021                     ___lwdiv@divisor:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x20
   222  000021                     	ds	2
   223  000023                     ___lwdiv@quotient:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x22
   227  000023                     	ds	2
   228  000025                     ___lwdiv@counter:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x24
   232  000025                     	ds	1
   233  000026                     ?___lwmod:
   234                           	opt stack 0
   235  000026                     ___lwmod@dividend:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x25
   239  000026                     	ds	2
   240  000028                     ___lwmod@divisor:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x27
   244  000028                     	ds	2
   245  00002A                     ___lwmod@counter:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x29
   249  00002A                     	ds	1
   250  00002B                     rafraichissement@afficheur:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x2A
   254  00002B                     	ds	2
   255  00002D                     ??_rafraichissement:
   256                           
   257                           ; 0 bytes @ 0x2C
   258  00002D                     	ds	2
   259  00002F                     initialisation@razdisplay:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x2E
   263  00002F                     	ds	2
   264  000031                     
   265                           ; 2 bytes @ 0x30
   266  000031                     	ds	2
   267  000033                     
   268                           ; 3 bytes @ 0x32
   269  000033                     	ds	3
   270  000036                     tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           
   275                           ; 0 bytes @ 0x35
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 99 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;  argc            2   48[COMRAM] int 
   284 ;;  argv            3   50[COMRAM] PTR PTR unsigned char 
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  razdisplay      2    4[BANK0 ] int 
   287 ;;  y               2    2[BANK0 ] int 
   288 ;;  y               2    0[BANK0 ] int 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  2   48[COMRAM] int 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   298 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   299 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   301 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   302 ;;Total ram usage:       11 bytes
   303 ;; Hardware stack levels required when called:    6
   304 ;; This function calls:
   305 ;;		_initialisation
   306 ;;		_rafraichissement
   307 ;;		_segments
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text0
   314  0004BC                     __ptext0:
   315                           	opt stack 0
   316  0004BC                     _main:
   317                           	opt stack 25
   318                           
   319                           ;main.c: 101: initialisation();
   320                           
   321                           ;incstack = 0
   322  0004BC  ECCB  F002         	call	_initialisation	;wreg free
   323  0004C0                     l1206:
   324                           
   325                           ;main.c: 105: if ((PORTCbits.RC0 == 1) && (old_state == 0)) {
   326  0004C0  A082               	btfss	3970,0,c	;volatile
   327  0004C2  D01A               	goto	l72
   328  0004C4  663A               	tstfsz	_old_state,c
   329  0004C6  D018               	goto	l72
   330                           
   331                           ;main.c: 106: old_state = 1;
   332  0004C8  0E01               	movlw	1
   333  0004CA  6E3A               	movwf	_old_state,c
   334                           
   335                           ;main.c: 108: if(stance!=1){
   336  0004CC  043C               	decf	_stance,w,c
   337  0004CE  A4D8               	btfss	status,2,c
   338                           
   339                           ;main.c: 109: stance++;
   340  0004D0  2A3C               	incf	_stance,f,c
   341                           
   342                           ;main.c: 110: }
   343                           ;main.c: 111: for (int y =0 ; y<10000;y++){}
   344  0004D2  0E00               	movlw	0
   345  0004D4  0100               	movlb	0	; () banked
   346  0004D6  6F61               	movwf	(main@y+1)& (0+255),b
   347  0004D8  0E00               	movlw	0
   348  0004DA  0100               	movlb	0	; () banked
   349  0004DC  6F60               	movwf	main@y& (0+255),b
   350  0004DE                     
   351                           ; BSR set to: 0
   352  0004DE  0100               	movlb	0	; () banked
   353  0004E0  5161               	movf	(main@y+1)& (0+255),w,b
   354  0004E2  0A80               	xorlw	128
   355  0004E4  0F59               	addlw	-167
   356  0004E6  0E10               	movlw	16
   357  0004E8  B4D8               	btfsc	status,2,c
   358  0004EA  5D60               	subwf	main@y& (0+255),w,b
   359  0004EC  B0D8               	btfsc	status,0,c
   360  0004EE  D004               	goto	l72
   361                           
   362                           ; BSR set to: 0
   363                           
   364                           ; BSR set to: 0
   365                           
   366                           ; BSR set to: 0
   367  0004F0  0100               	movlb	0	; () banked
   368  0004F2  4B60               	infsnz	main@y& (0+255),f,b
   369  0004F4  2B61               	incf	(main@y+1)& (0+255),f,b
   370  0004F6  D7F3               	goto	L1
   371  0004F8                     l72:
   372                           
   373                           ;main.c: 113: }
   374                           ;main.c: 115: if ((PORTCbits.RC0 == 0) && (old_state ==1)) {
   375  0004F8  B082               	btfsc	3970,0,c	;volatile
   376  0004FA  D042               	goto	l1260
   377  0004FC  043A               	decf	_old_state,w,c
   378  0004FE  A4D8               	btfss	status,2,c
   379  000500  D03F               	goto	l1260
   380                           
   381                           ;main.c: 117: old_state = 0;
   382  000502  0E00               	movlw	0
   383  000504  6E3A               	movwf	_old_state,c
   384                           
   385                           ;main.c: 119: if(stance==1){
   386  000506  043C               	decf	_stance,w,c
   387  000508  B4D8               	btfsc	status,2,c
   388                           
   389                           ;main.c: 120: stance++;
   390  00050A  2A3C               	incf	_stance,f,c
   391                           
   392                           ;main.c: 121: }
   393                           ;main.c: 122: for (int y =0 ; y<10000;y++){}
   394  00050C  0E00               	movlw	0
   395  00050E  0100               	movlb	0	; () banked
   396  000510  6F63               	movwf	(main@y_193+1)& (0+255),b
   397  000512  0E00               	movlw	0
   398  000514  0100               	movlb	0	; () banked
   399  000516  6F62               	movwf	main@y_193& (0+255),b
   400  000518                     
   401                           ; BSR set to: 0
   402  000518  0100               	movlb	0	; () banked
   403  00051A  5163               	movf	(main@y_193+1)& (0+255),w,b
   404  00051C  0A80               	xorlw	128
   405  00051E  0F59               	addlw	-167
   406  000520  0E10               	movlw	16
   407  000522  B4D8               	btfsc	status,2,c
   408  000524  5D62               	subwf	main@y_193& (0+255),w,b
   409  000526  B0D8               	btfsc	status,0,c
   410  000528  D02B               	goto	l1260
   411                           
   412                           ; BSR set to: 0
   413                           
   414                           ; BSR set to: 0
   415                           
   416                           ; BSR set to: 0
   417  00052A  0100               	movlb	0	; () banked
   418  00052C  4B62               	infsnz	main@y_193& (0+255),f,b
   419  00052E  2B63               	incf	(main@y_193+1)& (0+255),f,b
   420  000530  D7F3               	goto	L2
   421  000532                     l81:
   422                           
   423                           ;main.c: 129: {
   424                           ;main.c: 130: TMR0ON = 0;
   425  000532  9ED5               	bcf	4053,7,c	;volatile
   426                           
   427                           ;main.c: 131: segments(0);
   428  000534  0E00               	movlw	0
   429  000536  EC7A  F001         	call	_segments
   430                           
   431                           ;main.c: 132: for (int razdisplay = 0; razdisplay < 5; razdisplay++) {
   432  00053A  0E00               	movlw	0
   433  00053C  0100               	movlb	0	; () banked
   434  00053E  6F65               	movwf	(main@razdisplay+1)& (0+255),b
   435  000540  0E00               	movlw	0
   436  000542  0100               	movlb	0	; () banked
   437  000544  6F64               	movwf	main@razdisplay& (0+255),b
   438  000546                     
   439                           ; BSR set to: 0
   440  000546  0100               	movlb	0	; () banked
   441  000548  5165               	movf	(main@razdisplay+1)& (0+255),w,b
   442  00054A  0A80               	xorlw	128
   443  00054C  0F80               	addlw	-128
   444  00054E  0E05               	movlw	5
   445  000550  B4D8               	btfsc	status,2,c
   446  000552  5D64               	subwf	main@razdisplay& (0+255),w,b
   447  000554  B0D8               	btfsc	status,0,c
   448  000556  D7B4               	goto	l1206
   449                           
   450                           ; BSR set to: 0
   451                           ;main.c: 133: rafraichissement(razdisplay);
   452                           
   453                           ; BSR set to: 0
   454                           
   455                           ; BSR set to: 0
   456  000558  C064  F02B         	movff	main@razdisplay,rafraichissement@afficheur
   457  00055C  C065  F02C         	movff	main@razdisplay+1,rafraichissement@afficheur+1
   458  000560  EC56  F000         	call	_rafraichissement	;wreg free
   459  000564  0100               	movlb	0	; () banked
   460  000566  4B64               	infsnz	main@razdisplay& (0+255),f,b
   461  000568  2B65               	incf	(main@razdisplay+1)& (0+255),f,b
   462  00056A  D7ED               	goto	L3
   463  00056C                     l85:
   464                           
   465                           ;main.c: 138: {
   466                           ;main.c: 139: TMR0ON = 1;
   467  00056C  8ED5               	bsf	4053,7,c	;volatile
   468                           
   469                           ;main.c: 140: }
   470                           ;main.c: 141: break;
   471  00056E  D7A8               	goto	l1206
   472  000570                     l86:
   473                           
   474                           ;main.c: 143: {
   475                           ;main.c: 144: TMR0ON = 0;
   476  000570  9ED5               	bcf	4053,7,c	;volatile
   477                           
   478                           ;main.c: 145: time = 0;
   479  000572  0E00               	movlw	0
   480  000574  6E37               	movwf	_time+1,c
   481  000576  0E00               	movlw	0
   482  000578  6E36               	movwf	_time,c
   483                           
   484                           ;main.c: 146: stance=0;
   485  00057A  0E00               	movlw	0
   486  00057C  6E3C               	movwf	_stance,c
   487                           
   488                           ;main.c: 147: }
   489                           ;main.c: 148: break;
   490  00057E  D7A0               	goto	l1206
   491  000580                     l1260:
   492  000580  503C               	movf	_stance,w,c
   493                           
   494                           ; Switch size 1, requested type "space"
   495                           ; Number of cases is 3, Range of values is 1 to 3
   496                           ; switch strategies available:
   497                           ; Name         Instructions Cycles
   498                           ; simple_byte           10     6 (average)
   499                           ;	Chosen strategy is simple_byte
   500  000582  0A01               	xorlw	1	; case 1
   501  000584  B4D8               	btfsc	status,2,c
   502  000586  D7D5               	goto	l81
   503  000588  0A03               	xorlw	3	; case 2
   504  00058A  B4D8               	btfsc	status,2,c
   505  00058C  D7EF               	goto	l85
   506  00058E  0A01               	xorlw	1	; case 3
   507  000590  B4D8               	btfsc	status,2,c
   508  000592  D7EE               	goto	l86
   509  000594  D795               	goto	l1206
   510  000596                     __end_of_main:
   511                           	opt stack 0
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           status	equ	0xFD8
   517                           
   518 ;; *************** function _initialisation *****************
   519 ;; Defined at:
   520 ;;		line 188 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  razdisplay      2   46[COMRAM] int 
   525 ;; Return value:  Size  Location     Type
   526 ;;		None               void
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   538 ;;Total ram usage:        2 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    5
   541 ;; This function calls:
   542 ;;		_rafraichissement
   543 ;;		_segments
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text1
   550  000596                     __ptext1:
   551                           	opt stack 0
   552  000596                     _initialisation:
   553                           	opt stack 25
   554                           
   555                           ;main.c: 191: RCONbits.IPEN = 1;
   556                           
   557                           ;incstack = 0
   558  000596  8ED0               	bsf	4048,7,c	;volatile
   559                           
   560                           ;main.c: 192: INTCON = 0b11111000;
   561  000598  0EF8               	movlw	248
   562  00059A  6EF2               	movwf	intcon,c	;volatile
   563                           
   564                           ;main.c: 193: ADCON1 = 0x00;
   565  00059C  0E00               	movlw	0
   566  00059E  6EC1               	movwf	4033,c	;volatile
   567                           
   568                           ;main.c: 194: TRISA = 0;
   569  0005A0  0E00               	movlw	0
   570  0005A2  6E92               	movwf	3986,c	;volatile
   571                           
   572                           ;main.c: 195: TRISB = 0b11111111;
   573  0005A4  6893               	setf	3987,c	;volatile
   574                           
   575                           ;main.c: 196: TRISC = 0b00000001;
   576  0005A6  0E01               	movlw	1
   577  0005A8  6E94               	movwf	3988,c	;volatile
   578                           
   579                           ;main.c: 198: TMR0ON = 0;
   580  0005AA  9ED5               	bcf	4053,7,c	;volatile
   581                           
   582                           ;main.c: 199: segments(0);
   583  0005AC  0E00               	movlw	0
   584  0005AE  EC7A  F001         	call	_segments
   585                           
   586                           ;main.c: 201: for (int razdisplay = 0; razdisplay < 5; razdisplay++) {
   587  0005B2  0E00               	movlw	0
   588  0005B4  6E30               	movwf	initialisation@razdisplay+1,c
   589  0005B6  0E00               	movlw	0
   590  0005B8  6E2F               	movwf	initialisation@razdisplay,c
   591  0005BA  5030               	movf	initialisation@razdisplay+1,w,c
   592  0005BC  0A80               	xorlw	128
   593  0005BE  0F80               	addlw	-128
   594  0005C0  0E05               	movlw	5
   595  0005C2  B4D8               	btfsc	status,2,c
   596  0005C4  5C2F               	subwf	initialisation@razdisplay,w,c
   597  0005C6  B0D8               	btfsc	status,0,c
   598  0005C8  D009               	goto	l1182
   599                           
   600                           ;main.c: 202: rafraichissement(razdisplay);
   601  0005CA  C02F  F02B         	movff	initialisation@razdisplay,rafraichissement@afficheur
   602  0005CE  C030  F02C         	movff	initialisation@razdisplay+1,rafraichissement@afficheur+1
   603  0005D2  EC56  F000         	call	_rafraichissement	;wreg free
   604  0005D6  4A2F               	infsnz	initialisation@razdisplay,f,c
   605  0005D8  2A30               	incf	initialisation@razdisplay+1,f,c
   606  0005DA  D7EF               	goto	L4
   607  0005DC                     l1182:
   608                           
   609                           ;main.c: 203: }
   610                           ;main.c: 208: ANCON0 = 0;
   611  0005DC  0E00               	movlw	0
   612  0005DE  010F               	movlb	15	; () banked
   613  0005E0  6F5D               	movwf	93,b	;volatile
   614                           
   615                           ; BSR set to: 15
   616                           ;main.c: 209: INTEDG0 = 1;
   617  0005E2  8CF1               	bsf	intcon2,6,c	;volatile
   618                           
   619                           ; BSR set to: 15
   620                           ;main.c: 219: T0PS0 = 0;
   621  0005E4  90D5               	bcf	4053,0,c	;volatile
   622                           
   623                           ; BSR set to: 15
   624                           ;main.c: 220: T0PS1 = 1;
   625  0005E6  82D5               	bsf	4053,1,c	;volatile
   626                           
   627                           ; BSR set to: 15
   628                           ;main.c: 221: T0PS2 = 0;
   629  0005E8  94D5               	bcf	4053,2,c	;volatile
   630                           
   631                           ; BSR set to: 15
   632                           ;main.c: 222: PSA = 0;
   633  0005EA  96D5               	bcf	4053,3,c	;volatile
   634                           
   635                           ; BSR set to: 15
   636                           ;main.c: 223: T0CS = 0;
   637  0005EC  9AD5               	bcf	4053,5,c	;volatile
   638                           
   639                           ; BSR set to: 15
   640                           ;main.c: 224: T08BIT = 1;
   641  0005EE  8CD5               	bsf	4053,6,c	;volatile
   642                           
   643                           ; BSR set to: 15
   644                           ;main.c: 225: TMR0IE = 1;
   645  0005F0  8AF2               	bsf	intcon,5,c	;volatile
   646                           
   647                           ; BSR set to: 15
   648                           ;main.c: 226: PEIE = 1;
   649  0005F2  8CF2               	bsf	intcon,6,c	;volatile
   650                           
   651                           ; BSR set to: 15
   652                           ;main.c: 227: GIE = 1;
   653  0005F4  8EF2               	bsf	intcon,7,c	;volatile
   654                           
   655                           ; BSR set to: 15
   656  0005F6  0012               	return	
   657  0005F8                     __end_of_initialisation:
   658                           	opt stack 0
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           intcon	equ	0xFF2
   664                           intcon2	equ	0xFF1
   665                           status	equ	0xFD8
   666                           
   667 ;; *************** function _rafraichissement *****************
   668 ;; Defined at:
   669 ;;		line 158 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  afficheur       2   42[COMRAM] int 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;		None               void
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   687 ;;Total ram usage:        4 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    4
   690 ;; This function calls:
   691 ;;		___lwdiv
   692 ;;		___lwmod
   693 ;;		_segments
   694 ;; This function is called by:
   695 ;;		_main
   696 ;;		_initialisation
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text2
   701  0000AC                     __ptext2:
   702                           	opt stack 0
   703  0000AC                     _rafraichissement:
   704                           	opt stack 26
   705                           
   706                           ;main.c: 160: switch (afficheur) {
   707                           
   708                           ; BSR set to: 15
   709                           ;incstack = 0
   710  0000AC  D078               	goto	l1154
   711  0000AE                     l1134:
   712                           
   713                           ;main.c: 163: segments(time % 10);
   714  0000AE  C036  F026         	movff	_time,___lwmod@dividend
   715  0000B2  C037  F027         	movff	_time+1,___lwmod@dividend+1
   716  0000B6  0E00               	movlw	0
   717  0000B8  6E29               	movwf	___lwmod@divisor+1,c
   718  0000BA  0E0A               	movlw	10
   719  0000BC  6E28               	movwf	___lwmod@divisor,c
   720  0000BE  EC4E  F003         	call	___lwmod	;wreg free
   721  0000C2  5026               	movf	?___lwmod,w,c
   722  0000C4  EC7A  F001         	call	_segments
   723                           
   724                           ;main.c: 164: PORTA = 0b00000001;
   725  0000C8  0E01               	movlw	1
   726  0000CA  6E80               	movwf	3968,c	;volatile
   727                           
   728                           ;main.c: 165: break;
   729  0000CC  0012               	return	
   730  0000CE                     l1138:
   731                           
   732                           ;main.c: 167: segments((time / 10) % 10);
   733  0000CE  0E00               	movlw	0
   734  0000D0  6E22               	movwf	___lwdiv@divisor+1,c
   735  0000D2  0E0A               	movlw	10
   736  0000D4  6E21               	movwf	___lwdiv@divisor,c
   737  0000D6  C036  F01F         	movff	_time,___lwdiv@dividend
   738  0000DA  C037  F020         	movff	_time+1,___lwdiv@dividend+1
   739  0000DE  ECFC  F002         	call	___lwdiv	;wreg free
   740  0000E2  C01F  F026         	movff	?___lwdiv,___lwmod@dividend
   741  0000E6  C020  F027         	movff	?___lwdiv+1,___lwmod@dividend+1
   742  0000EA  0E00               	movlw	0
   743  0000EC  6E29               	movwf	___lwmod@divisor+1,c
   744  0000EE  0E0A               	movlw	10
   745  0000F0  6E28               	movwf	___lwmod@divisor,c
   746  0000F2  EC4E  F003         	call	___lwmod	;wreg free
   747  0000F6  5026               	movf	?___lwmod,w,c
   748  0000F8  EC7A  F001         	call	_segments
   749                           
   750                           ;main.c: 168: PORTA = 0b00000010;
   751  0000FC  0E02               	movlw	2
   752  0000FE  6E80               	movwf	3968,c	;volatile
   753                           
   754                           ;main.c: 169: break;
   755  000100  0012               	return	
   756  000102                     l1142:
   757                           
   758                           ;main.c: 171: segments((time / 100) % 10);
   759  000102  0E00               	movlw	0
   760  000104  6E22               	movwf	___lwdiv@divisor+1,c
   761  000106  0E64               	movlw	100
   762  000108  6E21               	movwf	___lwdiv@divisor,c
   763  00010A  C036  F01F         	movff	_time,___lwdiv@dividend
   764  00010E  C037  F020         	movff	_time+1,___lwdiv@dividend+1
   765  000112  ECFC  F002         	call	___lwdiv	;wreg free
   766  000116  C01F  F026         	movff	?___lwdiv,___lwmod@dividend
   767  00011A  C020  F027         	movff	?___lwdiv+1,___lwmod@dividend+1
   768  00011E  0E00               	movlw	0
   769  000120  6E29               	movwf	___lwmod@divisor+1,c
   770  000122  0E0A               	movlw	10
   771  000124  6E28               	movwf	___lwmod@divisor,c
   772  000126  EC4E  F003         	call	___lwmod	;wreg free
   773  00012A  5026               	movf	?___lwmod,w,c
   774  00012C  EC7A  F001         	call	_segments
   775                           
   776                           ;main.c: 172: PORTA = 0b00000100;
   777  000130  0E04               	movlw	4
   778  000132  6E80               	movwf	3968,c	;volatile
   779                           
   780                           ;main.c: 173: break;
   781  000134  0012               	return	
   782  000136                     l1146:
   783                           
   784                           ;main.c: 175: segments((time / 1000) % 10);
   785  000136  0E03               	movlw	3
   786  000138  6E22               	movwf	___lwdiv@divisor+1,c
   787  00013A  0EE8               	movlw	232
   788  00013C  6E21               	movwf	___lwdiv@divisor,c
   789  00013E  C036  F01F         	movff	_time,___lwdiv@dividend
   790  000142  C037  F020         	movff	_time+1,___lwdiv@dividend+1
   791  000146  ECFC  F002         	call	___lwdiv	;wreg free
   792  00014A  C01F  F026         	movff	?___lwdiv,___lwmod@dividend
   793  00014E  C020  F027         	movff	?___lwdiv+1,___lwmod@dividend+1
   794  000152  0E00               	movlw	0
   795  000154  6E29               	movwf	___lwmod@divisor+1,c
   796  000156  0E0A               	movlw	10
   797  000158  6E28               	movwf	___lwmod@divisor,c
   798  00015A  EC4E  F003         	call	___lwmod	;wreg free
   799  00015E  5026               	movf	?___lwmod,w,c
   800  000160  EC7A  F001         	call	_segments
   801                           
   802                           ;main.c: 176: PORTA = 0b00001000;
   803  000164  0E08               	movlw	8
   804  000166  6E80               	movwf	3968,c	;volatile
   805                           
   806                           ;main.c: 177: break;
   807  000168  0012               	return	
   808  00016A                     l1150:
   809                           
   810                           ;main.c: 179: segments((time / 10000) % 10);
   811  00016A  0E27               	movlw	39
   812  00016C  6E22               	movwf	___lwdiv@divisor+1,c
   813  00016E  0E10               	movlw	16
   814  000170  6E21               	movwf	___lwdiv@divisor,c
   815  000172  C036  F01F         	movff	_time,___lwdiv@dividend
   816  000176  C037  F020         	movff	_time+1,___lwdiv@dividend+1
   817  00017A  ECFC  F002         	call	___lwdiv	;wreg free
   818  00017E  C01F  F026         	movff	?___lwdiv,___lwmod@dividend
   819  000182  C020  F027         	movff	?___lwdiv+1,___lwmod@dividend+1
   820  000186  0E00               	movlw	0
   821  000188  6E29               	movwf	___lwmod@divisor+1,c
   822  00018A  0E0A               	movlw	10
   823  00018C  6E28               	movwf	___lwmod@divisor,c
   824  00018E  EC4E  F003         	call	___lwmod	;wreg free
   825  000192  5026               	movf	?___lwmod,w,c
   826  000194  EC7A  F001         	call	_segments
   827                           
   828                           ;main.c: 180: PORTA = 0b00100000;
   829  000198  0E20               	movlw	32
   830  00019A  6E80               	movwf	3968,c	;volatile
   831                           
   832                           ;main.c: 181: break;
   833  00019C  0012               	return	
   834  00019E                     l1154:
   835  00019E  C02B  F02D         	movff	rafraichissement@afficheur,??_rafraichissement
   836  0001A2  C02C  F02E         	movff	rafraichissement@afficheur+1,??_rafraichissement+1
   837                           
   838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   839                           ; Switch size 1, requested type "space"
   840                           ; Number of cases is 1, Range of values is 0 to 0
   841                           ; switch strategies available:
   842                           ; Name         Instructions Cycles
   843                           ; simple_byte            4     3 (average)
   844                           ;	Chosen strategy is simple_byte
   845  0001A6  502E               	movf	??_rafraichissement+1,w,c
   846  0001A8  0A00               	xorlw	0	; case 0
   847  0001AA  A4D8               	btfss	status,2,c
   848  0001AC  0012               	return	
   849                           
   850                           ; Switch size 1, requested type "space"
   851                           ; Number of cases is 5, Range of values is 0 to 4
   852                           ; switch strategies available:
   853                           ; Name         Instructions Cycles
   854                           ; simple_byte           16     9 (average)
   855                           ;	Chosen strategy is simple_byte
   856  0001AE  502D               	movf	??_rafraichissement,w,c
   857  0001B0  0A00               	xorlw	0	; case 0
   858  0001B2  B4D8               	btfsc	status,2,c
   859  0001B4  D77C               	goto	l1134
   860  0001B6  0A01               	xorlw	1	; case 1
   861  0001B8  B4D8               	btfsc	status,2,c
   862  0001BA  D789               	goto	l1138
   863  0001BC  0A03               	xorlw	3	; case 2
   864  0001BE  B4D8               	btfsc	status,2,c
   865  0001C0  D7A0               	goto	l1142
   866  0001C2  0A01               	xorlw	1	; case 3
   867  0001C4  B4D8               	btfsc	status,2,c
   868  0001C6  D7B7               	goto	l1146
   869  0001C8  0A07               	xorlw	7	; case 4
   870  0001CA  A4D8               	btfss	status,2,c
   871  0001CC  0012               	return	
   872  0001CE  D7CD               	goto	l1150
   873  0001D0                     __end_of_rafraichissement:
   874                           	opt stack 0
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           intcon	equ	0xFF2
   880                           intcon2	equ	0xFF1
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _segments *****************
   884 ;; Defined at:
   885 ;;		line 8 in file "converter.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  figure          1    wreg     unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  figure          1   30[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;		None               void
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   903 ;;Total ram usage:        1 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    3
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;;		_rafraichissement
   911 ;;		_initialisation
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  0002F4                     __ptext3:
   917                           	opt stack 0
   918  0002F4                     _segments:
   919                           	opt stack 27
   920                           
   921                           ;incstack = 0
   922                           ;segments@figure stored from wreg
   923  0002F4  6E1F               	movwf	segments@figure,c
   924                           
   925                           ;converter.c: 24: switch (figure) {
   926  0002F6  D050               	goto	l1092
   927  0002F8                     l112:
   928                           
   929                           ;converter.c: 26: PORTCbits.RC1 = 0;
   930  0002F8  9282               	bcf	3970,1,c	;volatile
   931                           
   932                           ;converter.c: 27: PORTCbits.RC2 = 0;
   933  0002FA  9482               	bcf	3970,2,c	;volatile
   934                           
   935                           ;converter.c: 28: PORTCbits.RC3 = 0;
   936  0002FC  9682               	bcf	3970,3,c	;volatile
   937                           
   938                           ;converter.c: 29: PORTCbits.RC4 = 0;
   939  0002FE  9882               	bcf	3970,4,c	;volatile
   940                           
   941                           ;converter.c: 30: PORTCbits.RC5 = 0;
   942  000300  9A82               	bcf	3970,5,c	;volatile
   943                           
   944                           ;converter.c: 31: PORTCbits.RC6 = 0;
   945  000302  9C82               	bcf	3970,6,c	;volatile
   946                           
   947                           ;converter.c: 32: PORTCbits.RC7 = 1;
   948  000304  8E82               	bsf	3970,7,c	;volatile
   949                           
   950                           ;converter.c: 33: break;
   951  000306  0012               	return	
   952  000308                     l114:
   953                           
   954                           ;converter.c: 36: PORTCbits.RC1 = 1;
   955  000308  8282               	bsf	3970,1,c	;volatile
   956                           
   957                           ;converter.c: 37: PORTCbits.RC2 = 0;
   958  00030A  9482               	bcf	3970,2,c	;volatile
   959                           
   960                           ;converter.c: 38: PORTCbits.RC3 = 0;
   961  00030C  9682               	bcf	3970,3,c	;volatile
   962                           
   963                           ;converter.c: 39: PORTCbits.RC4 = 1;
   964  00030E  8882               	bsf	3970,4,c	;volatile
   965                           
   966                           ;converter.c: 40: PORTCbits.RC5 = 1;
   967  000310  8A82               	bsf	3970,5,c	;volatile
   968                           
   969                           ;converter.c: 41: PORTCbits.RC6 = 1;
   970  000312  8C82               	bsf	3970,6,c	;volatile
   971                           
   972                           ;converter.c: 42: PORTCbits.RC7 = 1;
   973  000314  8E82               	bsf	3970,7,c	;volatile
   974                           
   975                           ;converter.c: 43: break;
   976  000316  0012               	return	
   977  000318                     l115:
   978                           
   979                           ;converter.c: 45: PORTCbits.RC1 = 0;
   980  000318  9282               	bcf	3970,1,c	;volatile
   981                           
   982                           ;converter.c: 46: PORTCbits.RC2 = 0;
   983  00031A  9482               	bcf	3970,2,c	;volatile
   984                           
   985                           ;converter.c: 47: PORTCbits.RC3 = 1;
   986  00031C  8682               	bsf	3970,3,c	;volatile
   987                           
   988                           ;converter.c: 48: PORTCbits.RC4 = 0;
   989  00031E  9882               	bcf	3970,4,c	;volatile
   990                           
   991                           ;converter.c: 49: PORTCbits.RC5 = 0;
   992  000320  9A82               	bcf	3970,5,c	;volatile
   993                           
   994                           ;converter.c: 50: PORTCbits.RC6 = 1;
   995  000322  8C82               	bsf	3970,6,c	;volatile
   996                           
   997                           ;converter.c: 51: PORTCbits.RC7 = 0;
   998  000324  9E82               	bcf	3970,7,c	;volatile
   999                           
  1000                           ;converter.c: 52: break;
  1001  000326  0012               	return	
  1002  000328                     l116:
  1003                           
  1004                           ;converter.c: 54: PORTCbits.RC1 = 0;
  1005  000328  9282               	bcf	3970,1,c	;volatile
  1006                           
  1007                           ;converter.c: 55: PORTCbits.RC2 = 0;
  1008  00032A  9482               	bcf	3970,2,c	;volatile
  1009                           
  1010                           ;converter.c: 56: PORTCbits.RC3 = 0;
  1011  00032C  9682               	bcf	3970,3,c	;volatile
  1012                           
  1013                           ;converter.c: 57: PORTCbits.RC4 = 0;
  1014  00032E  9882               	bcf	3970,4,c	;volatile
  1015                           
  1016                           ;converter.c: 58: PORTCbits.RC5 = 1;
  1017  000330  8A82               	bsf	3970,5,c	;volatile
  1018                           
  1019                           ;converter.c: 59: PORTCbits.RC6 = 1;
  1020  000332  8C82               	bsf	3970,6,c	;volatile
  1021                           
  1022                           ;converter.c: 60: PORTCbits.RC7 = 0;
  1023  000334  9E82               	bcf	3970,7,c	;volatile
  1024                           
  1025                           ;converter.c: 61: break;
  1026  000336  0012               	return	
  1027  000338                     l117:
  1028                           
  1029                           ;converter.c: 64: PORTCbits.RC1 = 1;
  1030  000338  8282               	bsf	3970,1,c	;volatile
  1031                           
  1032                           ;converter.c: 65: PORTCbits.RC2 = 0;
  1033  00033A  9482               	bcf	3970,2,c	;volatile
  1034                           
  1035                           ;converter.c: 66: PORTCbits.RC3 = 0;
  1036  00033C  9682               	bcf	3970,3,c	;volatile
  1037                           
  1038                           ;converter.c: 67: PORTCbits.RC4 = 1;
  1039  00033E  8882               	bsf	3970,4,c	;volatile
  1040                           
  1041                           ;converter.c: 68: PORTCbits.RC5 = 1;
  1042  000340  8A82               	bsf	3970,5,c	;volatile
  1043                           
  1044                           ;converter.c: 69: PORTCbits.RC6 = 0;
  1045  000342  9C82               	bcf	3970,6,c	;volatile
  1046                           
  1047                           ;converter.c: 70: PORTCbits.RC7 = 0;
  1048  000344  9E82               	bcf	3970,7,c	;volatile
  1049                           
  1050                           ;converter.c: 71: break;
  1051  000346  0012               	return	
  1052  000348                     l118:
  1053                           
  1054                           ;converter.c: 73: PORTCbits.RC1 = 0;
  1055  000348  9282               	bcf	3970,1,c	;volatile
  1056                           
  1057                           ;converter.c: 74: PORTCbits.RC2 = 1;
  1058  00034A  8482               	bsf	3970,2,c	;volatile
  1059                           
  1060                           ;converter.c: 75: PORTCbits.RC3 = 0;
  1061  00034C  9682               	bcf	3970,3,c	;volatile
  1062                           
  1063                           ;converter.c: 76: PORTCbits.RC4 = 0;
  1064  00034E  9882               	bcf	3970,4,c	;volatile
  1065                           
  1066                           ;converter.c: 77: PORTCbits.RC5 = 1;
  1067  000350  8A82               	bsf	3970,5,c	;volatile
  1068                           
  1069                           ;converter.c: 78: PORTCbits.RC6 = 0;
  1070  000352  9C82               	bcf	3970,6,c	;volatile
  1071                           
  1072                           ;converter.c: 79: PORTCbits.RC7 = 0;
  1073  000354  9E82               	bcf	3970,7,c	;volatile
  1074                           
  1075                           ;converter.c: 81: break;
  1076  000356  0012               	return	
  1077  000358                     l119:
  1078                           
  1079                           ;converter.c: 83: PORTCbits.RC1 = 0;
  1080  000358  9282               	bcf	3970,1,c	;volatile
  1081                           
  1082                           ;converter.c: 84: PORTCbits.RC2 = 1;
  1083  00035A  8482               	bsf	3970,2,c	;volatile
  1084                           
  1085                           ;converter.c: 85: PORTCbits.RC3 = 0;
  1086  00035C  9682               	bcf	3970,3,c	;volatile
  1087                           
  1088                           ;converter.c: 86: PORTCbits.RC4 = 0;
  1089  00035E  9882               	bcf	3970,4,c	;volatile
  1090                           
  1091                           ;converter.c: 87: PORTCbits.RC5 = 0;
  1092  000360  9A82               	bcf	3970,5,c	;volatile
  1093                           
  1094                           ;converter.c: 88: PORTCbits.RC6 = 0;
  1095  000362  9C82               	bcf	3970,6,c	;volatile
  1096                           
  1097                           ;converter.c: 89: PORTCbits.RC7 = 0;
  1098  000364  9E82               	bcf	3970,7,c	;volatile
  1099                           
  1100                           ;converter.c: 90: break;
  1101  000366  0012               	return	
  1102  000368                     l120:
  1103                           
  1104                           ;converter.c: 93: PORTCbits.RC1 = 0;
  1105  000368  9282               	bcf	3970,1,c	;volatile
  1106                           
  1107                           ;converter.c: 94: PORTCbits.RC2 = 0;
  1108  00036A  9482               	bcf	3970,2,c	;volatile
  1109                           
  1110                           ;converter.c: 95: PORTCbits.RC3 = 0;
  1111  00036C  9682               	bcf	3970,3,c	;volatile
  1112                           
  1113                           ;converter.c: 96: PORTCbits.RC4 = 1;
  1114  00036E  8882               	bsf	3970,4,c	;volatile
  1115                           
  1116                           ;converter.c: 97: PORTCbits.RC5 = 1;
  1117  000370  8A82               	bsf	3970,5,c	;volatile
  1118                           
  1119                           ;converter.c: 98: PORTCbits.RC6 = 1;
  1120  000372  8C82               	bsf	3970,6,c	;volatile
  1121                           
  1122                           ;converter.c: 99: PORTCbits.RC7 = 1;
  1123  000374  8E82               	bsf	3970,7,c	;volatile
  1124                           
  1125                           ;converter.c: 100: break;
  1126  000376  0012               	return	
  1127  000378                     l121:
  1128                           
  1129                           ;converter.c: 102: PORTCbits.RC1 = 0;
  1130  000378  9282               	bcf	3970,1,c	;volatile
  1131                           
  1132                           ;converter.c: 103: PORTCbits.RC2 = 0;
  1133  00037A  9482               	bcf	3970,2,c	;volatile
  1134                           
  1135                           ;converter.c: 104: PORTCbits.RC3 = 0;
  1136  00037C  9682               	bcf	3970,3,c	;volatile
  1137                           
  1138                           ;converter.c: 105: PORTCbits.RC4 = 0;
  1139  00037E  9882               	bcf	3970,4,c	;volatile
  1140                           
  1141                           ;converter.c: 106: PORTCbits.RC5 = 0;
  1142  000380  9A82               	bcf	3970,5,c	;volatile
  1143                           
  1144                           ;converter.c: 107: PORTCbits.RC6 = 0;
  1145  000382  9C82               	bcf	3970,6,c	;volatile
  1146                           
  1147                           ;converter.c: 108: PORTCbits.RC7 = 0;
  1148  000384  9E82               	bcf	3970,7,c	;volatile
  1149                           
  1150                           ;converter.c: 109: break;
  1151  000386  0012               	return	
  1152  000388                     l122:
  1153                           
  1154                           ;converter.c: 111: PORTCbits.RC1 = 0;
  1155  000388  9282               	bcf	3970,1,c	;volatile
  1156                           
  1157                           ;converter.c: 112: PORTCbits.RC2 = 0;
  1158  00038A  9482               	bcf	3970,2,c	;volatile
  1159                           
  1160                           ;converter.c: 113: PORTCbits.RC3 = 0;
  1161  00038C  9682               	bcf	3970,3,c	;volatile
  1162                           
  1163                           ;converter.c: 114: PORTCbits.RC4 = 0;
  1164  00038E  9882               	bcf	3970,4,c	;volatile
  1165                           
  1166                           ;converter.c: 115: PORTCbits.RC5 = 1;
  1167  000390  8A82               	bsf	3970,5,c	;volatile
  1168                           
  1169                           ;converter.c: 116: PORTCbits.RC6 = 0;
  1170  000392  9C82               	bcf	3970,6,c	;volatile
  1171                           
  1172                           ;converter.c: 117: PORTCbits.RC7 = 0;
  1173  000394  9E82               	bcf	3970,7,c	;volatile
  1174                           
  1175                           ;converter.c: 118: break;
  1176  000396  0012               	return	
  1177  000398                     l1092:
  1178  000398  501F               	movf	segments@figure,w,c
  1179                           
  1180                           ; Switch size 1, requested type "space"
  1181                           ; Number of cases is 10, Range of values is 0 to 9
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte           31    16 (average)
  1185                           ;	Chosen strategy is simple_byte
  1186  00039A  0A00               	xorlw	0	; case 0
  1187  00039C  B4D8               	btfsc	status,2,c
  1188  00039E  D7AC               	goto	l112
  1189  0003A0  0A01               	xorlw	1	; case 1
  1190  0003A2  B4D8               	btfsc	status,2,c
  1191  0003A4  D7B1               	goto	l114
  1192  0003A6  0A03               	xorlw	3	; case 2
  1193  0003A8  B4D8               	btfsc	status,2,c
  1194  0003AA  D7B6               	goto	l115
  1195  0003AC  0A01               	xorlw	1	; case 3
  1196  0003AE  B4D8               	btfsc	status,2,c
  1197  0003B0  D7BB               	goto	l116
  1198  0003B2  0A07               	xorlw	7	; case 4
  1199  0003B4  B4D8               	btfsc	status,2,c
  1200  0003B6  D7C0               	goto	l117
  1201  0003B8  0A01               	xorlw	1	; case 5
  1202  0003BA  B4D8               	btfsc	status,2,c
  1203  0003BC  D7C5               	goto	l118
  1204  0003BE  0A03               	xorlw	3	; case 6
  1205  0003C0  B4D8               	btfsc	status,2,c
  1206  0003C2  D7CA               	goto	l119
  1207  0003C4  0A01               	xorlw	1	; case 7
  1208  0003C6  B4D8               	btfsc	status,2,c
  1209  0003C8  D7CF               	goto	l120
  1210  0003CA  0A0F               	xorlw	15	; case 8
  1211  0003CC  B4D8               	btfsc	status,2,c
  1212  0003CE  D7D4               	goto	l121
  1213  0003D0  0A01               	xorlw	1	; case 9
  1214  0003D2  A4D8               	btfss	status,2,c
  1215  0003D4  0012               	return	
  1216  0003D6  D7D8               	goto	l122
  1217  0003D8                     __end_of_segments:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           intcon	equ	0xFF2
  1224                           intcon2	equ	0xFF1
  1225                           status	equ	0xFD8
  1226                           
  1227 ;; *************** function ___lwmod *****************
  1228 ;; Defined at:
  1229 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lwmod.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  dividend        2   37[COMRAM] unsigned int 
  1232 ;;  divisor         2   39[COMRAM] unsigned int 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  counter         1   41[COMRAM] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  2   37[COMRAM] unsigned int 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;Total ram usage:        5 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    3
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_rafraichissement
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text4
  1259  00069C                     __ptext4:
  1260                           	opt stack 0
  1261  00069C                     ___lwmod:
  1262                           	opt stack 26
  1263                           
  1264                           ;incstack = 0
  1265  00069C  5029               	movf	___lwmod@divisor+1,w,c
  1266  00069E  1028               	iorwf	___lwmod@divisor,w,c
  1267  0006A0  B4D8               	btfsc	status,2,c
  1268  0006A2  D018               	goto	l649
  1269  0006A4  0E01               	movlw	1
  1270  0006A6  6E2A               	movwf	___lwmod@counter,c
  1271  0006A8  D004               	goto	l1122
  1272  0006AA                     l1120:
  1273  0006AA  90D8               	bcf	status,0,c
  1274  0006AC  3628               	rlcf	___lwmod@divisor,f,c
  1275  0006AE  3629               	rlcf	___lwmod@divisor+1,f,c
  1276  0006B0  2A2A               	incf	___lwmod@counter,f,c
  1277  0006B2                     l1122:
  1278  0006B2  AE29               	btfss	___lwmod@divisor+1,7,c
  1279  0006B4  D7FA               	goto	l1120
  1280  0006B6                     l1124:
  1281  0006B6  5028               	movf	___lwmod@divisor,w,c
  1282  0006B8  5C26               	subwf	___lwmod@dividend,w,c
  1283  0006BA  5029               	movf	___lwmod@divisor+1,w,c
  1284  0006BC  5827               	subwfb	___lwmod@dividend+1,w,c
  1285  0006BE  A0D8               	btfss	status,0,c
  1286  0006C0  D004               	goto	l1128
  1287  0006C2  5028               	movf	___lwmod@divisor,w,c
  1288  0006C4  5E26               	subwf	___lwmod@dividend,f,c
  1289  0006C6  5029               	movf	___lwmod@divisor+1,w,c
  1290  0006C8  5A27               	subwfb	___lwmod@dividend+1,f,c
  1291  0006CA                     l1128:
  1292  0006CA  90D8               	bcf	status,0,c
  1293  0006CC  3229               	rrcf	___lwmod@divisor+1,f,c
  1294  0006CE  3228               	rrcf	___lwmod@divisor,f,c
  1295  0006D0  2E2A               	decfsz	___lwmod@counter,f,c
  1296  0006D2  D7F1               	goto	l1124
  1297  0006D4                     l649:
  1298  0006D4  C026  F026         	movff	___lwmod@dividend,?___lwmod
  1299  0006D8  C027  F027         	movff	___lwmod@dividend+1,?___lwmod+1
  1300  0006DC  0012               	return	
  1301  0006DE                     __end_of___lwmod:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           intcon2	equ	0xFF1
  1309                           status	equ	0xFD8
  1310                           
  1311 ;; *************** function ___lwdiv *****************
  1312 ;; Defined at:
  1313 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lwdiv.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  dividend        2   30[COMRAM] unsigned int 
  1316 ;;  divisor         2   32[COMRAM] unsigned int 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  quotient        2   34[COMRAM] unsigned int 
  1319 ;;  counter         1   36[COMRAM] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2   30[COMRAM] unsigned int 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;Total ram usage:        7 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    3
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_rafraichissement
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text5
  1344  0005F8                     __ptext5:
  1345                           	opt stack 0
  1346  0005F8                     ___lwdiv:
  1347                           	opt stack 26
  1348                           
  1349                           ;incstack = 0
  1350  0005F8  0E00               	movlw	0
  1351  0005FA  6E24               	movwf	___lwdiv@quotient+1,c
  1352  0005FC  0E00               	movlw	0
  1353  0005FE  6E23               	movwf	___lwdiv@quotient,c
  1354  000600  5022               	movf	___lwdiv@divisor+1,w,c
  1355  000602  1021               	iorwf	___lwdiv@divisor,w,c
  1356  000604  B4D8               	btfsc	status,2,c
  1357  000606  D01C               	goto	l639
  1358  000608  0E01               	movlw	1
  1359  00060A  6E25               	movwf	___lwdiv@counter,c
  1360  00060C  D004               	goto	l1102
  1361  00060E                     l1100:
  1362  00060E  90D8               	bcf	status,0,c
  1363  000610  3621               	rlcf	___lwdiv@divisor,f,c
  1364  000612  3622               	rlcf	___lwdiv@divisor+1,f,c
  1365  000614  2A25               	incf	___lwdiv@counter,f,c
  1366  000616                     l1102:
  1367  000616  AE22               	btfss	___lwdiv@divisor+1,7,c
  1368  000618  D7FA               	goto	l1100
  1369  00061A                     l1104:
  1370  00061A  90D8               	bcf	status,0,c
  1371  00061C  3623               	rlcf	___lwdiv@quotient,f,c
  1372  00061E  3624               	rlcf	___lwdiv@quotient+1,f,c
  1373  000620  5021               	movf	___lwdiv@divisor,w,c
  1374  000622  5C1F               	subwf	___lwdiv@dividend,w,c
  1375  000624  5022               	movf	___lwdiv@divisor+1,w,c
  1376  000626  5820               	subwfb	___lwdiv@dividend+1,w,c
  1377  000628  A0D8               	btfss	status,0,c
  1378  00062A  D005               	goto	l1112
  1379  00062C  5021               	movf	___lwdiv@divisor,w,c
  1380  00062E  5E1F               	subwf	___lwdiv@dividend,f,c
  1381  000630  5022               	movf	___lwdiv@divisor+1,w,c
  1382  000632  5A20               	subwfb	___lwdiv@dividend+1,f,c
  1383  000634  8023               	bsf	___lwdiv@quotient,0,c
  1384  000636                     l1112:
  1385  000636  90D8               	bcf	status,0,c
  1386  000638  3222               	rrcf	___lwdiv@divisor+1,f,c
  1387  00063A  3221               	rrcf	___lwdiv@divisor,f,c
  1388  00063C  2E25               	decfsz	___lwdiv@counter,f,c
  1389  00063E  D7ED               	goto	l1104
  1390  000640                     l639:
  1391  000640  C023  F01F         	movff	___lwdiv@quotient,?___lwdiv
  1392  000644  C024  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1393  000648  0012               	return	
  1394  00064A                     __end_of___lwdiv:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           intcon	equ	0xFF2
  1401                           intcon2	equ	0xFF1
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _low_interrupt *****************
  1405 ;; Defined at:
  1406 ;;		line 46 in file "main.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;		None               void
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1422 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1423 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1424 ;;Total ram usage:       14 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		i2_rafraichissement
  1429 ;; This function is called by:
  1430 ;;		Interrupt level 2
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	intcode
  1435  000008                     __pintcode:
  1436                           	opt stack 0
  1437  000008                     _low_interrupt:
  1438                           	opt stack 25
  1439                           
  1440                           ;incstack = 0
  1441  000008  CFFA F011          	movff	pclath,??_low_interrupt
  1442  00000C  CFFB F012          	movff	pclatu,??_low_interrupt+1
  1443  000010  CFE9 F013          	movff	fsr0l,??_low_interrupt+2
  1444  000014  CFEA F014          	movff	fsr0h,??_low_interrupt+3
  1445  000018  CFE1 F015          	movff	fsr1l,??_low_interrupt+4
  1446  00001C  CFE2 F016          	movff	fsr1h,??_low_interrupt+5
  1447  000020  CFD9 F017          	movff	fsr2l,??_low_interrupt+6
  1448  000024  CFDA F018          	movff	fsr2h,??_low_interrupt+7
  1449  000028  CFF3 F019          	movff	prodl,??_low_interrupt+8
  1450  00002C  CFF4 F01A          	movff	prodh,??_low_interrupt+9
  1451  000030  CFF6 F01B          	movff	tblptrl,??_low_interrupt+10
  1452  000034  CFF7 F01C          	movff	tblptrh,??_low_interrupt+11
  1453  000038  CFF8 F01D          	movff	tblptru,??_low_interrupt+12
  1454  00003C  CFF5 F01E          	movff	tablat,??_low_interrupt+13
  1455                           
  1456                           ;main.c: 48: if (TMR0IE && TMR0IF) {
  1457  000040  BAF2               	btfsc	intcon,5,c	;volatile
  1458  000042  A4F2               	btfss	intcon,2,c	;volatile
  1459  000044  D014               	goto	i2l68
  1460                           
  1461                           ;main.c: 50: TMR0 = 14;
  1462  000046  0E00               	movlw	0
  1463  000048  6ED7               	movwf	4055,c	;volatile
  1464  00004A  0E0E               	movlw	14
  1465  00004C  6ED6               	movwf	4054,c	;volatile
  1466                           
  1467                           ;main.c: 52: if (balayage == 4) {
  1468  00004E  5038               	movf	_balayage,w,c
  1469  000050  0A04               	xorlw	4
  1470  000052  A4D8               	btfss	status,2,c
  1471  000054  D003               	goto	i2l1042
  1472                           
  1473                           ;main.c: 53: balayage = 0;
  1474  000056  0E00               	movlw	0
  1475  000058  6E38               	movwf	_balayage,c
  1476                           
  1477                           ;main.c: 54: } else {
  1478  00005A  D001               	goto	i2l1044
  1479  00005C                     i2l1042:
  1480                           
  1481                           ;main.c: 55: balayage++;
  1482  00005C  2A38               	incf	_balayage,f,c
  1483  00005E                     i2l1044:
  1484                           
  1485                           ;main.c: 56: }
  1486                           ;main.c: 57: rafraichissement(balayage);
  1487  00005E  C038  F00D         	movff	_balayage,i2rafraichissement@afficheur
  1488  000062  6A0E               	clrf	i2rafraichissement@afficheur+1,c
  1489  000064  ECE8  F000         	call	i2_rafraichissement	;wreg free
  1490                           
  1491                           ;main.c: 58: time++;
  1492  000068  4A36               	infsnz	_time,f,c
  1493  00006A  2A37               	incf	_time+1,f,c
  1494                           
  1495                           ;main.c: 60: TMR0IF = 0;
  1496  00006C  94F2               	bcf	intcon,2,c	;volatile
  1497  00006E                     i2l68:
  1498  00006E  C01E  FFF5         	movff	??_low_interrupt+13,tablat
  1499  000072  C01D  FFF8         	movff	??_low_interrupt+12,tblptru
  1500  000076  C01C  FFF7         	movff	??_low_interrupt+11,tblptrh
  1501  00007A  C01B  FFF6         	movff	??_low_interrupt+10,tblptrl
  1502  00007E  C01A  FFF4         	movff	??_low_interrupt+9,prodh
  1503  000082  C019  FFF3         	movff	??_low_interrupt+8,prodl
  1504  000086  C018  FFDA         	movff	??_low_interrupt+7,fsr2h
  1505  00008A  C017  FFD9         	movff	??_low_interrupt+6,fsr2l
  1506  00008E  C016  FFE2         	movff	??_low_interrupt+5,fsr1h
  1507  000092  C015  FFE1         	movff	??_low_interrupt+4,fsr1l
  1508  000096  C014  FFEA         	movff	??_low_interrupt+3,fsr0h
  1509  00009A  C013  FFE9         	movff	??_low_interrupt+2,fsr0l
  1510  00009E  C012  FFFB         	movff	??_low_interrupt+1,pclatu
  1511  0000A2  C011  FFFA         	movff	??_low_interrupt,pclath
  1512  0000A6  0011               	retfie		f
  1513  0000A8                     __end_of_low_interrupt:
  1514                           	opt stack 0
  1515                           pclatu	equ	0xFFB
  1516                           pclath	equ	0xFFA
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           intcon	equ	0xFF2
  1524                           intcon2	equ	0xFF1
  1525                           fsr0h	equ	0xFEA
  1526                           fsr0l	equ	0xFE9
  1527                           fsr1h	equ	0xFE2
  1528                           fsr1l	equ	0xFE1
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function i2_rafraichissement *****************
  1534 ;; Defined at:
  1535 ;;		line 158 in file "main.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  afficheur       2   12[COMRAM] int 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;		None               void
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;Total ram usage:        4 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		i2___lwdiv
  1558 ;;		i2___lwmod
  1559 ;;		i2_segments
  1560 ;; This function is called by:
  1561 ;;		_low_interrupt
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text7
  1566  0001D0                     __ptext7:
  1567                           	opt stack 0
  1568  0001D0                     i2_rafraichissement:
  1569                           	opt stack 25
  1570                           
  1571                           ;main.c: 160: switch (afficheur) {
  1572                           
  1573                           ;incstack = 0
  1574  0001D0  D078               	goto	i2l1026
  1575  0001D2                     i2l1006:
  1576                           
  1577                           ;main.c: 163: segments(time % 10);
  1578  0001D2  C036  F008         	movff	_time,i2___lwmod@dividend
  1579  0001D6  C037  F009         	movff	_time+1,i2___lwmod@dividend+1
  1580  0001DA  0E00               	movlw	0
  1581  0001DC  6E0B               	movwf	i2___lwmod@divisor+1,c
  1582  0001DE  0E0A               	movlw	10
  1583  0001E0  6E0A               	movwf	i2___lwmod@divisor,c
  1584  0001E2  EC6F  F003         	call	i2___lwmod	;wreg free
  1585  0001E6  5008               	movf	?i2___lwmod,w,c
  1586  0001E8  ECEC  F001         	call	i2_segments
  1587                           
  1588                           ;main.c: 164: PORTA = 0b00000001;
  1589  0001EC  0E01               	movlw	1
  1590  0001EE  6E80               	movwf	3968,c	;volatile
  1591                           
  1592                           ;main.c: 165: break;
  1593  0001F0  0012               	return	
  1594  0001F2                     i2l1010:
  1595                           
  1596                           ;main.c: 167: segments((time / 10) % 10);
  1597  0001F2  0E00               	movlw	0
  1598  0001F4  6E04               	movwf	i2___lwdiv@divisor+1,c
  1599  0001F6  0E0A               	movlw	10
  1600  0001F8  6E03               	movwf	i2___lwdiv@divisor,c
  1601  0001FA  C036  F001         	movff	_time,i2___lwdiv@dividend
  1602  0001FE  C037  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1603  000202  EC25  F003         	call	i2___lwdiv	;wreg free
  1604  000206  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  1605  00020A  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1606  00020E  0E00               	movlw	0
  1607  000210  6E0B               	movwf	i2___lwmod@divisor+1,c
  1608  000212  0E0A               	movlw	10
  1609  000214  6E0A               	movwf	i2___lwmod@divisor,c
  1610  000216  EC6F  F003         	call	i2___lwmod	;wreg free
  1611  00021A  5008               	movf	?i2___lwmod,w,c
  1612  00021C  ECEC  F001         	call	i2_segments
  1613                           
  1614                           ;main.c: 168: PORTA = 0b00000010;
  1615  000220  0E02               	movlw	2
  1616  000222  6E80               	movwf	3968,c	;volatile
  1617                           
  1618                           ;main.c: 169: break;
  1619  000224  0012               	return	
  1620  000226                     i2l1014:
  1621                           
  1622                           ;main.c: 171: segments((time / 100) % 10);
  1623  000226  0E00               	movlw	0
  1624  000228  6E04               	movwf	i2___lwdiv@divisor+1,c
  1625  00022A  0E64               	movlw	100
  1626  00022C  6E03               	movwf	i2___lwdiv@divisor,c
  1627  00022E  C036  F001         	movff	_time,i2___lwdiv@dividend
  1628  000232  C037  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1629  000236  EC25  F003         	call	i2___lwdiv	;wreg free
  1630  00023A  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  1631  00023E  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1632  000242  0E00               	movlw	0
  1633  000244  6E0B               	movwf	i2___lwmod@divisor+1,c
  1634  000246  0E0A               	movlw	10
  1635  000248  6E0A               	movwf	i2___lwmod@divisor,c
  1636  00024A  EC6F  F003         	call	i2___lwmod	;wreg free
  1637  00024E  5008               	movf	?i2___lwmod,w,c
  1638  000250  ECEC  F001         	call	i2_segments
  1639                           
  1640                           ;main.c: 172: PORTA = 0b00000100;
  1641  000254  0E04               	movlw	4
  1642  000256  6E80               	movwf	3968,c	;volatile
  1643                           
  1644                           ;main.c: 173: break;
  1645  000258  0012               	return	
  1646  00025A                     i2l1018:
  1647                           
  1648                           ;main.c: 175: segments((time / 1000) % 10);
  1649  00025A  0E03               	movlw	3
  1650  00025C  6E04               	movwf	i2___lwdiv@divisor+1,c
  1651  00025E  0EE8               	movlw	232
  1652  000260  6E03               	movwf	i2___lwdiv@divisor,c
  1653  000262  C036  F001         	movff	_time,i2___lwdiv@dividend
  1654  000266  C037  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1655  00026A  EC25  F003         	call	i2___lwdiv	;wreg free
  1656  00026E  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  1657  000272  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1658  000276  0E00               	movlw	0
  1659  000278  6E0B               	movwf	i2___lwmod@divisor+1,c
  1660  00027A  0E0A               	movlw	10
  1661  00027C  6E0A               	movwf	i2___lwmod@divisor,c
  1662  00027E  EC6F  F003         	call	i2___lwmod	;wreg free
  1663  000282  5008               	movf	?i2___lwmod,w,c
  1664  000284  ECEC  F001         	call	i2_segments
  1665                           
  1666                           ;main.c: 176: PORTA = 0b00001000;
  1667  000288  0E08               	movlw	8
  1668  00028A  6E80               	movwf	3968,c	;volatile
  1669                           
  1670                           ;main.c: 177: break;
  1671  00028C  0012               	return	
  1672  00028E                     i2l1022:
  1673                           
  1674                           ;main.c: 179: segments((time / 10000) % 10);
  1675  00028E  0E27               	movlw	39
  1676  000290  6E04               	movwf	i2___lwdiv@divisor+1,c
  1677  000292  0E10               	movlw	16
  1678  000294  6E03               	movwf	i2___lwdiv@divisor,c
  1679  000296  C036  F001         	movff	_time,i2___lwdiv@dividend
  1680  00029A  C037  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1681  00029E  EC25  F003         	call	i2___lwdiv	;wreg free
  1682  0002A2  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  1683  0002A6  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1684  0002AA  0E00               	movlw	0
  1685  0002AC  6E0B               	movwf	i2___lwmod@divisor+1,c
  1686  0002AE  0E0A               	movlw	10
  1687  0002B0  6E0A               	movwf	i2___lwmod@divisor,c
  1688  0002B2  EC6F  F003         	call	i2___lwmod	;wreg free
  1689  0002B6  5008               	movf	?i2___lwmod,w,c
  1690  0002B8  ECEC  F001         	call	i2_segments
  1691                           
  1692                           ;main.c: 180: PORTA = 0b00100000;
  1693  0002BC  0E20               	movlw	32
  1694  0002BE  6E80               	movwf	3968,c	;volatile
  1695                           
  1696                           ;main.c: 181: break;
  1697  0002C0  0012               	return	
  1698  0002C2                     i2l1026:
  1699  0002C2  C00D  F00F         	movff	i2rafraichissement@afficheur,??i2_rafraichissement
  1700  0002C6  C00E  F010         	movff	i2rafraichissement@afficheur+1,??i2_rafraichissement+1
  1701                           
  1702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1703                           ; Switch size 1, requested type "space"
  1704                           ; Number of cases is 1, Range of values is 0 to 0
  1705                           ; switch strategies available:
  1706                           ; Name         Instructions Cycles
  1707                           ; simple_byte            4     3 (average)
  1708                           ;	Chosen strategy is simple_byte
  1709  0002CA  5010               	movf	??i2_rafraichissement+1,w,c
  1710  0002CC  0A00               	xorlw	0	; case 0
  1711  0002CE  A4D8               	btfss	status,2,c
  1712  0002D0  0012               	return	
  1713                           
  1714                           ; Switch size 1, requested type "space"
  1715                           ; Number of cases is 5, Range of values is 0 to 4
  1716                           ; switch strategies available:
  1717                           ; Name         Instructions Cycles
  1718                           ; simple_byte           16     9 (average)
  1719                           ;	Chosen strategy is simple_byte
  1720  0002D2  500F               	movf	??i2_rafraichissement,w,c
  1721  0002D4  0A00               	xorlw	0	; case 0
  1722  0002D6  B4D8               	btfsc	status,2,c
  1723  0002D8  D77C               	goto	i2l1006
  1724  0002DA  0A01               	xorlw	1	; case 1
  1725  0002DC  B4D8               	btfsc	status,2,c
  1726  0002DE  D789               	goto	i2l1010
  1727  0002E0  0A03               	xorlw	3	; case 2
  1728  0002E2  B4D8               	btfsc	status,2,c
  1729  0002E4  D7A0               	goto	i2l1014
  1730  0002E6  0A01               	xorlw	1	; case 3
  1731  0002E8  B4D8               	btfsc	status,2,c
  1732  0002EA  D7B7               	goto	i2l1018
  1733  0002EC  0A07               	xorlw	7	; case 4
  1734  0002EE  A4D8               	btfss	status,2,c
  1735  0002F0  0012               	return	
  1736  0002F2  D7CD               	goto	i2l1022
  1737  0002F4                     __end_ofi2_rafraichissement:
  1738                           	opt stack 0
  1739                           pclatu	equ	0xFFB
  1740                           pclath	equ	0xFFA
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           intcon	equ	0xFF2
  1748                           intcon2	equ	0xFF1
  1749                           fsr0h	equ	0xFEA
  1750                           fsr0l	equ	0xFE9
  1751                           fsr1h	equ	0xFE2
  1752                           fsr1l	equ	0xFE1
  1753                           fsr2h	equ	0xFDA
  1754                           fsr2l	equ	0xFD9
  1755                           status	equ	0xFD8
  1756                           
  1757 ;; *************** function i2_segments *****************
  1758 ;; Defined at:
  1759 ;;		line 8 in file "converter.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  figure          1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  figure          1    0[COMRAM] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;		None               void
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;Total ram usage:        1 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		i2_rafraichissement
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text8
  1787  0003D8                     __ptext8:
  1788                           	opt stack 0
  1789  0003D8                     i2_segments:
  1790                           	opt stack 25
  1791                           
  1792                           ;incstack = 0
  1793                           ;i2segments@figure stored from wreg
  1794  0003D8  6E01               	movwf	i2segments@figure,c
  1795                           
  1796                           ;converter.c: 24: switch (figure) {
  1797  0003DA  D050               	goto	i2l1002
  1798  0003DC                     i2l112:
  1799                           
  1800                           ;converter.c: 26: PORTCbits.RC1 = 0;
  1801  0003DC  9282               	bcf	3970,1,c	;volatile
  1802                           
  1803                           ;converter.c: 27: PORTCbits.RC2 = 0;
  1804  0003DE  9482               	bcf	3970,2,c	;volatile
  1805                           
  1806                           ;converter.c: 28: PORTCbits.RC3 = 0;
  1807  0003E0  9682               	bcf	3970,3,c	;volatile
  1808                           
  1809                           ;converter.c: 29: PORTCbits.RC4 = 0;
  1810  0003E2  9882               	bcf	3970,4,c	;volatile
  1811                           
  1812                           ;converter.c: 30: PORTCbits.RC5 = 0;
  1813  0003E4  9A82               	bcf	3970,5,c	;volatile
  1814                           
  1815                           ;converter.c: 31: PORTCbits.RC6 = 0;
  1816  0003E6  9C82               	bcf	3970,6,c	;volatile
  1817                           
  1818                           ;converter.c: 32: PORTCbits.RC7 = 1;
  1819  0003E8  8E82               	bsf	3970,7,c	;volatile
  1820                           
  1821                           ;converter.c: 33: break;
  1822  0003EA  0012               	return	
  1823  0003EC                     i2l114:
  1824                           
  1825                           ;converter.c: 36: PORTCbits.RC1 = 1;
  1826  0003EC  8282               	bsf	3970,1,c	;volatile
  1827                           
  1828                           ;converter.c: 37: PORTCbits.RC2 = 0;
  1829  0003EE  9482               	bcf	3970,2,c	;volatile
  1830                           
  1831                           ;converter.c: 38: PORTCbits.RC3 = 0;
  1832  0003F0  9682               	bcf	3970,3,c	;volatile
  1833                           
  1834                           ;converter.c: 39: PORTCbits.RC4 = 1;
  1835  0003F2  8882               	bsf	3970,4,c	;volatile
  1836                           
  1837                           ;converter.c: 40: PORTCbits.RC5 = 1;
  1838  0003F4  8A82               	bsf	3970,5,c	;volatile
  1839                           
  1840                           ;converter.c: 41: PORTCbits.RC6 = 1;
  1841  0003F6  8C82               	bsf	3970,6,c	;volatile
  1842                           
  1843                           ;converter.c: 42: PORTCbits.RC7 = 1;
  1844  0003F8  8E82               	bsf	3970,7,c	;volatile
  1845                           
  1846                           ;converter.c: 43: break;
  1847  0003FA  0012               	return	
  1848  0003FC                     i2l115:
  1849                           
  1850                           ;converter.c: 45: PORTCbits.RC1 = 0;
  1851  0003FC  9282               	bcf	3970,1,c	;volatile
  1852                           
  1853                           ;converter.c: 46: PORTCbits.RC2 = 0;
  1854  0003FE  9482               	bcf	3970,2,c	;volatile
  1855                           
  1856                           ;converter.c: 47: PORTCbits.RC3 = 1;
  1857  000400  8682               	bsf	3970,3,c	;volatile
  1858                           
  1859                           ;converter.c: 48: PORTCbits.RC4 = 0;
  1860  000402  9882               	bcf	3970,4,c	;volatile
  1861                           
  1862                           ;converter.c: 49: PORTCbits.RC5 = 0;
  1863  000404  9A82               	bcf	3970,5,c	;volatile
  1864                           
  1865                           ;converter.c: 50: PORTCbits.RC6 = 1;
  1866  000406  8C82               	bsf	3970,6,c	;volatile
  1867                           
  1868                           ;converter.c: 51: PORTCbits.RC7 = 0;
  1869  000408  9E82               	bcf	3970,7,c	;volatile
  1870                           
  1871                           ;converter.c: 52: break;
  1872  00040A  0012               	return	
  1873  00040C                     i2l116:
  1874                           
  1875                           ;converter.c: 54: PORTCbits.RC1 = 0;
  1876  00040C  9282               	bcf	3970,1,c	;volatile
  1877                           
  1878                           ;converter.c: 55: PORTCbits.RC2 = 0;
  1879  00040E  9482               	bcf	3970,2,c	;volatile
  1880                           
  1881                           ;converter.c: 56: PORTCbits.RC3 = 0;
  1882  000410  9682               	bcf	3970,3,c	;volatile
  1883                           
  1884                           ;converter.c: 57: PORTCbits.RC4 = 0;
  1885  000412  9882               	bcf	3970,4,c	;volatile
  1886                           
  1887                           ;converter.c: 58: PORTCbits.RC5 = 1;
  1888  000414  8A82               	bsf	3970,5,c	;volatile
  1889                           
  1890                           ;converter.c: 59: PORTCbits.RC6 = 1;
  1891  000416  8C82               	bsf	3970,6,c	;volatile
  1892                           
  1893                           ;converter.c: 60: PORTCbits.RC7 = 0;
  1894  000418  9E82               	bcf	3970,7,c	;volatile
  1895                           
  1896                           ;converter.c: 61: break;
  1897  00041A  0012               	return	
  1898  00041C                     i2l117:
  1899                           
  1900                           ;converter.c: 64: PORTCbits.RC1 = 1;
  1901  00041C  8282               	bsf	3970,1,c	;volatile
  1902                           
  1903                           ;converter.c: 65: PORTCbits.RC2 = 0;
  1904  00041E  9482               	bcf	3970,2,c	;volatile
  1905                           
  1906                           ;converter.c: 66: PORTCbits.RC3 = 0;
  1907  000420  9682               	bcf	3970,3,c	;volatile
  1908                           
  1909                           ;converter.c: 67: PORTCbits.RC4 = 1;
  1910  000422  8882               	bsf	3970,4,c	;volatile
  1911                           
  1912                           ;converter.c: 68: PORTCbits.RC5 = 1;
  1913  000424  8A82               	bsf	3970,5,c	;volatile
  1914                           
  1915                           ;converter.c: 69: PORTCbits.RC6 = 0;
  1916  000426  9C82               	bcf	3970,6,c	;volatile
  1917                           
  1918                           ;converter.c: 70: PORTCbits.RC7 = 0;
  1919  000428  9E82               	bcf	3970,7,c	;volatile
  1920                           
  1921                           ;converter.c: 71: break;
  1922  00042A  0012               	return	
  1923  00042C                     i2l118:
  1924                           
  1925                           ;converter.c: 73: PORTCbits.RC1 = 0;
  1926  00042C  9282               	bcf	3970,1,c	;volatile
  1927                           
  1928                           ;converter.c: 74: PORTCbits.RC2 = 1;
  1929  00042E  8482               	bsf	3970,2,c	;volatile
  1930                           
  1931                           ;converter.c: 75: PORTCbits.RC3 = 0;
  1932  000430  9682               	bcf	3970,3,c	;volatile
  1933                           
  1934                           ;converter.c: 76: PORTCbits.RC4 = 0;
  1935  000432  9882               	bcf	3970,4,c	;volatile
  1936                           
  1937                           ;converter.c: 77: PORTCbits.RC5 = 1;
  1938  000434  8A82               	bsf	3970,5,c	;volatile
  1939                           
  1940                           ;converter.c: 78: PORTCbits.RC6 = 0;
  1941  000436  9C82               	bcf	3970,6,c	;volatile
  1942                           
  1943                           ;converter.c: 79: PORTCbits.RC7 = 0;
  1944  000438  9E82               	bcf	3970,7,c	;volatile
  1945                           
  1946                           ;converter.c: 81: break;
  1947  00043A  0012               	return	
  1948  00043C                     i2l119:
  1949                           
  1950                           ;converter.c: 83: PORTCbits.RC1 = 0;
  1951  00043C  9282               	bcf	3970,1,c	;volatile
  1952                           
  1953                           ;converter.c: 84: PORTCbits.RC2 = 1;
  1954  00043E  8482               	bsf	3970,2,c	;volatile
  1955                           
  1956                           ;converter.c: 85: PORTCbits.RC3 = 0;
  1957  000440  9682               	bcf	3970,3,c	;volatile
  1958                           
  1959                           ;converter.c: 86: PORTCbits.RC4 = 0;
  1960  000442  9882               	bcf	3970,4,c	;volatile
  1961                           
  1962                           ;converter.c: 87: PORTCbits.RC5 = 0;
  1963  000444  9A82               	bcf	3970,5,c	;volatile
  1964                           
  1965                           ;converter.c: 88: PORTCbits.RC6 = 0;
  1966  000446  9C82               	bcf	3970,6,c	;volatile
  1967                           
  1968                           ;converter.c: 89: PORTCbits.RC7 = 0;
  1969  000448  9E82               	bcf	3970,7,c	;volatile
  1970                           
  1971                           ;converter.c: 90: break;
  1972  00044A  0012               	return	
  1973  00044C                     i2l120:
  1974                           
  1975                           ;converter.c: 93: PORTCbits.RC1 = 0;
  1976  00044C  9282               	bcf	3970,1,c	;volatile
  1977                           
  1978                           ;converter.c: 94: PORTCbits.RC2 = 0;
  1979  00044E  9482               	bcf	3970,2,c	;volatile
  1980                           
  1981                           ;converter.c: 95: PORTCbits.RC3 = 0;
  1982  000450  9682               	bcf	3970,3,c	;volatile
  1983                           
  1984                           ;converter.c: 96: PORTCbits.RC4 = 1;
  1985  000452  8882               	bsf	3970,4,c	;volatile
  1986                           
  1987                           ;converter.c: 97: PORTCbits.RC5 = 1;
  1988  000454  8A82               	bsf	3970,5,c	;volatile
  1989                           
  1990                           ;converter.c: 98: PORTCbits.RC6 = 1;
  1991  000456  8C82               	bsf	3970,6,c	;volatile
  1992                           
  1993                           ;converter.c: 99: PORTCbits.RC7 = 1;
  1994  000458  8E82               	bsf	3970,7,c	;volatile
  1995                           
  1996                           ;converter.c: 100: break;
  1997  00045A  0012               	return	
  1998  00045C                     i2l121:
  1999                           
  2000                           ;converter.c: 102: PORTCbits.RC1 = 0;
  2001  00045C  9282               	bcf	3970,1,c	;volatile
  2002                           
  2003                           ;converter.c: 103: PORTCbits.RC2 = 0;
  2004  00045E  9482               	bcf	3970,2,c	;volatile
  2005                           
  2006                           ;converter.c: 104: PORTCbits.RC3 = 0;
  2007  000460  9682               	bcf	3970,3,c	;volatile
  2008                           
  2009                           ;converter.c: 105: PORTCbits.RC4 = 0;
  2010  000462  9882               	bcf	3970,4,c	;volatile
  2011                           
  2012                           ;converter.c: 106: PORTCbits.RC5 = 0;
  2013  000464  9A82               	bcf	3970,5,c	;volatile
  2014                           
  2015                           ;converter.c: 107: PORTCbits.RC6 = 0;
  2016  000466  9C82               	bcf	3970,6,c	;volatile
  2017                           
  2018                           ;converter.c: 108: PORTCbits.RC7 = 0;
  2019  000468  9E82               	bcf	3970,7,c	;volatile
  2020                           
  2021                           ;converter.c: 109: break;
  2022  00046A  0012               	return	
  2023  00046C                     i2l122:
  2024                           
  2025                           ;converter.c: 111: PORTCbits.RC1 = 0;
  2026  00046C  9282               	bcf	3970,1,c	;volatile
  2027                           
  2028                           ;converter.c: 112: PORTCbits.RC2 = 0;
  2029  00046E  9482               	bcf	3970,2,c	;volatile
  2030                           
  2031                           ;converter.c: 113: PORTCbits.RC3 = 0;
  2032  000470  9682               	bcf	3970,3,c	;volatile
  2033                           
  2034                           ;converter.c: 114: PORTCbits.RC4 = 0;
  2035  000472  9882               	bcf	3970,4,c	;volatile
  2036                           
  2037                           ;converter.c: 115: PORTCbits.RC5 = 1;
  2038  000474  8A82               	bsf	3970,5,c	;volatile
  2039                           
  2040                           ;converter.c: 116: PORTCbits.RC6 = 0;
  2041  000476  9C82               	bcf	3970,6,c	;volatile
  2042                           
  2043                           ;converter.c: 117: PORTCbits.RC7 = 0;
  2044  000478  9E82               	bcf	3970,7,c	;volatile
  2045                           
  2046                           ;converter.c: 118: break;
  2047  00047A  0012               	return	
  2048  00047C                     i2l1002:
  2049  00047C  5001               	movf	i2segments@figure,w,c
  2050                           
  2051                           ; Switch size 1, requested type "space"
  2052                           ; Number of cases is 10, Range of values is 0 to 9
  2053                           ; switch strategies available:
  2054                           ; Name         Instructions Cycles
  2055                           ; simple_byte           31    16 (average)
  2056                           ;	Chosen strategy is simple_byte
  2057  00047E  0A00               	xorlw	0	; case 0
  2058  000480  B4D8               	btfsc	status,2,c
  2059  000482  D7AC               	goto	i2l112
  2060  000484  0A01               	xorlw	1	; case 1
  2061  000486  B4D8               	btfsc	status,2,c
  2062  000488  D7B1               	goto	i2l114
  2063  00048A  0A03               	xorlw	3	; case 2
  2064  00048C  B4D8               	btfsc	status,2,c
  2065  00048E  D7B6               	goto	i2l115
  2066  000490  0A01               	xorlw	1	; case 3
  2067  000492  B4D8               	btfsc	status,2,c
  2068  000494  D7BB               	goto	i2l116
  2069  000496  0A07               	xorlw	7	; case 4
  2070  000498  B4D8               	btfsc	status,2,c
  2071  00049A  D7C0               	goto	i2l117
  2072  00049C  0A01               	xorlw	1	; case 5
  2073  00049E  B4D8               	btfsc	status,2,c
  2074  0004A0  D7C5               	goto	i2l118
  2075  0004A2  0A03               	xorlw	3	; case 6
  2076  0004A4  B4D8               	btfsc	status,2,c
  2077  0004A6  D7CA               	goto	i2l119
  2078  0004A8  0A01               	xorlw	1	; case 7
  2079  0004AA  B4D8               	btfsc	status,2,c
  2080  0004AC  D7CF               	goto	i2l120
  2081  0004AE  0A0F               	xorlw	15	; case 8
  2082  0004B0  B4D8               	btfsc	status,2,c
  2083  0004B2  D7D4               	goto	i2l121
  2084  0004B4  0A01               	xorlw	1	; case 9
  2085  0004B6  A4D8               	btfss	status,2,c
  2086  0004B8  0012               	return	
  2087  0004BA  D7D8               	goto	i2l122
  2088  0004BC                     __end_ofi2_segments:
  2089                           	opt stack 0
  2090                           pclatu	equ	0xFFB
  2091                           pclath	equ	0xFFA
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           prodh	equ	0xFF4
  2097                           prodl	equ	0xFF3
  2098                           intcon	equ	0xFF2
  2099                           intcon2	equ	0xFF1
  2100                           fsr0h	equ	0xFEA
  2101                           fsr0l	equ	0xFE9
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           fsr2h	equ	0xFDA
  2105                           fsr2l	equ	0xFD9
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function i2___lwmod *****************
  2109 ;; Defined at:
  2110 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lwmod.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  dividend        2    7[COMRAM] unsigned int 
  2113 ;;  divisor         2    9[COMRAM] unsigned int 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  __lwmod         1   11[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2    7[COMRAM] unsigned int 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;Total ram usage:        5 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		i2_rafraichissement
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text9
  2139  0006DE                     __ptext9:
  2140                           	opt stack 0
  2141  0006DE                     i2___lwmod:
  2142                           	opt stack 25
  2143                           
  2144                           ;incstack = 0
  2145  0006DE  500B               	movf	i2___lwmod@divisor+1,w,c
  2146  0006E0  100A               	iorwf	i2___lwmod@divisor,w,c
  2147  0006E2  B4D8               	btfsc	status,2,c
  2148  0006E4  D018               	goto	i2l649
  2149  0006E6  0E01               	movlw	1
  2150  0006E8  6E0C               	movwf	i2___lwmod@counter,c
  2151  0006EA  D004               	goto	i2l802
  2152  0006EC                     i2l800:
  2153  0006EC  90D8               	bcf	status,0,c
  2154  0006EE  360A               	rlcf	i2___lwmod@divisor,f,c
  2155  0006F0  360B               	rlcf	i2___lwmod@divisor+1,f,c
  2156  0006F2  2A0C               	incf	i2___lwmod@counter,f,c
  2157  0006F4                     i2l802:
  2158  0006F4  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  2159  0006F6  D7FA               	goto	i2l800
  2160  0006F8                     i2l804:
  2161  0006F8  500A               	movf	i2___lwmod@divisor,w,c
  2162  0006FA  5C08               	subwf	i2___lwmod@dividend,w,c
  2163  0006FC  500B               	movf	i2___lwmod@divisor+1,w,c
  2164  0006FE  5809               	subwfb	i2___lwmod@dividend+1,w,c
  2165  000700  A0D8               	btfss	status,0,c
  2166  000702  D004               	goto	i2l808
  2167  000704  500A               	movf	i2___lwmod@divisor,w,c
  2168  000706  5E08               	subwf	i2___lwmod@dividend,f,c
  2169  000708  500B               	movf	i2___lwmod@divisor+1,w,c
  2170  00070A  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  2171  00070C                     i2l808:
  2172  00070C  90D8               	bcf	status,0,c
  2173  00070E  320B               	rrcf	i2___lwmod@divisor+1,f,c
  2174  000710  320A               	rrcf	i2___lwmod@divisor,f,c
  2175  000712  2E0C               	decfsz	i2___lwmod@counter,f,c
  2176  000714  D7F1               	goto	i2l804
  2177  000716                     i2l649:
  2178  000716  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  2179  00071A  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2180  00071E  0012               	return	
  2181  000720                     __end_ofi2___lwmod:
  2182                           	opt stack 0
  2183                           pclatu	equ	0xFFB
  2184                           pclath	equ	0xFFA
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           intcon	equ	0xFF2
  2192                           intcon2	equ	0xFF1
  2193                           fsr0h	equ	0xFEA
  2194                           fsr0l	equ	0xFE9
  2195                           fsr1h	equ	0xFE2
  2196                           fsr1l	equ	0xFE1
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function i2___lwdiv *****************
  2202 ;; Defined at:
  2203 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lwdiv.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  dividend        2    0[COMRAM] unsigned int 
  2206 ;;  divisor         2    2[COMRAM] unsigned int 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  2209 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2    0[COMRAM] unsigned int 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2222 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2223 ;;Total ram usage:        7 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		i2_rafraichissement
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text10
  2233  00064A                     __ptext10:
  2234                           	opt stack 0
  2235  00064A                     i2___lwdiv:
  2236                           	opt stack 25
  2237                           
  2238                           ;incstack = 0
  2239  00064A  0E00               	movlw	0
  2240  00064C  6E06               	movwf	i2___lwdiv@quotient+1,c
  2241  00064E  0E00               	movlw	0
  2242  000650  6E05               	movwf	i2___lwdiv@quotient,c
  2243  000652  5004               	movf	i2___lwdiv@divisor+1,w,c
  2244  000654  1003               	iorwf	i2___lwdiv@divisor,w,c
  2245  000656  B4D8               	btfsc	status,2,c
  2246  000658  D01C               	goto	i2l639
  2247  00065A  0E01               	movlw	1
  2248  00065C  6E07               	movwf	i2___lwdiv@counter,c
  2249  00065E  D004               	goto	i2l782
  2250  000660                     i2l780:
  2251  000660  90D8               	bcf	status,0,c
  2252  000662  3603               	rlcf	i2___lwdiv@divisor,f,c
  2253  000664  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  2254  000666  2A07               	incf	i2___lwdiv@counter,f,c
  2255  000668                     i2l782:
  2256  000668  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  2257  00066A  D7FA               	goto	i2l780
  2258  00066C                     i2l784:
  2259  00066C  90D8               	bcf	status,0,c
  2260  00066E  3605               	rlcf	i2___lwdiv@quotient,f,c
  2261  000670  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  2262  000672  5003               	movf	i2___lwdiv@divisor,w,c
  2263  000674  5C01               	subwf	i2___lwdiv@dividend,w,c
  2264  000676  5004               	movf	i2___lwdiv@divisor+1,w,c
  2265  000678  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  2266  00067A  A0D8               	btfss	status,0,c
  2267  00067C  D005               	goto	i2l792
  2268  00067E  5003               	movf	i2___lwdiv@divisor,w,c
  2269  000680  5E01               	subwf	i2___lwdiv@dividend,f,c
  2270  000682  5004               	movf	i2___lwdiv@divisor+1,w,c
  2271  000684  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  2272  000686  8005               	bsf	i2___lwdiv@quotient,0,c
  2273  000688                     i2l792:
  2274  000688  90D8               	bcf	status,0,c
  2275  00068A  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  2276  00068C  3203               	rrcf	i2___lwdiv@divisor,f,c
  2277  00068E  2E07               	decfsz	i2___lwdiv@counter,f,c
  2278  000690  D7ED               	goto	i2l784
  2279  000692                     i2l639:
  2280  000692  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  2281  000696  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  2282  00069A  0012               	return	
  2283  00069C                     __end_ofi2___lwdiv:
  2284                           	opt stack 0
  2285  0000                     pclatu	equ	0xFFB
  2286                           pclath	equ	0xFFA
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           prodh	equ	0xFF4
  2292                           prodl	equ	0xFF3
  2293                           intcon	equ	0xFF2
  2294                           intcon2	equ	0xFF1
  2295                           fsr0h	equ	0xFEA
  2296                           fsr0l	equ	0xFE9
  2297                           fsr1h	equ	0xFE2
  2298                           fsr1l	equ	0xFE1
  2299                           fsr2h	equ	0xFDA
  2300                           fsr2l	equ	0xFD9
  2301                           status	equ	0xFD8
  2302                           pclatu	equ	0xFFB
  2303                           pclath	equ	0xFFA
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           prodh	equ	0xFF4
  2309                           prodl	equ	0xFF3
  2310                           intcon	equ	0xFF2
  2311                           intcon2	equ	0xFF1
  2312                           fsr0h	equ	0xFEA
  2313                           fsr0l	equ	0xFE9
  2314                           fsr1h	equ	0xFE2
  2315                           fsr1l	equ	0xFE1
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320                           	psect	rparam
  2321  0000                     pclatu	equ	0xFFB
  2322                           pclath	equ	0xFFA
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           prodh	equ	0xFF4
  2328                           prodl	equ	0xFF3
  2329                           intcon	equ	0xFF2
  2330                           intcon2	equ	0xFF1
  2331                           fsr0h	equ	0xFEA
  2332                           fsr0l	equ	0xFE9
  2333                           fsr1h	equ	0xFE2
  2334                           fsr1l	equ	0xFE1
  2335                           fsr2h	equ	0xFDA
  2336                           fsr2l	equ	0xFD9
  2337                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      60
    BANK0           160      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_initialisation
    _initialisation->_rafraichissement
    _rafraichissement->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _low_interrupt in COMRAM

    _low_interrupt->i2_rafraichissement
    i2_rafraichissement->i2___lwmod
    i2___lwmod->i2___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_interrupt in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     6      5    2756
                                             48 COMRAM     5     0      5
                                              0 BANK0      6     6      0
                     _initialisation
                   _rafraichissement
                           _segments
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       2     2      0    1332
                                             46 COMRAM     2     2      0
                   _rafraichissement
                           _segments
 ---------------------------------------------------------------------------------
 (1) _rafraichissement                                     4     2      2    1242
                                             42 COMRAM     4     2      2
                            ___lwdiv
                            ___lwmod
                           _segments
 ---------------------------------------------------------------------------------
 (1) _segments                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     589
                                             37 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     506
                                             30 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_interrupt                                       14    14      0     622
                                             16 COMRAM    14    14      0
                 i2_rafraichissement
 ---------------------------------------------------------------------------------
 (5) i2_rafraichissement                                   4     2      2     622
                                             12 COMRAM     4     2      2
                          i2___lwdiv
                          i2___lwmod
                         i2_segments
 ---------------------------------------------------------------------------------
 (6) i2_segments                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) i2___lwmod                                            5     1      4     295
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i2___lwdiv                                            7     3      4     257
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
     _rafraichissement
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _segments
     _segments
   _rafraichissement
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _segments
   _segments

 _low_interrupt (ROOT)
   i2_rafraichissement
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_segments

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6       6       5        3.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      3C       1       63.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42       6        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Sep 25 19:23:12 2014

__size_ofi2_rafraichissement 0124                           l72 04F8                           l81 0532  
                         l85 056C                           l86 0570           i2___lwdiv@dividend 0001  
                        l120 0368                          l112 02F8                          l121 0378  
                        l122 0388                          l114 0308                          l115 0318  
                        l116 0328                          l117 0338                          l118 0348  
                        l119 0358                          l639 0640                          l649 06D4  
                        _GIE 007F97                          _PSA 007EAB                 __CFG_IESO$ON 000000  
             segments@figure 001F                         l1100 060E                         l1102 0616  
                       l1112 0636                         l1104 061A                         l1120 06AA  
                       l1122 06B2                         l1124 06B6                         l1150 016A  
                       l1142 0102                         l1134 00AE                         l1206 04C0  
                       l1128 06CA                         l1146 0136                         l1138 00CE  
                       l1154 019E                         l1092 0398                         l1260 0580  
                       l1182 05DC                         _T0CS 007EAD                         _PEIE 007F96  
                       i2l68 006E                         _TMR0 000FD6             ??_initialisation 002F  
              __CFG_FCMEN$ON 000000                         _main 04BC                         _time 0036  
                       fsr0h 000FEA                         fsr1h 000FE2           i2___lwdiv@quotient 0005  
                       fsr0l 000FE9                         fsr2h 000FDA                         fsr1l 000FE1  
                       fsr2l 000FD9                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 00A8                   i2_segments 03D8  
  __size_of_rafraichissement 0124                        ?_main 0031                        _T0PS0 007EA8  
                      _T0PS1 007EA9                        _T0PS2 007EAA              __end_of___lwdiv 064A  
                      i2l120 044C                        i2l112 03DC                        i2l121 045C  
            __end_of___lwmod 06DE                        i2l122 046C                        i2l114 03EC  
                      i2l115 03FC                        i2l116 040C                        i2l117 041C  
                      i2l118 042C                        i2l119 043C                        i2l800 06EC  
                      i2l802 06F4                        i2l804 06F8                        i2l639 0692  
                      i2l808 070C                        i2l649 0716                        i2l780 0660  
                      i2l782 0668                        i2l792 0688                        i2l784 066C  
                      _PORTA 000F80                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94               __CFG_EBTRB$OFF 000000                        main@y 0060  
                      tablat 000FF5                        status 000FD8           __size_ofi2___lwdiv 0052  
         __size_ofi2___lwmod 0042              __initialization 0720                 __end_of_main 0596  
  rafraichissement@afficheur 002B                       ??_main 0036                __activetblptr 000002  
                     _ADCON1 000FC1                       _ANCON0 000F5D                       _T08BIT 007EAE  
                     i2l1002 047C                       i2l1010 01F2                       i2l1022 028E  
                     i2l1014 0226                       i2l1006 01D2                       i2l1018 025A  
                     i2l1026 02C2                       i2l1042 005C                       i2l1044 005E  
             __CFG_WDTEN$OFF 000000                       _INTCON 000FF2                       _TMR0IE 007F95  
                     _TMR0IF 007F92                       _TMR0ON 007EAF        __end_of_low_interrupt 00A8  
                ?i2_segments 0001               __CFG_XINST$OFF 000000                    ??___lwdiv 0023  
                  ??___lwmod 002A                       _valeur 003B                       _stance 003C  
           __end_of_segments 03D8                 __pdataCOMRAM 003C            __end_ofi2___lwdiv 069C  
          __end_ofi2___lwmod 0720                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 073E  
         i2___lwmod@dividend 0008               __pcstackCOMRAM 0001             _rafraichissement 00AC  
        __size_ofi2_segments 00E4   __end_ofi2_rafraichissement 02F4                      _INTEDG0 007F8E  
              _front_montant 0039                      __Hparam 0000                    ?_segments 0001  
                    __Lparam 0000                      ___lwdiv 05F8                      ___lwmod 069C  
                    __pcinit 0720                      __ramtop 0F00                      __ptext0 04BC  
                    __ptext1 0596                      __ptext2 00AC                      __ptext3 02F4  
                    __ptext4 069C                      __ptext5 05F8                      __ptext7 01D0  
                    __ptext8 03D8                      __ptext9 06DE               main@razdisplay 0064  
       end_of_initialization 073E                __Lmediumconst 0000                 ??i2_segments 0001  
                 ??_segments 001F      __size_of_initialisation 0062                    _PORTCbits 000F82  
   initialisation@razdisplay 002F           __end_ofi2_segments 04BC     __end_of_rafraichissement 01D0  
          i2___lwdiv@divisor 0003                    i2___lwdiv 064A                    i2___lwmod 06DE  
          i2___lwdiv@counter 0007                __pidataCOMRAM 0748          start_initialization 0720  
     __size_of_low_interrupt 00A0                   ?i2___lwdiv 0001                   ?i2___lwmod 0008  
i2rafraichissement@afficheur 000D           i2_rafraichissement 01D0                  __pbssCOMRAM 0036  
              __pcstackBANK0 0060            i2___lwmod@divisor 000A            i2___lwmod@counter 000C  
        ?i2_rafraichissement 000D             ___lwdiv@dividend 001F                _low_interrupt 0008  
                  __pintcode 0008               _initialisation 0596         ??i2_rafraichissement 000F  
          __size_of_segments 00E4                     ?___lwdiv 001F                     ?___lwmod 0026  
           ___lwdiv@quotient 0023                  ??i2___lwdiv 0005                  ??i2___lwmod 000C  
                  _old_state 003A       __end_of_initialisation 05F8               ?_low_interrupt 0001  
                   _RCONbits 000FD0             __CFG_SOSCSEL$DIG 000000                    main@y_193 0062  
          ?_rafraichissement 002B           ??_rafraichissement 002D                     __Hrparam 0000  
            ?_initialisation 0001                     __Lrparam 0000             __size_of___lwdiv 0052  
           __size_of___lwmod 0042                     _balayage 0038              ___lwdiv@divisor 0021  
            ___lwdiv@counter 0025                     __ptext10 064A                __size_of_main 00DA  
            ??_low_interrupt 0011                     _segments 02F4             i2segments@figure 0001  
                   main@argc 0031                     main@argv 0033                     intlevel2 0000  
           ___lwmod@dividend 0026              ___lwmod@divisor 0028              ___lwmod@counter 002A  
