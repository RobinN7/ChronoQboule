

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Sep 26 10:40:29 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           	psect	idataCOMRAM
    26  000780                     __pidataCOMRAM:
    27                           	opt stack 0
    28                           
    29                           ;initializer for _stance
    30  000780  01                 	db	1
    31  0000                     _TMR0	set	4054
    32  0000                     _ADCON1	set	4033
    33  0000                     _ANCON0	set	3933
    34  0000                     _INTCON	set	4082
    35  0000                     _PORTA	set	3968
    36  0000                     _PORTCbits	set	3970
    37  0000                     _RCONbits	set	4048
    38  0000                     _TRISA	set	3986
    39  0000                     _TRISB	set	3987
    40  0000                     _TRISC	set	3988
    41  0000                     _GIE	set	32663
    42  0000                     _INTEDG0	set	32654
    43  0000                     _PEIE	set	32662
    44  0000                     _PSA	set	32427
    45  0000                     _T08BIT	set	32430
    46  0000                     _T0CS	set	32429
    47  0000                     _T0PS0	set	32424
    48  0000                     _T0PS1	set	32425
    49  0000                     _T0PS2	set	32426
    50  0000                     _TMR0IE	set	32661
    51  0000                     _TMR0IF	set	32658
    52  0000                     _TMR0ON	set	32431
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  000758                     __pcinit:
    58                           	opt stack 0
    59  000758                     start_initialization:
    60                           	opt stack 0
    61  000758                     __initialization:
    62                           	opt stack 0
    63                           
    64                           ; Clear objects allocated to COMRAM (6 bytes)
    65  000758  6A3C               	clrf	(__pbssCOMRAM+5)& (0+255),c
    66  00075A  6A3B               	clrf	(__pbssCOMRAM+4)& (0+255),c
    67  00075C  6A3A               	clrf	(__pbssCOMRAM+3)& (0+255),c
    68  00075E  6A39               	clrf	(__pbssCOMRAM+2)& (0+255),c
    69  000760  6A38               	clrf	(__pbssCOMRAM+1)& (0+255),c
    70  000762  6A37               	clrf	__pbssCOMRAM& (0+255),c
    71                           
    72                           ; Initialize objects allocated to COMRAM (1 bytes)
    73                           ; load TBLPTR registers with __pidataCOMRAM
    74  000764  0E80               	movlw	low __pidataCOMRAM
    75  000766  6EF6               	movwf	tblptrl,c
    76  000768  0E07               	movlw	high __pidataCOMRAM
    77  00076A  6EF7               	movwf	tblptrh,c
    78  00076C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    79  00076E  6EF8               	movwf	tblptru,c
    80  000770  0009               	tblrd		*+	;fetch initializer
    81  000772  CFF5 F03D          	movff	tablat,__pdataCOMRAM
    82  000776                     end_of_initialization:
    83                           	opt stack 0
    84  000776                     __end_of__initialization:
    85                           	opt stack 0
    86  000776  0E00               	movlw	low (__Lmediumconst shr (0+16))
    87  000778  6EF8               	movwf	tblptru,c
    88  00077A  0100               	movlb	0
    89  00077C  EF7C  F001         	goto	_main	;jump to C main() function
    90                           tblptru	equ	0xFF8
    91                           tblptrh	equ	0xFF7
    92                           tblptrl	equ	0xFF6
    93                           tablat	equ	0xFF5
    94                           
    95                           	psect	bssCOMRAM
    96  000037                     __pbssCOMRAM:
    97                           	opt stack 0
    98  000037                     _time:
    99                           	opt stack 0
   100  000037                     	ds	2
   101  000039                     _balayage:
   102                           	opt stack 0
   103  000039                     	ds	1
   104  00003A                     _front_montant:
   105                           	opt stack 0
   106  00003A                     	ds	1
   107  00003B                     _old_state:
   108                           	opt stack 0
   109  00003B                     	ds	1
   110  00003C                     _valeur:
   111                           	opt stack 0
   112  00003C                     	ds	1
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           
   118                           	psect	dataCOMRAM
   119  00003D                     __pdataCOMRAM:
   120                           	opt stack 0
   121  00003D                     _stance:
   122                           	opt stack 0
   123  00003D                     	ds	1
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           
   129                           	psect	cstackBANK0
   130  000060                     __pcstackBANK0:
   131                           	opt stack 0
   132  000060                     
   133                           ; 2 bytes @ 0x0
   134  000060                     	ds	2
   135  000062                     
   136                           ; 3 bytes @ 0x2
   137  000062                     	ds	3
   138  000065                     main@delay:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x5
   142  000065                     	ds	2
   143  000067                     main@delay_193:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x7
   147  000067                     	ds	2
   148  000069                     main@razdisplay:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x9
   152  000069                     	ds	2
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           
   158                           	psect	cstackCOMRAM
   159  000001                     __pcstackCOMRAM:
   160                           	opt stack 0
   161  000001                     ?i2___lwdiv:
   162                           	opt stack 0
   163  000001                     i2segments@figure:
   164                           	opt stack 0
   165  000001                     i2___lwdiv@dividend:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0x0
   169  000001                     	ds	2
   170  000003                     i2___lwdiv@divisor:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x2
   174  000003                     	ds	2
   175  000005                     ??i2___lwdiv:
   176                           
   177                           ; 0 bytes @ 0x4
   178  000005                     	ds	1
   179  000006                     i2___lwdiv@quotient:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x5
   183  000006                     	ds	2
   184  000008                     i2___lwdiv@counter:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0x7
   188  000008                     	ds	1
   189  000009                     ?i2___lwmod:
   190                           	opt stack 0
   191  000009                     i2___lwmod@dividend:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x8
   195  000009                     	ds	2
   196  00000B                     i2___lwmod@divisor:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0xA
   200  00000B                     	ds	2
   201  00000D                     ??i2___lwmod:
   202                           
   203                           ; 0 bytes @ 0xC
   204  00000D                     	ds	1
   205  00000E                     i2___lwmod@counter:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0xD
   209  00000E                     	ds	1
   210  00000F                     i2rafraichissement@afficheur:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0xE
   214  00000F                     	ds	2
   215  000011                     ??i2_rafraichissement:
   216                           
   217                           ; 0 bytes @ 0x10
   218  000011                     	ds	2
   219  000013                     ??_low_interrupt:
   220                           
   221                           ; 0 bytes @ 0x12
   222  000013                     	ds	15
   223  000022                     ?___lwdiv:
   224                           	opt stack 0
   225  000022                     segments@figure:
   226                           	opt stack 0
   227  000022                     ___lwdiv@dividend:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x21
   231  000022                     	ds	2
   232  000024                     ___lwdiv@divisor:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x23
   236  000024                     	ds	2
   237  000026                     ??___lwdiv:
   238                           
   239                           ; 0 bytes @ 0x25
   240  000026                     	ds	1
   241  000027                     ___lwdiv@quotient:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x26
   245  000027                     	ds	2
   246  000029                     ___lwdiv@counter:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x28
   250  000029                     	ds	1
   251  00002A                     ?___lwmod:
   252                           	opt stack 0
   253  00002A                     ___lwmod@dividend:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x29
   257  00002A                     	ds	2
   258  00002C                     ___lwmod@divisor:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x2B
   262  00002C                     	ds	2
   263  00002E                     ??___lwmod:
   264                           
   265                           ; 0 bytes @ 0x2D
   266  00002E                     	ds	1
   267  00002F                     ___lwmod@counter:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x2E
   271  00002F                     	ds	1
   272  000030                     rafraichissement@afficheur:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x2F
   276  000030                     	ds	2
   277  000032                     ??_rafraichissement:
   278                           
   279                           ; 0 bytes @ 0x31
   280  000032                     	ds	2
   281  000034                     initialisation@razdisplay:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x33
   285  000034                     	ds	2
   286  000036                     ??_main:
   287                           
   288                           ; 0 bytes @ 0x35
   289  000036                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 100 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;  argc            2    0[BANK0 ] int 
   303 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  razdisplay      2    9[BANK0 ] int 
   306 ;;  delay           2    7[BANK0 ] int 
   307 ;;  delay           2    5[BANK0 ] int 
   308 ;; Return value:  Size  Location     Type
   309 ;;                  2    0[BANK0 ] int 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   317 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   318 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   320 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   321 ;;Total ram usage:       12 bytes
   322 ;; Hardware stack levels required when called:    6
   323 ;; This function calls:
   324 ;;		_initialisation
   325 ;;		_rafraichissement
   326 ;;		_segments
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text0
   333  0002F8                     __ptext0:
   334                           	opt stack 0
   335  0002F8                     _main:
   336                           	opt stack 25
   337                           
   338                           ;main.c: 102: initialisation();
   339                           
   340                           ;incstack = 0
   341  0002F8  ECDE  F002         	call	_initialisation	;wreg free
   342  0002FC                     l1680:
   343                           
   344                           ;main.c: 106: if ((PORTCbits.RC0 == 1) && (old_state == 0)) {
   345  0002FC  A082               	btfss	3970,0,c	;volatile
   346  0002FE  D01F               	goto	l72
   347  000300  663B               	tstfsz	_old_state,c
   348  000302  D01D               	goto	l72
   349                           
   350                           ;main.c: 107: old_state = 1;
   351  000304  6E36               	movwf	??_main& (0+255),c
   352  000306  0E01               	movlw	1
   353  000308  6E3B               	movwf	_old_state,c
   354  00030A  5036               	movf	??_main& (0+255),w,c
   355                           
   356                           ;main.c: 109: if (stance != 1) {
   357  00030C  043D               	decf	_stance,w,c
   358  00030E  A4D8               	btfss	status,2,c
   359                           
   360                           ;main.c: 110: stance++;
   361  000310  2A3D               	incf	_stance,f,c
   362                           
   363                           ;main.c: 111: }
   364                           ;main.c: 112: for (int delay = 0; delay < 10000; delay++) {
   365  000312  0E00               	movlw	0
   366  000314  0100               	movlb	0	; () banked
   367  000316  0100               	movlb	0	; () banked
   368  000318  6F66               	movwf	(main@delay+1)& (0+255),b
   369  00031A  0E00               	movlw	0
   370  00031C  0100               	movlb	0	; () banked
   371  00031E  6F65               	movwf	main@delay& (0+255),b
   372  000320                     
   373                           ; BSR set to: 0
   374  000320  0100               	movlb	0	; () banked
   375  000322  0100               	movlb	0	; () banked
   376  000324  5166               	movf	(main@delay+1)& (0+255),w,b
   377  000326  0A80               	xorlw	128
   378  000328  0F59               	addlw	-167
   379  00032A  0E10               	movlw	16
   380  00032C  B4D8               	btfsc	status,2,c
   381  00032E  5D65               	subwf	main@delay& (0+255),w,b
   382  000330  B0D8               	btfsc	status,0,c
   383  000332  D005               	goto	l72
   384                           
   385                           ; BSR set to: 0
   386                           
   387                           ; BSR set to: 0
   388                           
   389                           ; BSR set to: 0
   390  000334  0100               	movlb	0	; () banked
   391  000336  0100               	movlb	0	; () banked
   392  000338  4B65               	infsnz	main@delay& (0+255),f,b
   393  00033A  2B66               	incf	(main@delay+1)& (0+255),f,b
   394  00033C  D7F1               	goto	L1
   395  00033E                     l72:
   396                           
   397                           ;main.c: 113: }
   398                           ;main.c: 115: }
   399                           ;main.c: 117: if ((PORTCbits.RC0 == 0) && (old_state == 1)) {
   400  00033E  B082               	btfsc	3970,0,c	;volatile
   401  000340  D04C               	goto	l1736
   402  000342  043B               	decf	_old_state,w,c
   403  000344  A4D8               	btfss	status,2,c
   404  000346  D049               	goto	l1736
   405                           
   406                           ;main.c: 118: old_state = 0;
   407  000348  6E36               	movwf	??_main& (0+255),c
   408  00034A  0E00               	movlw	0
   409  00034C  6E3B               	movwf	_old_state,c
   410  00034E  5036               	movf	??_main& (0+255),w,c
   411                           
   412                           ;main.c: 120: if (stance == 1) {
   413  000350  043D               	decf	_stance,w,c
   414  000352  B4D8               	btfsc	status,2,c
   415                           
   416                           ;main.c: 121: stance++;
   417  000354  2A3D               	incf	_stance,f,c
   418                           
   419                           ;main.c: 122: }
   420                           ;main.c: 123: for (int delay = 0; delay < 10000; delay++) {
   421  000356  0E00               	movlw	0
   422  000358  0100               	movlb	0	; () banked
   423  00035A  0100               	movlb	0	; () banked
   424  00035C  6F68               	movwf	(main@delay_193+1)& (0+255),b
   425  00035E  0E00               	movlw	0
   426  000360  0100               	movlb	0	; () banked
   427  000362  6F67               	movwf	main@delay_193& (0+255),b
   428  000364                     
   429                           ; BSR set to: 0
   430  000364  0100               	movlb	0	; () banked
   431  000366  0100               	movlb	0	; () banked
   432  000368  5168               	movf	(main@delay_193+1)& (0+255),w,b
   433  00036A  0A80               	xorlw	128
   434  00036C  0F59               	addlw	-167
   435  00036E  0E10               	movlw	16
   436  000370  B4D8               	btfsc	status,2,c
   437  000372  5D67               	subwf	main@delay_193& (0+255),w,b
   438  000374  B0D8               	btfsc	status,0,c
   439  000376  D031               	goto	l1736
   440                           
   441                           ; BSR set to: 0
   442                           
   443                           ; BSR set to: 0
   444                           
   445                           ; BSR set to: 0
   446  000378  0100               	movlb	0	; () banked
   447  00037A  0100               	movlb	0	; () banked
   448  00037C  4B67               	infsnz	main@delay_193& (0+255),f,b
   449  00037E  2B68               	incf	(main@delay_193+1)& (0+255),f,b
   450  000380  D7F1               	goto	L2
   451  000382                     l81:
   452                           
   453                           ;main.c: 131: {
   454                           ;main.c: 132: TMR0ON = 0;
   455  000382  9ED5               	bcf	4053,7,c	;volatile
   456                           
   457                           ;main.c: 133: segments(0);
   458  000384  0E00               	movlw	0
   459  000386  ECF8  F001         	call	_segments
   460                           
   461                           ;main.c: 134: for (int razdisplay = 0; razdisplay < 5; razdisplay++) {
   462  00038A  0E00               	movlw	0
   463  00038C  0100               	movlb	0	; () banked
   464  00038E  0100               	movlb	0	; () banked
   465  000390  6F6A               	movwf	(main@razdisplay+1)& (0+255),b
   466  000392  0E00               	movlw	0
   467  000394  0100               	movlb	0	; () banked
   468  000396  6F69               	movwf	main@razdisplay& (0+255),b
   469  000398                     
   470                           ; BSR set to: 0
   471  000398  0100               	movlb	0	; () banked
   472  00039A  0100               	movlb	0	; () banked
   473  00039C  516A               	movf	(main@razdisplay+1)& (0+255),w,b
   474  00039E  0A80               	xorlw	128
   475  0003A0  0F80               	addlw	-128
   476  0003A2  0E05               	movlw	5
   477  0003A4  B4D8               	btfsc	status,2,c
   478  0003A6  5D69               	subwf	main@razdisplay& (0+255),w,b
   479  0003A8  B0D8               	btfsc	status,0,c
   480  0003AA  D7A8               	goto	l1680
   481                           
   482                           ; BSR set to: 0
   483                           ;main.c: 135: rafraichissement(razdisplay);
   484                           
   485                           ; BSR set to: 0
   486                           
   487                           ; BSR set to: 0
   488  0003AC  C069  F030         	movff	main@razdisplay,rafraichissement@afficheur
   489  0003B0  C06A  F031         	movff	main@razdisplay+1,rafraichissement@afficheur+1
   490  0003B4  EC58  F000         	call	_rafraichissement	;wreg free
   491  0003B8  0100               	movlb	0	; () banked
   492  0003BA  0100               	movlb	0	; () banked
   493  0003BC  4B69               	infsnz	main@razdisplay& (0+255),f,b
   494  0003BE  2B6A               	incf	(main@razdisplay+1)& (0+255),f,b
   495  0003C0  D7EB               	goto	L3
   496  0003C2                     l85:
   497                           
   498                           ;main.c: 140: {
   499                           ;main.c: 141: TMR0ON = 1;
   500  0003C2  8ED5               	bsf	4053,7,c	;volatile
   501                           
   502                           ;main.c: 142: }
   503                           ;main.c: 143: break;
   504  0003C4  D79B               	goto	l1680
   505  0003C6                     l86:
   506                           
   507                           ;main.c: 145: {
   508                           ;main.c: 146: TMR0ON = 0;
   509  0003C6  9ED5               	bcf	4053,7,c	;volatile
   510                           
   511                           ;main.c: 147: time = 0;
   512  0003C8  0E00               	movlw	0
   513  0003CA  6E38               	movwf	_time+1,c
   514  0003CC  0E00               	movlw	0
   515  0003CE  6E37               	movwf	_time,c
   516                           
   517                           ;main.c: 148: stance = 0;
   518  0003D0  6E36               	movwf	??_main& (0+255),c
   519  0003D2  0E00               	movlw	0
   520  0003D4  6E3D               	movwf	_stance,c
   521  0003D6  5036               	movf	??_main& (0+255),w,c
   522                           
   523                           ;main.c: 149: }
   524                           ;main.c: 150: break;
   525  0003D8  D791               	goto	l1680
   526  0003DA                     l1736:
   527  0003DA  503D               	movf	_stance,w,c
   528                           
   529                           ; Switch size 1, requested type "space"
   530                           ; Number of cases is 3, Range of values is 1 to 3
   531                           ; switch strategies available:
   532                           ; Name         Instructions Cycles
   533                           ; simple_byte           10     6 (average)
   534                           ;	Chosen strategy is simple_byte
   535  0003DC  0A01               	xorlw	1	; case 1
   536  0003DE  B4D8               	btfsc	status,2,c
   537  0003E0  D7D0               	goto	l81
   538  0003E2  0A03               	xorlw	3	; case 2
   539  0003E4  B4D8               	btfsc	status,2,c
   540  0003E6  D7ED               	goto	l85
   541  0003E8  0A01               	xorlw	1	; case 3
   542  0003EA  B4D8               	btfsc	status,2,c
   543  0003EC  D7EC               	goto	l86
   544  0003EE  D786               	goto	l1680
   545  0003F0                     __end_of_main:
   546                           	opt stack 0
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           status	equ	0xFD8
   552                           
   553 ;; *************** function _initialisation *****************
   554 ;; Defined at:
   555 ;;		line 190 in file "main.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  razdisplay      2   51[COMRAM] int 
   560 ;; Return value:  Size  Location     Type
   561 ;;		None               void
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   573 ;;Total ram usage:        2 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    5
   576 ;; This function calls:
   577 ;;		_rafraichissement
   578 ;;		_segments
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text1
   585  0005BC                     __ptext1:
   586                           	opt stack 0
   587  0005BC                     _initialisation:
   588                           	opt stack 25
   589                           
   590                           ;main.c: 193: RCONbits.IPEN = 1;
   591                           
   592                           ;incstack = 0
   593  0005BC  8ED0               	bsf	4048,7,c	;volatile
   594                           
   595                           ;main.c: 194: INTCON = 0b11111000;
   596  0005BE  0EF8               	movlw	248
   597  0005C0  6EF2               	movwf	intcon,c	;volatile
   598                           
   599                           ;main.c: 195: ADCON1 = 0x00;
   600  0005C2  0E00               	movlw	0
   601  0005C4  6EC1               	movwf	4033,c	;volatile
   602                           
   603                           ;main.c: 196: TRISA = 0;
   604  0005C6  0E00               	movlw	0
   605  0005C8  6E92               	movwf	3986,c	;volatile
   606                           
   607                           ;main.c: 197: TRISB = 0b11111111;
   608  0005CA  6893               	setf	3987,c	;volatile
   609                           
   610                           ;main.c: 198: TRISC = 0b00000001;
   611  0005CC  0E01               	movlw	1
   612  0005CE  6E94               	movwf	3988,c	;volatile
   613                           
   614                           ;main.c: 200: TMR0ON = 0;
   615  0005D0  9ED5               	bcf	4053,7,c	;volatile
   616                           
   617                           ;main.c: 201: segments(0);
   618  0005D2  0E00               	movlw	0
   619  0005D4  ECF8  F001         	call	_segments
   620                           
   621                           ;main.c: 203: for (int razdisplay = 0; razdisplay < 5; razdisplay++) {
   622  0005D8  0E00               	movlw	0
   623  0005DA  6E35               	movwf	initialisation@razdisplay+1,c
   624  0005DC  0E00               	movlw	0
   625  0005DE  6E34               	movwf	initialisation@razdisplay,c
   626  0005E0  5035               	movf	initialisation@razdisplay+1,w,c
   627  0005E2  0A80               	xorlw	128
   628  0005E4  0F80               	addlw	-128
   629  0005E6  0E05               	movlw	5
   630  0005E8  B4D8               	btfsc	status,2,c
   631  0005EA  5C34               	subwf	initialisation@razdisplay,w,c
   632  0005EC  B0D8               	btfsc	status,0,c
   633  0005EE  D009               	goto	l1524
   634                           
   635                           ;main.c: 204: rafraichissement(razdisplay);
   636  0005F0  C034  F030         	movff	initialisation@razdisplay,rafraichissement@afficheur
   637  0005F4  C035  F031         	movff	initialisation@razdisplay+1,rafraichissement@afficheur+1
   638  0005F8  EC58  F000         	call	_rafraichissement	;wreg free
   639  0005FC  4A34               	infsnz	initialisation@razdisplay,f,c
   640  0005FE  2A35               	incf	initialisation@razdisplay+1,f,c
   641  000600  D7EF               	goto	L4
   642  000602                     l1524:
   643                           
   644                           ;main.c: 205: }
   645                           ;main.c: 210: ANCON0 = 0;
   646  000602  0E00               	movlw	0
   647  000604  010F               	movlb	15	; () banked
   648  000606  010F               	movlb	15	; () banked
   649  000608  6F5D               	movwf	93,b	;volatile
   650                           
   651                           ; BSR set to: 15
   652                           ;main.c: 211: INTEDG0 = 1;
   653  00060A  8CF1               	bsf	intcon2,6,c	;volatile
   654                           
   655                           ; BSR set to: 15
   656                           ;main.c: 221: T0PS0 = 0;
   657  00060C  90D5               	bcf	4053,0,c	;volatile
   658                           
   659                           ; BSR set to: 15
   660                           ;main.c: 222: T0PS1 = 1;
   661  00060E  82D5               	bsf	4053,1,c	;volatile
   662                           
   663                           ; BSR set to: 15
   664                           ;main.c: 223: T0PS2 = 0;
   665  000610  94D5               	bcf	4053,2,c	;volatile
   666                           
   667                           ; BSR set to: 15
   668                           ;main.c: 224: PSA = 0;
   669  000612  96D5               	bcf	4053,3,c	;volatile
   670                           
   671                           ; BSR set to: 15
   672                           ;main.c: 225: T0CS = 0;
   673  000614  9AD5               	bcf	4053,5,c	;volatile
   674                           
   675                           ; BSR set to: 15
   676                           ;main.c: 226: T08BIT = 1;
   677  000616  8CD5               	bsf	4053,6,c	;volatile
   678                           
   679                           ; BSR set to: 15
   680                           ;main.c: 227: TMR0IE = 1;
   681  000618  8AF2               	bsf	intcon,5,c	;volatile
   682                           
   683                           ; BSR set to: 15
   684                           ;main.c: 228: PEIE = 1;
   685  00061A  8CF2               	bsf	intcon,6,c	;volatile
   686                           
   687                           ; BSR set to: 15
   688                           ;main.c: 229: GIE = 1;
   689  00061C  8EF2               	bsf	intcon,7,c	;volatile
   690                           
   691                           ; BSR set to: 15
   692  00061E  0012               	return	
   693  000620                     __end_of_initialisation:
   694                           	opt stack 0
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           intcon	equ	0xFF2
   700                           intcon2	equ	0xFF1
   701                           status	equ	0xFD8
   702                           
   703 ;; *************** function _rafraichissement *****************
   704 ;; Defined at:
   705 ;;		line 160 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  afficheur       2   47[COMRAM] int 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;		None               void
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   723 ;;Total ram usage:        4 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    4
   726 ;; This function calls:
   727 ;;		___lwdiv
   728 ;;		___lwmod
   729 ;;		_segments
   730 ;; This function is called by:
   731 ;;		_main
   732 ;;		_initialisation
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text2
   737  0000B0                     __ptext2:
   738                           	opt stack 0
   739  0000B0                     _rafraichissement:
   740                           	opt stack 26
   741                           
   742                           ;main.c: 162: switch (afficheur) {
   743                           
   744                           ; BSR set to: 15
   745                           ;incstack = 0
   746  0000B0  D078               	goto	l1436
   747  0000B2                     l1416:
   748                           
   749                           ;main.c: 165: segments(time % 10);
   750  0000B2  C037  F02A         	movff	_time,___lwmod@dividend
   751  0000B6  C038  F02B         	movff	_time+1,___lwmod@dividend+1
   752  0000BA  0E00               	movlw	0
   753  0000BC  6E2D               	movwf	___lwmod@divisor+1,c
   754  0000BE  0E0A               	movlw	10
   755  0000C0  6E2C               	movwf	___lwmod@divisor,c
   756  0000C2  EC66  F003         	call	___lwmod	;wreg free
   757  0000C6  502A               	movf	?___lwmod,w,c
   758  0000C8  ECF8  F001         	call	_segments
   759                           
   760                           ;main.c: 166: PORTA = 0b00000001;
   761  0000CC  0E01               	movlw	1
   762  0000CE  6E80               	movwf	3968,c	;volatile
   763                           
   764                           ;main.c: 167: break;
   765  0000D0  0012               	return	
   766  0000D2                     l1420:
   767                           
   768                           ;main.c: 169: segments((time / 10) % 10);
   769  0000D2  0E00               	movlw	0
   770  0000D4  6E25               	movwf	___lwdiv@divisor+1,c
   771  0000D6  0E0A               	movlw	10
   772  0000D8  6E24               	movwf	___lwdiv@divisor,c
   773  0000DA  C037  F022         	movff	_time,___lwdiv@dividend
   774  0000DE  C038  F023         	movff	_time+1,___lwdiv@dividend+1
   775  0000E2  EC10  F003         	call	___lwdiv	;wreg free
   776  0000E6  C022  F02A         	movff	?___lwdiv,___lwmod@dividend
   777  0000EA  C023  F02B         	movff	?___lwdiv+1,___lwmod@dividend+1
   778  0000EE  0E00               	movlw	0
   779  0000F0  6E2D               	movwf	___lwmod@divisor+1,c
   780  0000F2  0E0A               	movlw	10
   781  0000F4  6E2C               	movwf	___lwmod@divisor,c
   782  0000F6  EC66  F003         	call	___lwmod	;wreg free
   783  0000FA  502A               	movf	?___lwmod,w,c
   784  0000FC  ECF8  F001         	call	_segments
   785                           
   786                           ;main.c: 170: PORTA = 0b00000010;
   787  000100  0E02               	movlw	2
   788  000102  6E80               	movwf	3968,c	;volatile
   789                           
   790                           ;main.c: 171: break;
   791  000104  0012               	return	
   792  000106                     l1424:
   793                           
   794                           ;main.c: 173: segments((time / 100) % 10);
   795  000106  0E00               	movlw	0
   796  000108  6E25               	movwf	___lwdiv@divisor+1,c
   797  00010A  0E64               	movlw	100
   798  00010C  6E24               	movwf	___lwdiv@divisor,c
   799  00010E  C037  F022         	movff	_time,___lwdiv@dividend
   800  000112  C038  F023         	movff	_time+1,___lwdiv@dividend+1
   801  000116  EC10  F003         	call	___lwdiv	;wreg free
   802  00011A  C022  F02A         	movff	?___lwdiv,___lwmod@dividend
   803  00011E  C023  F02B         	movff	?___lwdiv+1,___lwmod@dividend+1
   804  000122  0E00               	movlw	0
   805  000124  6E2D               	movwf	___lwmod@divisor+1,c
   806  000126  0E0A               	movlw	10
   807  000128  6E2C               	movwf	___lwmod@divisor,c
   808  00012A  EC66  F003         	call	___lwmod	;wreg free
   809  00012E  502A               	movf	?___lwmod,w,c
   810  000130  ECF8  F001         	call	_segments
   811                           
   812                           ;main.c: 174: PORTA = 0b00000100;
   813  000134  0E04               	movlw	4
   814  000136  6E80               	movwf	3968,c	;volatile
   815                           
   816                           ;main.c: 175: break;
   817  000138  0012               	return	
   818  00013A                     l1428:
   819                           
   820                           ;main.c: 177: segments((time / 1000) % 10);
   821  00013A  0E03               	movlw	3
   822  00013C  6E25               	movwf	___lwdiv@divisor+1,c
   823  00013E  0EE8               	movlw	232
   824  000140  6E24               	movwf	___lwdiv@divisor,c
   825  000142  C037  F022         	movff	_time,___lwdiv@dividend
   826  000146  C038  F023         	movff	_time+1,___lwdiv@dividend+1
   827  00014A  EC10  F003         	call	___lwdiv	;wreg free
   828  00014E  C022  F02A         	movff	?___lwdiv,___lwmod@dividend
   829  000152  C023  F02B         	movff	?___lwdiv+1,___lwmod@dividend+1
   830  000156  0E00               	movlw	0
   831  000158  6E2D               	movwf	___lwmod@divisor+1,c
   832  00015A  0E0A               	movlw	10
   833  00015C  6E2C               	movwf	___lwmod@divisor,c
   834  00015E  EC66  F003         	call	___lwmod	;wreg free
   835  000162  502A               	movf	?___lwmod,w,c
   836  000164  ECF8  F001         	call	_segments
   837                           
   838                           ;main.c: 178: PORTA = 0b00001000;
   839  000168  0E08               	movlw	8
   840  00016A  6E80               	movwf	3968,c	;volatile
   841                           
   842                           ;main.c: 179: break;
   843  00016C  0012               	return	
   844  00016E                     l1432:
   845                           
   846                           ;main.c: 181: segments((time / 10000) % 10);
   847  00016E  0E27               	movlw	39
   848  000170  6E25               	movwf	___lwdiv@divisor+1,c
   849  000172  0E10               	movlw	16
   850  000174  6E24               	movwf	___lwdiv@divisor,c
   851  000176  C037  F022         	movff	_time,___lwdiv@dividend
   852  00017A  C038  F023         	movff	_time+1,___lwdiv@dividend+1
   853  00017E  EC10  F003         	call	___lwdiv	;wreg free
   854  000182  C022  F02A         	movff	?___lwdiv,___lwmod@dividend
   855  000186  C023  F02B         	movff	?___lwdiv+1,___lwmod@dividend+1
   856  00018A  0E00               	movlw	0
   857  00018C  6E2D               	movwf	___lwmod@divisor+1,c
   858  00018E  0E0A               	movlw	10
   859  000190  6E2C               	movwf	___lwmod@divisor,c
   860  000192  EC66  F003         	call	___lwmod	;wreg free
   861  000196  502A               	movf	?___lwmod,w,c
   862  000198  ECF8  F001         	call	_segments
   863                           
   864                           ;main.c: 182: PORTA = 0b00100000;
   865  00019C  0E20               	movlw	32
   866  00019E  6E80               	movwf	3968,c	;volatile
   867                           
   868                           ;main.c: 183: break;
   869  0001A0  0012               	return	
   870  0001A2                     l1436:
   871  0001A2  C030  F032         	movff	rafraichissement@afficheur,??_rafraichissement
   872  0001A6  C031  F033         	movff	rafraichissement@afficheur+1,??_rafraichissement+1
   873                           
   874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   875                           ; Switch size 1, requested type "space"
   876                           ; Number of cases is 1, Range of values is 0 to 0
   877                           ; switch strategies available:
   878                           ; Name         Instructions Cycles
   879                           ; simple_byte            4     3 (average)
   880                           ;	Chosen strategy is simple_byte
   881  0001AA  5033               	movf	??_rafraichissement+1,w,c
   882  0001AC  0A00               	xorlw	0	; case 0
   883  0001AE  A4D8               	btfss	status,2,c
   884  0001B0  0012               	return	
   885                           
   886                           ; Switch size 1, requested type "space"
   887                           ; Number of cases is 5, Range of values is 0 to 4
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte           16     9 (average)
   891                           ;	Chosen strategy is simple_byte
   892  0001B2  5032               	movf	??_rafraichissement,w,c
   893  0001B4  0A00               	xorlw	0	; case 0
   894  0001B6  B4D8               	btfsc	status,2,c
   895  0001B8  D77C               	goto	l1416
   896  0001BA  0A01               	xorlw	1	; case 1
   897  0001BC  B4D8               	btfsc	status,2,c
   898  0001BE  D789               	goto	l1420
   899  0001C0  0A03               	xorlw	3	; case 2
   900  0001C2  B4D8               	btfsc	status,2,c
   901  0001C4  D7A0               	goto	l1424
   902  0001C6  0A01               	xorlw	1	; case 3
   903  0001C8  B4D8               	btfsc	status,2,c
   904  0001CA  D7B7               	goto	l1428
   905  0001CC  0A07               	xorlw	7	; case 4
   906  0001CE  A4D8               	btfss	status,2,c
   907  0001D0  0012               	return	
   908  0001D2  D7CD               	goto	l1432
   909  0001D4                     __end_of_rafraichissement:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           intcon	equ	0xFF2
   916                           intcon2	equ	0xFF1
   917                           status	equ	0xFD8
   918                           
   919 ;; *************** function _segments *****************
   920 ;; Defined at:
   921 ;;		line 8 in file "converter.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  figure          1    wreg     unsigned char 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  figure          1   33[COMRAM] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;		None               void
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;Total ram usage:        1 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    3
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;;		_rafraichissement
   947 ;;		_initialisation
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text3
   952  0003F0                     __ptext3:
   953                           	opt stack 0
   954  0003F0                     _segments:
   955                           	opt stack 27
   956                           
   957                           ;incstack = 0
   958                           ;segments@figure stored from wreg
   959  0003F0  CFE8 F022          	movff	wreg,segments@figure
   960                           
   961                           ;converter.c: 24: switch (figure) {
   962  0003F4  D050               	goto	l1548
   963  0003F6                     l112:
   964                           
   965                           ;converter.c: 26: PORTCbits.RC1 = 0;
   966  0003F6  9282               	bcf	3970,1,c	;volatile
   967                           
   968                           ;converter.c: 27: PORTCbits.RC2 = 0;
   969  0003F8  9482               	bcf	3970,2,c	;volatile
   970                           
   971                           ;converter.c: 28: PORTCbits.RC3 = 0;
   972  0003FA  9682               	bcf	3970,3,c	;volatile
   973                           
   974                           ;converter.c: 29: PORTCbits.RC4 = 0;
   975  0003FC  9882               	bcf	3970,4,c	;volatile
   976                           
   977                           ;converter.c: 30: PORTCbits.RC5 = 0;
   978  0003FE  9A82               	bcf	3970,5,c	;volatile
   979                           
   980                           ;converter.c: 31: PORTCbits.RC6 = 0;
   981  000400  9C82               	bcf	3970,6,c	;volatile
   982                           
   983                           ;converter.c: 32: PORTCbits.RC7 = 1;
   984  000402  8E82               	bsf	3970,7,c	;volatile
   985                           
   986                           ;converter.c: 33: break;
   987  000404  0012               	return	
   988  000406                     l114:
   989                           
   990                           ;converter.c: 36: PORTCbits.RC1 = 1;
   991  000406  8282               	bsf	3970,1,c	;volatile
   992                           
   993                           ;converter.c: 37: PORTCbits.RC2 = 0;
   994  000408  9482               	bcf	3970,2,c	;volatile
   995                           
   996                           ;converter.c: 38: PORTCbits.RC3 = 0;
   997  00040A  9682               	bcf	3970,3,c	;volatile
   998                           
   999                           ;converter.c: 39: PORTCbits.RC4 = 1;
  1000  00040C  8882               	bsf	3970,4,c	;volatile
  1001                           
  1002                           ;converter.c: 40: PORTCbits.RC5 = 1;
  1003  00040E  8A82               	bsf	3970,5,c	;volatile
  1004                           
  1005                           ;converter.c: 41: PORTCbits.RC6 = 1;
  1006  000410  8C82               	bsf	3970,6,c	;volatile
  1007                           
  1008                           ;converter.c: 42: PORTCbits.RC7 = 1;
  1009  000412  8E82               	bsf	3970,7,c	;volatile
  1010                           
  1011                           ;converter.c: 43: break;
  1012  000414  0012               	return	
  1013  000416                     l115:
  1014                           
  1015                           ;converter.c: 45: PORTCbits.RC1 = 0;
  1016  000416  9282               	bcf	3970,1,c	;volatile
  1017                           
  1018                           ;converter.c: 46: PORTCbits.RC2 = 0;
  1019  000418  9482               	bcf	3970,2,c	;volatile
  1020                           
  1021                           ;converter.c: 47: PORTCbits.RC3 = 1;
  1022  00041A  8682               	bsf	3970,3,c	;volatile
  1023                           
  1024                           ;converter.c: 48: PORTCbits.RC4 = 0;
  1025  00041C  9882               	bcf	3970,4,c	;volatile
  1026                           
  1027                           ;converter.c: 49: PORTCbits.RC5 = 0;
  1028  00041E  9A82               	bcf	3970,5,c	;volatile
  1029                           
  1030                           ;converter.c: 50: PORTCbits.RC6 = 1;
  1031  000420  8C82               	bsf	3970,6,c	;volatile
  1032                           
  1033                           ;converter.c: 51: PORTCbits.RC7 = 0;
  1034  000422  9E82               	bcf	3970,7,c	;volatile
  1035                           
  1036                           ;converter.c: 52: break;
  1037  000424  0012               	return	
  1038  000426                     l116:
  1039                           
  1040                           ;converter.c: 54: PORTCbits.RC1 = 0;
  1041  000426  9282               	bcf	3970,1,c	;volatile
  1042                           
  1043                           ;converter.c: 55: PORTCbits.RC2 = 0;
  1044  000428  9482               	bcf	3970,2,c	;volatile
  1045                           
  1046                           ;converter.c: 56: PORTCbits.RC3 = 0;
  1047  00042A  9682               	bcf	3970,3,c	;volatile
  1048                           
  1049                           ;converter.c: 57: PORTCbits.RC4 = 0;
  1050  00042C  9882               	bcf	3970,4,c	;volatile
  1051                           
  1052                           ;converter.c: 58: PORTCbits.RC5 = 1;
  1053  00042E  8A82               	bsf	3970,5,c	;volatile
  1054                           
  1055                           ;converter.c: 59: PORTCbits.RC6 = 1;
  1056  000430  8C82               	bsf	3970,6,c	;volatile
  1057                           
  1058                           ;converter.c: 60: PORTCbits.RC7 = 0;
  1059  000432  9E82               	bcf	3970,7,c	;volatile
  1060                           
  1061                           ;converter.c: 61: break;
  1062  000434  0012               	return	
  1063  000436                     l117:
  1064                           
  1065                           ;converter.c: 64: PORTCbits.RC1 = 1;
  1066  000436  8282               	bsf	3970,1,c	;volatile
  1067                           
  1068                           ;converter.c: 65: PORTCbits.RC2 = 0;
  1069  000438  9482               	bcf	3970,2,c	;volatile
  1070                           
  1071                           ;converter.c: 66: PORTCbits.RC3 = 0;
  1072  00043A  9682               	bcf	3970,3,c	;volatile
  1073                           
  1074                           ;converter.c: 67: PORTCbits.RC4 = 1;
  1075  00043C  8882               	bsf	3970,4,c	;volatile
  1076                           
  1077                           ;converter.c: 68: PORTCbits.RC5 = 1;
  1078  00043E  8A82               	bsf	3970,5,c	;volatile
  1079                           
  1080                           ;converter.c: 69: PORTCbits.RC6 = 0;
  1081  000440  9C82               	bcf	3970,6,c	;volatile
  1082                           
  1083                           ;converter.c: 70: PORTCbits.RC7 = 0;
  1084  000442  9E82               	bcf	3970,7,c	;volatile
  1085                           
  1086                           ;converter.c: 71: break;
  1087  000444  0012               	return	
  1088  000446                     l118:
  1089                           
  1090                           ;converter.c: 73: PORTCbits.RC1 = 0;
  1091  000446  9282               	bcf	3970,1,c	;volatile
  1092                           
  1093                           ;converter.c: 74: PORTCbits.RC2 = 1;
  1094  000448  8482               	bsf	3970,2,c	;volatile
  1095                           
  1096                           ;converter.c: 75: PORTCbits.RC3 = 0;
  1097  00044A  9682               	bcf	3970,3,c	;volatile
  1098                           
  1099                           ;converter.c: 76: PORTCbits.RC4 = 0;
  1100  00044C  9882               	bcf	3970,4,c	;volatile
  1101                           
  1102                           ;converter.c: 77: PORTCbits.RC5 = 1;
  1103  00044E  8A82               	bsf	3970,5,c	;volatile
  1104                           
  1105                           ;converter.c: 78: PORTCbits.RC6 = 0;
  1106  000450  9C82               	bcf	3970,6,c	;volatile
  1107                           
  1108                           ;converter.c: 79: PORTCbits.RC7 = 0;
  1109  000452  9E82               	bcf	3970,7,c	;volatile
  1110                           
  1111                           ;converter.c: 81: break;
  1112  000454  0012               	return	
  1113  000456                     l119:
  1114                           
  1115                           ;converter.c: 83: PORTCbits.RC1 = 0;
  1116  000456  9282               	bcf	3970,1,c	;volatile
  1117                           
  1118                           ;converter.c: 84: PORTCbits.RC2 = 1;
  1119  000458  8482               	bsf	3970,2,c	;volatile
  1120                           
  1121                           ;converter.c: 85: PORTCbits.RC3 = 0;
  1122  00045A  9682               	bcf	3970,3,c	;volatile
  1123                           
  1124                           ;converter.c: 86: PORTCbits.RC4 = 0;
  1125  00045C  9882               	bcf	3970,4,c	;volatile
  1126                           
  1127                           ;converter.c: 87: PORTCbits.RC5 = 0;
  1128  00045E  9A82               	bcf	3970,5,c	;volatile
  1129                           
  1130                           ;converter.c: 88: PORTCbits.RC6 = 0;
  1131  000460  9C82               	bcf	3970,6,c	;volatile
  1132                           
  1133                           ;converter.c: 89: PORTCbits.RC7 = 0;
  1134  000462  9E82               	bcf	3970,7,c	;volatile
  1135                           
  1136                           ;converter.c: 90: break;
  1137  000464  0012               	return	
  1138  000466                     l120:
  1139                           
  1140                           ;converter.c: 93: PORTCbits.RC1 = 0;
  1141  000466  9282               	bcf	3970,1,c	;volatile
  1142                           
  1143                           ;converter.c: 94: PORTCbits.RC2 = 0;
  1144  000468  9482               	bcf	3970,2,c	;volatile
  1145                           
  1146                           ;converter.c: 95: PORTCbits.RC3 = 0;
  1147  00046A  9682               	bcf	3970,3,c	;volatile
  1148                           
  1149                           ;converter.c: 96: PORTCbits.RC4 = 1;
  1150  00046C  8882               	bsf	3970,4,c	;volatile
  1151                           
  1152                           ;converter.c: 97: PORTCbits.RC5 = 1;
  1153  00046E  8A82               	bsf	3970,5,c	;volatile
  1154                           
  1155                           ;converter.c: 98: PORTCbits.RC6 = 1;
  1156  000470  8C82               	bsf	3970,6,c	;volatile
  1157                           
  1158                           ;converter.c: 99: PORTCbits.RC7 = 1;
  1159  000472  8E82               	bsf	3970,7,c	;volatile
  1160                           
  1161                           ;converter.c: 100: break;
  1162  000474  0012               	return	
  1163  000476                     l121:
  1164                           
  1165                           ;converter.c: 102: PORTCbits.RC1 = 0;
  1166  000476  9282               	bcf	3970,1,c	;volatile
  1167                           
  1168                           ;converter.c: 103: PORTCbits.RC2 = 0;
  1169  000478  9482               	bcf	3970,2,c	;volatile
  1170                           
  1171                           ;converter.c: 104: PORTCbits.RC3 = 0;
  1172  00047A  9682               	bcf	3970,3,c	;volatile
  1173                           
  1174                           ;converter.c: 105: PORTCbits.RC4 = 0;
  1175  00047C  9882               	bcf	3970,4,c	;volatile
  1176                           
  1177                           ;converter.c: 106: PORTCbits.RC5 = 0;
  1178  00047E  9A82               	bcf	3970,5,c	;volatile
  1179                           
  1180                           ;converter.c: 107: PORTCbits.RC6 = 0;
  1181  000480  9C82               	bcf	3970,6,c	;volatile
  1182                           
  1183                           ;converter.c: 108: PORTCbits.RC7 = 0;
  1184  000482  9E82               	bcf	3970,7,c	;volatile
  1185                           
  1186                           ;converter.c: 109: break;
  1187  000484  0012               	return	
  1188  000486                     l122:
  1189                           
  1190                           ;converter.c: 111: PORTCbits.RC1 = 0;
  1191  000486  9282               	bcf	3970,1,c	;volatile
  1192                           
  1193                           ;converter.c: 112: PORTCbits.RC2 = 0;
  1194  000488  9482               	bcf	3970,2,c	;volatile
  1195                           
  1196                           ;converter.c: 113: PORTCbits.RC3 = 0;
  1197  00048A  9682               	bcf	3970,3,c	;volatile
  1198                           
  1199                           ;converter.c: 114: PORTCbits.RC4 = 0;
  1200  00048C  9882               	bcf	3970,4,c	;volatile
  1201                           
  1202                           ;converter.c: 115: PORTCbits.RC5 = 1;
  1203  00048E  8A82               	bsf	3970,5,c	;volatile
  1204                           
  1205                           ;converter.c: 116: PORTCbits.RC6 = 0;
  1206  000490  9C82               	bcf	3970,6,c	;volatile
  1207                           
  1208                           ;converter.c: 117: PORTCbits.RC7 = 0;
  1209  000492  9E82               	bcf	3970,7,c	;volatile
  1210                           
  1211                           ;converter.c: 118: break;
  1212  000494  0012               	return	
  1213  000496                     l1548:
  1214  000496  5022               	movf	segments@figure,w,c
  1215                           
  1216                           ; Switch size 1, requested type "space"
  1217                           ; Number of cases is 10, Range of values is 0 to 9
  1218                           ; switch strategies available:
  1219                           ; Name         Instructions Cycles
  1220                           ; simple_byte           31    16 (average)
  1221                           ;	Chosen strategy is simple_byte
  1222  000498  0A00               	xorlw	0	; case 0
  1223  00049A  B4D8               	btfsc	status,2,c
  1224  00049C  D7AC               	goto	l112
  1225  00049E  0A01               	xorlw	1	; case 1
  1226  0004A0  B4D8               	btfsc	status,2,c
  1227  0004A2  D7B1               	goto	l114
  1228  0004A4  0A03               	xorlw	3	; case 2
  1229  0004A6  B4D8               	btfsc	status,2,c
  1230  0004A8  D7B6               	goto	l115
  1231  0004AA  0A01               	xorlw	1	; case 3
  1232  0004AC  B4D8               	btfsc	status,2,c
  1233  0004AE  D7BB               	goto	l116
  1234  0004B0  0A07               	xorlw	7	; case 4
  1235  0004B2  B4D8               	btfsc	status,2,c
  1236  0004B4  D7C0               	goto	l117
  1237  0004B6  0A01               	xorlw	1	; case 5
  1238  0004B8  B4D8               	btfsc	status,2,c
  1239  0004BA  D7C5               	goto	l118
  1240  0004BC  0A03               	xorlw	3	; case 6
  1241  0004BE  B4D8               	btfsc	status,2,c
  1242  0004C0  D7CA               	goto	l119
  1243  0004C2  0A01               	xorlw	1	; case 7
  1244  0004C4  B4D8               	btfsc	status,2,c
  1245  0004C6  D7CF               	goto	l120
  1246  0004C8  0A0F               	xorlw	15	; case 8
  1247  0004CA  B4D8               	btfsc	status,2,c
  1248  0004CC  D7D4               	goto	l121
  1249  0004CE  0A01               	xorlw	1	; case 9
  1250  0004D0  A4D8               	btfss	status,2,c
  1251  0004D2  0012               	return	
  1252  0004D4  D7D8               	goto	l122
  1253  0004D6                     __end_of_segments:
  1254                           	opt stack 0
  1255                           tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           intcon	equ	0xFF2
  1260                           intcon2	equ	0xFF1
  1261                           wreg	equ	0xFE8
  1262                           status	equ	0xFD8
  1263                           
  1264 ;; *************** function ___lwmod *****************
  1265 ;; Defined at:
  1266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  dividend        2   41[COMRAM] unsigned int 
  1269 ;;  divisor         2   43[COMRAM] unsigned int 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  counter         1   46[COMRAM] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2   41[COMRAM] unsigned int 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1281 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1284 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1285 ;;Total ram usage:        6 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    3
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_rafraichissement
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text4
  1296  0006CC                     __ptext4:
  1297                           	opt stack 0
  1298  0006CC                     ___lwmod:
  1299                           	opt stack 26
  1300                           
  1301                           ;incstack = 0
  1302  0006CC  502D               	movf	___lwmod@divisor+1,w,c
  1303  0006CE  102C               	iorwf	___lwmod@divisor,w,c
  1304  0006D0  B4D8               	btfsc	status,2,c
  1305  0006D2  D01A               	goto	l640
  1306  0006D4  6E2E               	movwf	??___lwmod& (0+255),c
  1307  0006D6  0E01               	movlw	1
  1308  0006D8  6E2F               	movwf	___lwmod@counter,c
  1309  0006DA  502E               	movf	??___lwmod& (0+255),w,c
  1310  0006DC  D004               	goto	l1578
  1311  0006DE                     l1576:
  1312  0006DE  90D8               	bcf	status,0,c
  1313  0006E0  362C               	rlcf	___lwmod@divisor,f,c
  1314  0006E2  362D               	rlcf	___lwmod@divisor+1,f,c
  1315  0006E4  2A2F               	incf	___lwmod@counter,f,c
  1316  0006E6                     l1578:
  1317  0006E6  AE2D               	btfss	___lwmod@divisor+1,7,c
  1318  0006E8  D7FA               	goto	l1576
  1319  0006EA                     l1580:
  1320  0006EA  502C               	movf	___lwmod@divisor,w,c
  1321  0006EC  5C2A               	subwf	___lwmod@dividend,w,c
  1322  0006EE  502D               	movf	___lwmod@divisor+1,w,c
  1323  0006F0  582B               	subwfb	___lwmod@dividend+1,w,c
  1324  0006F2  A0D8               	btfss	status,0,c
  1325  0006F4  D004               	goto	l1584
  1326  0006F6  502C               	movf	___lwmod@divisor,w,c
  1327  0006F8  5E2A               	subwf	___lwmod@dividend,f,c
  1328  0006FA  502D               	movf	___lwmod@divisor+1,w,c
  1329  0006FC  5A2B               	subwfb	___lwmod@dividend+1,f,c
  1330  0006FE                     l1584:
  1331  0006FE  90D8               	bcf	status,0,c
  1332  000700  322D               	rrcf	___lwmod@divisor+1,f,c
  1333  000702  322C               	rrcf	___lwmod@divisor,f,c
  1334  000704  2E2F               	decfsz	___lwmod@counter,f,c
  1335  000706  D7F1               	goto	l1580
  1336  000708                     l640:
  1337  000708  C02A  F02A         	movff	___lwmod@dividend,?___lwmod
  1338  00070C  C02B  F02B         	movff	___lwmod@dividend+1,?___lwmod+1
  1339  000710  0012               	return	
  1340  000712                     __end_of___lwmod:
  1341                           	opt stack 0
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           intcon	equ	0xFF2
  1347                           intcon2	equ	0xFF1
  1348                           wreg	equ	0xFE8
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function ___lwdiv *****************
  1352 ;; Defined at:
  1353 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  dividend        2   33[COMRAM] unsigned int 
  1356 ;;  divisor         2   35[COMRAM] unsigned int 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  quotient        2   38[COMRAM] unsigned int 
  1359 ;;  counter         1   40[COMRAM] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  2   33[COMRAM] unsigned int 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;Total ram usage:        8 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    3
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_rafraichissement
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text5
  1384  000620                     __ptext5:
  1385                           	opt stack 0
  1386  000620                     ___lwdiv:
  1387                           	opt stack 26
  1388                           
  1389                           ;incstack = 0
  1390  000620  0E00               	movlw	0
  1391  000622  6E28               	movwf	___lwdiv@quotient+1,c
  1392  000624  0E00               	movlw	0
  1393  000626  6E27               	movwf	___lwdiv@quotient,c
  1394  000628  5025               	movf	___lwdiv@divisor+1,w,c
  1395  00062A  1024               	iorwf	___lwdiv@divisor,w,c
  1396  00062C  B4D8               	btfsc	status,2,c
  1397  00062E  D01E               	goto	l630
  1398  000630  6E26               	movwf	??___lwdiv& (0+255),c
  1399  000632  0E01               	movlw	1
  1400  000634  6E29               	movwf	___lwdiv@counter,c
  1401  000636  5026               	movf	??___lwdiv& (0+255),w,c
  1402  000638  D004               	goto	l1558
  1403  00063A                     l1556:
  1404  00063A  90D8               	bcf	status,0,c
  1405  00063C  3624               	rlcf	___lwdiv@divisor,f,c
  1406  00063E  3625               	rlcf	___lwdiv@divisor+1,f,c
  1407  000640  2A29               	incf	___lwdiv@counter,f,c
  1408  000642                     l1558:
  1409  000642  AE25               	btfss	___lwdiv@divisor+1,7,c
  1410  000644  D7FA               	goto	l1556
  1411  000646                     l1560:
  1412  000646  90D8               	bcf	status,0,c
  1413  000648  3627               	rlcf	___lwdiv@quotient,f,c
  1414  00064A  3628               	rlcf	___lwdiv@quotient+1,f,c
  1415  00064C  5024               	movf	___lwdiv@divisor,w,c
  1416  00064E  5C22               	subwf	___lwdiv@dividend,w,c
  1417  000650  5025               	movf	___lwdiv@divisor+1,w,c
  1418  000652  5823               	subwfb	___lwdiv@dividend+1,w,c
  1419  000654  A0D8               	btfss	status,0,c
  1420  000656  D005               	goto	l1568
  1421  000658  5024               	movf	___lwdiv@divisor,w,c
  1422  00065A  5E22               	subwf	___lwdiv@dividend,f,c
  1423  00065C  5025               	movf	___lwdiv@divisor+1,w,c
  1424  00065E  5A23               	subwfb	___lwdiv@dividend+1,f,c
  1425  000660  8027               	bsf	___lwdiv@quotient,0,c
  1426  000662                     l1568:
  1427  000662  90D8               	bcf	status,0,c
  1428  000664  3225               	rrcf	___lwdiv@divisor+1,f,c
  1429  000666  3224               	rrcf	___lwdiv@divisor,f,c
  1430  000668  2E29               	decfsz	___lwdiv@counter,f,c
  1431  00066A  D7ED               	goto	l1560
  1432  00066C                     l630:
  1433  00066C  C027  F022         	movff	___lwdiv@quotient,?___lwdiv
  1434  000670  C028  F023         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1435  000674  0012               	return	
  1436  000676                     __end_of___lwdiv:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           intcon	equ	0xFF2
  1443                           intcon2	equ	0xFF1
  1444                           wreg	equ	0xFE8
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _low_interrupt *****************
  1448 ;; Defined at:
  1449 ;;		line 46 in file "main.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;		None               void
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1465 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1466 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;Total ram usage:       15 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    2
  1470 ;; This function calls:
  1471 ;;		i2_rafraichissement
  1472 ;; This function is called by:
  1473 ;;		Interrupt level 2
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	intcode
  1478  000008                     __pintcode:
  1479                           	opt stack 0
  1480  000008                     _low_interrupt:
  1481                           	opt stack 25
  1482                           
  1483                           ;incstack = 0
  1484  000008  CFFA F014          	movff	pclath,??_low_interrupt+1
  1485  00000C  CFFB F015          	movff	pclatu,??_low_interrupt+2
  1486  000010  CFE9 F016          	movff	fsr0l,??_low_interrupt+3
  1487  000014  CFEA F017          	movff	fsr0h,??_low_interrupt+4
  1488  000018  CFE1 F018          	movff	fsr1l,??_low_interrupt+5
  1489  00001C  CFE2 F019          	movff	fsr1h,??_low_interrupt+6
  1490  000020  CFD9 F01A          	movff	fsr2l,??_low_interrupt+7
  1491  000024  CFDA F01B          	movff	fsr2h,??_low_interrupt+8
  1492  000028  CFF3 F01C          	movff	prodl,??_low_interrupt+9
  1493  00002C  CFF4 F01D          	movff	prodh,??_low_interrupt+10
  1494  000030  CFF6 F01E          	movff	tblptrl,??_low_interrupt+11
  1495  000034  CFF7 F01F          	movff	tblptrh,??_low_interrupt+12
  1496  000038  CFF8 F020          	movff	tblptru,??_low_interrupt+13
  1497  00003C  CFF5 F021          	movff	tablat,??_low_interrupt+14
  1498                           
  1499                           ;main.c: 48: if (TMR0IE && TMR0IF) {
  1500  000040  BAF2               	btfsc	intcon,5,c	;volatile
  1501  000042  A4F2               	btfss	intcon,2,c	;volatile
  1502  000044  D016               	goto	i2l68
  1503                           
  1504                           ;main.c: 50: TMR0 = 14;
  1505  000046  0E00               	movlw	0
  1506  000048  6ED7               	movwf	4055,c	;volatile
  1507  00004A  0E0E               	movlw	14
  1508  00004C  6ED6               	movwf	4054,c	;volatile
  1509                           
  1510                           ;main.c: 52: if (balayage == 4) {
  1511  00004E  5039               	movf	_balayage,w,c
  1512  000050  0A04               	xorlw	4
  1513  000052  A4D8               	btfss	status,2,c
  1514  000054  D005               	goto	i2l1630
  1515                           
  1516                           ;main.c: 53: balayage = 0;
  1517  000056  6E13               	movwf	??_low_interrupt& (0+255),c
  1518  000058  0E00               	movlw	0
  1519  00005A  6E39               	movwf	_balayage,c
  1520  00005C  5013               	movf	??_low_interrupt& (0+255),w,c
  1521                           
  1522                           ;main.c: 54: } else {
  1523  00005E  D001               	goto	i2l1632
  1524  000060                     i2l1630:
  1525                           
  1526                           ;main.c: 55: balayage++;
  1527  000060  2A39               	incf	_balayage,f,c
  1528  000062                     i2l1632:
  1529                           
  1530                           ;main.c: 56: }
  1531                           ;main.c: 57: rafraichissement(balayage);
  1532  000062  C039  F00F         	movff	_balayage,i2rafraichissement@afficheur
  1533  000066  6A10               	clrf	i2rafraichissement@afficheur+1,c
  1534  000068  ECEA  F000         	call	i2_rafraichissement	;wreg free
  1535                           
  1536                           ;main.c: 58: time++;
  1537  00006C  4A37               	infsnz	_time,f,c
  1538  00006E  2A38               	incf	_time+1,f,c
  1539                           
  1540                           ;main.c: 60: TMR0IF = 0;
  1541  000070  94F2               	bcf	intcon,2,c	;volatile
  1542  000072                     i2l68:
  1543  000072  C021  FFF5         	movff	??_low_interrupt+14,tablat
  1544  000076  C020  FFF8         	movff	??_low_interrupt+13,tblptru
  1545  00007A  C01F  FFF7         	movff	??_low_interrupt+12,tblptrh
  1546  00007E  C01E  FFF6         	movff	??_low_interrupt+11,tblptrl
  1547  000082  C01D  FFF4         	movff	??_low_interrupt+10,prodh
  1548  000086  C01C  FFF3         	movff	??_low_interrupt+9,prodl
  1549  00008A  C01B  FFDA         	movff	??_low_interrupt+8,fsr2h
  1550  00008E  C01A  FFD9         	movff	??_low_interrupt+7,fsr2l
  1551  000092  C019  FFE2         	movff	??_low_interrupt+6,fsr1h
  1552  000096  C018  FFE1         	movff	??_low_interrupt+5,fsr1l
  1553  00009A  C017  FFEA         	movff	??_low_interrupt+4,fsr0h
  1554  00009E  C016  FFE9         	movff	??_low_interrupt+3,fsr0l
  1555  0000A2  C015  FFFB         	movff	??_low_interrupt+2,pclatu
  1556  0000A6  C014  FFFA         	movff	??_low_interrupt+1,pclath
  1557  0000AA  0011               	retfie		f
  1558  0000AC                     __end_of_low_interrupt:
  1559                           	opt stack 0
  1560                           pclatu	equ	0xFFB
  1561                           pclath	equ	0xFFA
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           prodh	equ	0xFF4
  1567                           prodl	equ	0xFF3
  1568                           intcon	equ	0xFF2
  1569                           intcon2	equ	0xFF1
  1570                           fsr0h	equ	0xFEA
  1571                           fsr0l	equ	0xFE9
  1572                           wreg	equ	0xFE8
  1573                           fsr1h	equ	0xFE2
  1574                           fsr1l	equ	0xFE1
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function i2_rafraichissement *****************
  1580 ;; Defined at:
  1581 ;;		line 160 in file "main.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  afficheur       2   14[COMRAM] int 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;		None               void
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1599 ;;Total ram usage:        4 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		i2___lwdiv
  1604 ;;		i2___lwmod
  1605 ;;		i2_segments
  1606 ;; This function is called by:
  1607 ;;		_low_interrupt
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text7
  1612  0001D4                     __ptext7:
  1613                           	opt stack 0
  1614  0001D4                     i2_rafraichissement:
  1615                           	opt stack 25
  1616                           
  1617                           ;main.c: 162: switch (afficheur) {
  1618                           
  1619                           ;incstack = 0
  1620  0001D4  D078               	goto	i2l1614
  1621  0001D6                     i2l1594:
  1622                           
  1623                           ;main.c: 165: segments(time % 10);
  1624  0001D6  C037  F009         	movff	_time,i2___lwmod@dividend
  1625  0001DA  C038  F00A         	movff	_time+1,i2___lwmod@dividend+1
  1626  0001DE  0E00               	movlw	0
  1627  0001E0  6E0C               	movwf	i2___lwmod@divisor+1,c
  1628  0001E2  0E0A               	movlw	10
  1629  0001E4  6E0B               	movwf	i2___lwmod@divisor,c
  1630  0001E6  EC89  F003         	call	i2___lwmod	;wreg free
  1631  0001EA  5009               	movf	?i2___lwmod,w,c
  1632  0001EC  EC6B  F002         	call	i2_segments
  1633                           
  1634                           ;main.c: 166: PORTA = 0b00000001;
  1635  0001F0  0E01               	movlw	1
  1636  0001F2  6E80               	movwf	3968,c	;volatile
  1637                           
  1638                           ;main.c: 167: break;
  1639  0001F4  0012               	return	
  1640  0001F6                     i2l1598:
  1641                           
  1642                           ;main.c: 169: segments((time / 10) % 10);
  1643  0001F6  0E00               	movlw	0
  1644  0001F8  6E04               	movwf	i2___lwdiv@divisor+1,c
  1645  0001FA  0E0A               	movlw	10
  1646  0001FC  6E03               	movwf	i2___lwdiv@divisor,c
  1647  0001FE  C037  F001         	movff	_time,i2___lwdiv@dividend
  1648  000202  C038  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1649  000206  EC3B  F003         	call	i2___lwdiv	;wreg free
  1650  00020A  C001  F009         	movff	?i2___lwdiv,i2___lwmod@dividend
  1651  00020E  C002  F00A         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1652  000212  0E00               	movlw	0
  1653  000214  6E0C               	movwf	i2___lwmod@divisor+1,c
  1654  000216  0E0A               	movlw	10
  1655  000218  6E0B               	movwf	i2___lwmod@divisor,c
  1656  00021A  EC89  F003         	call	i2___lwmod	;wreg free
  1657  00021E  5009               	movf	?i2___lwmod,w,c
  1658  000220  EC6B  F002         	call	i2_segments
  1659                           
  1660                           ;main.c: 170: PORTA = 0b00000010;
  1661  000224  0E02               	movlw	2
  1662  000226  6E80               	movwf	3968,c	;volatile
  1663                           
  1664                           ;main.c: 171: break;
  1665  000228  0012               	return	
  1666  00022A                     i2l1602:
  1667                           
  1668                           ;main.c: 173: segments((time / 100) % 10);
  1669  00022A  0E00               	movlw	0
  1670  00022C  6E04               	movwf	i2___lwdiv@divisor+1,c
  1671  00022E  0E64               	movlw	100
  1672  000230  6E03               	movwf	i2___lwdiv@divisor,c
  1673  000232  C037  F001         	movff	_time,i2___lwdiv@dividend
  1674  000236  C038  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1675  00023A  EC3B  F003         	call	i2___lwdiv	;wreg free
  1676  00023E  C001  F009         	movff	?i2___lwdiv,i2___lwmod@dividend
  1677  000242  C002  F00A         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1678  000246  0E00               	movlw	0
  1679  000248  6E0C               	movwf	i2___lwmod@divisor+1,c
  1680  00024A  0E0A               	movlw	10
  1681  00024C  6E0B               	movwf	i2___lwmod@divisor,c
  1682  00024E  EC89  F003         	call	i2___lwmod	;wreg free
  1683  000252  5009               	movf	?i2___lwmod,w,c
  1684  000254  EC6B  F002         	call	i2_segments
  1685                           
  1686                           ;main.c: 174: PORTA = 0b00000100;
  1687  000258  0E04               	movlw	4
  1688  00025A  6E80               	movwf	3968,c	;volatile
  1689                           
  1690                           ;main.c: 175: break;
  1691  00025C  0012               	return	
  1692  00025E                     i2l1606:
  1693                           
  1694                           ;main.c: 177: segments((time / 1000) % 10);
  1695  00025E  0E03               	movlw	3
  1696  000260  6E04               	movwf	i2___lwdiv@divisor+1,c
  1697  000262  0EE8               	movlw	232
  1698  000264  6E03               	movwf	i2___lwdiv@divisor,c
  1699  000266  C037  F001         	movff	_time,i2___lwdiv@dividend
  1700  00026A  C038  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1701  00026E  EC3B  F003         	call	i2___lwdiv	;wreg free
  1702  000272  C001  F009         	movff	?i2___lwdiv,i2___lwmod@dividend
  1703  000276  C002  F00A         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1704  00027A  0E00               	movlw	0
  1705  00027C  6E0C               	movwf	i2___lwmod@divisor+1,c
  1706  00027E  0E0A               	movlw	10
  1707  000280  6E0B               	movwf	i2___lwmod@divisor,c
  1708  000282  EC89  F003         	call	i2___lwmod	;wreg free
  1709  000286  5009               	movf	?i2___lwmod,w,c
  1710  000288  EC6B  F002         	call	i2_segments
  1711                           
  1712                           ;main.c: 178: PORTA = 0b00001000;
  1713  00028C  0E08               	movlw	8
  1714  00028E  6E80               	movwf	3968,c	;volatile
  1715                           
  1716                           ;main.c: 179: break;
  1717  000290  0012               	return	
  1718  000292                     i2l1610:
  1719                           
  1720                           ;main.c: 181: segments((time / 10000) % 10);
  1721  000292  0E27               	movlw	39
  1722  000294  6E04               	movwf	i2___lwdiv@divisor+1,c
  1723  000296  0E10               	movlw	16
  1724  000298  6E03               	movwf	i2___lwdiv@divisor,c
  1725  00029A  C037  F001         	movff	_time,i2___lwdiv@dividend
  1726  00029E  C038  F002         	movff	_time+1,i2___lwdiv@dividend+1
  1727  0002A2  EC3B  F003         	call	i2___lwdiv	;wreg free
  1728  0002A6  C001  F009         	movff	?i2___lwdiv,i2___lwmod@dividend
  1729  0002AA  C002  F00A         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  1730  0002AE  0E00               	movlw	0
  1731  0002B0  6E0C               	movwf	i2___lwmod@divisor+1,c
  1732  0002B2  0E0A               	movlw	10
  1733  0002B4  6E0B               	movwf	i2___lwmod@divisor,c
  1734  0002B6  EC89  F003         	call	i2___lwmod	;wreg free
  1735  0002BA  5009               	movf	?i2___lwmod,w,c
  1736  0002BC  EC6B  F002         	call	i2_segments
  1737                           
  1738                           ;main.c: 182: PORTA = 0b00100000;
  1739  0002C0  0E20               	movlw	32
  1740  0002C2  6E80               	movwf	3968,c	;volatile
  1741                           
  1742                           ;main.c: 183: break;
  1743  0002C4  0012               	return	
  1744  0002C6                     i2l1614:
  1745  0002C6  C00F  F011         	movff	i2rafraichissement@afficheur,??i2_rafraichissement
  1746  0002CA  C010  F012         	movff	i2rafraichissement@afficheur+1,??i2_rafraichissement+1
  1747                           
  1748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1749                           ; Switch size 1, requested type "space"
  1750                           ; Number of cases is 1, Range of values is 0 to 0
  1751                           ; switch strategies available:
  1752                           ; Name         Instructions Cycles
  1753                           ; simple_byte            4     3 (average)
  1754                           ;	Chosen strategy is simple_byte
  1755  0002CE  5012               	movf	??i2_rafraichissement+1,w,c
  1756  0002D0  0A00               	xorlw	0	; case 0
  1757  0002D2  A4D8               	btfss	status,2,c
  1758  0002D4  0012               	return	
  1759                           
  1760                           ; Switch size 1, requested type "space"
  1761                           ; Number of cases is 5, Range of values is 0 to 4
  1762                           ; switch strategies available:
  1763                           ; Name         Instructions Cycles
  1764                           ; simple_byte           16     9 (average)
  1765                           ;	Chosen strategy is simple_byte
  1766  0002D6  5011               	movf	??i2_rafraichissement,w,c
  1767  0002D8  0A00               	xorlw	0	; case 0
  1768  0002DA  B4D8               	btfsc	status,2,c
  1769  0002DC  D77C               	goto	i2l1594
  1770  0002DE  0A01               	xorlw	1	; case 1
  1771  0002E0  B4D8               	btfsc	status,2,c
  1772  0002E2  D789               	goto	i2l1598
  1773  0002E4  0A03               	xorlw	3	; case 2
  1774  0002E6  B4D8               	btfsc	status,2,c
  1775  0002E8  D7A0               	goto	i2l1602
  1776  0002EA  0A01               	xorlw	1	; case 3
  1777  0002EC  B4D8               	btfsc	status,2,c
  1778  0002EE  D7B7               	goto	i2l1606
  1779  0002F0  0A07               	xorlw	7	; case 4
  1780  0002F2  A4D8               	btfss	status,2,c
  1781  0002F4  0012               	return	
  1782  0002F6  D7CD               	goto	i2l1610
  1783  0002F8                     __end_ofi2_rafraichissement:
  1784                           	opt stack 0
  1785                           pclatu	equ	0xFFB
  1786                           pclath	equ	0xFFA
  1787                           tblptru	equ	0xFF8
  1788                           tblptrh	equ	0xFF7
  1789                           tblptrl	equ	0xFF6
  1790                           tablat	equ	0xFF5
  1791                           prodh	equ	0xFF4
  1792                           prodl	equ	0xFF3
  1793                           intcon	equ	0xFF2
  1794                           intcon2	equ	0xFF1
  1795                           fsr0h	equ	0xFEA
  1796                           fsr0l	equ	0xFE9
  1797                           wreg	equ	0xFE8
  1798                           fsr1h	equ	0xFE2
  1799                           fsr1l	equ	0xFE1
  1800                           fsr2h	equ	0xFDA
  1801                           fsr2l	equ	0xFD9
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function i2_segments *****************
  1805 ;; Defined at:
  1806 ;;		line 8 in file "converter.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  figure          1    wreg     unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  figure          1    0[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		i2_rafraichissement
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text8
  1834  0004D6                     __ptext8:
  1835                           	opt stack 0
  1836  0004D6                     i2_segments:
  1837                           	opt stack 25
  1838                           
  1839                           ;incstack = 0
  1840                           ;i2segments@figure stored from wreg
  1841  0004D6  CFE8 F001          	movff	wreg,i2segments@figure
  1842                           
  1843                           ;converter.c: 24: switch (figure) {
  1844  0004DA  D050               	goto	i2l1590
  1845  0004DC                     i2l112:
  1846                           
  1847                           ;converter.c: 26: PORTCbits.RC1 = 0;
  1848  0004DC  9282               	bcf	3970,1,c	;volatile
  1849                           
  1850                           ;converter.c: 27: PORTCbits.RC2 = 0;
  1851  0004DE  9482               	bcf	3970,2,c	;volatile
  1852                           
  1853                           ;converter.c: 28: PORTCbits.RC3 = 0;
  1854  0004E0  9682               	bcf	3970,3,c	;volatile
  1855                           
  1856                           ;converter.c: 29: PORTCbits.RC4 = 0;
  1857  0004E2  9882               	bcf	3970,4,c	;volatile
  1858                           
  1859                           ;converter.c: 30: PORTCbits.RC5 = 0;
  1860  0004E4  9A82               	bcf	3970,5,c	;volatile
  1861                           
  1862                           ;converter.c: 31: PORTCbits.RC6 = 0;
  1863  0004E6  9C82               	bcf	3970,6,c	;volatile
  1864                           
  1865                           ;converter.c: 32: PORTCbits.RC7 = 1;
  1866  0004E8  8E82               	bsf	3970,7,c	;volatile
  1867                           
  1868                           ;converter.c: 33: break;
  1869  0004EA  0012               	return	
  1870  0004EC                     i2l114:
  1871                           
  1872                           ;converter.c: 36: PORTCbits.RC1 = 1;
  1873  0004EC  8282               	bsf	3970,1,c	;volatile
  1874                           
  1875                           ;converter.c: 37: PORTCbits.RC2 = 0;
  1876  0004EE  9482               	bcf	3970,2,c	;volatile
  1877                           
  1878                           ;converter.c: 38: PORTCbits.RC3 = 0;
  1879  0004F0  9682               	bcf	3970,3,c	;volatile
  1880                           
  1881                           ;converter.c: 39: PORTCbits.RC4 = 1;
  1882  0004F2  8882               	bsf	3970,4,c	;volatile
  1883                           
  1884                           ;converter.c: 40: PORTCbits.RC5 = 1;
  1885  0004F4  8A82               	bsf	3970,5,c	;volatile
  1886                           
  1887                           ;converter.c: 41: PORTCbits.RC6 = 1;
  1888  0004F6  8C82               	bsf	3970,6,c	;volatile
  1889                           
  1890                           ;converter.c: 42: PORTCbits.RC7 = 1;
  1891  0004F8  8E82               	bsf	3970,7,c	;volatile
  1892                           
  1893                           ;converter.c: 43: break;
  1894  0004FA  0012               	return	
  1895  0004FC                     i2l115:
  1896                           
  1897                           ;converter.c: 45: PORTCbits.RC1 = 0;
  1898  0004FC  9282               	bcf	3970,1,c	;volatile
  1899                           
  1900                           ;converter.c: 46: PORTCbits.RC2 = 0;
  1901  0004FE  9482               	bcf	3970,2,c	;volatile
  1902                           
  1903                           ;converter.c: 47: PORTCbits.RC3 = 1;
  1904  000500  8682               	bsf	3970,3,c	;volatile
  1905                           
  1906                           ;converter.c: 48: PORTCbits.RC4 = 0;
  1907  000502  9882               	bcf	3970,4,c	;volatile
  1908                           
  1909                           ;converter.c: 49: PORTCbits.RC5 = 0;
  1910  000504  9A82               	bcf	3970,5,c	;volatile
  1911                           
  1912                           ;converter.c: 50: PORTCbits.RC6 = 1;
  1913  000506  8C82               	bsf	3970,6,c	;volatile
  1914                           
  1915                           ;converter.c: 51: PORTCbits.RC7 = 0;
  1916  000508  9E82               	bcf	3970,7,c	;volatile
  1917                           
  1918                           ;converter.c: 52: break;
  1919  00050A  0012               	return	
  1920  00050C                     i2l116:
  1921                           
  1922                           ;converter.c: 54: PORTCbits.RC1 = 0;
  1923  00050C  9282               	bcf	3970,1,c	;volatile
  1924                           
  1925                           ;converter.c: 55: PORTCbits.RC2 = 0;
  1926  00050E  9482               	bcf	3970,2,c	;volatile
  1927                           
  1928                           ;converter.c: 56: PORTCbits.RC3 = 0;
  1929  000510  9682               	bcf	3970,3,c	;volatile
  1930                           
  1931                           ;converter.c: 57: PORTCbits.RC4 = 0;
  1932  000512  9882               	bcf	3970,4,c	;volatile
  1933                           
  1934                           ;converter.c: 58: PORTCbits.RC5 = 1;
  1935  000514  8A82               	bsf	3970,5,c	;volatile
  1936                           
  1937                           ;converter.c: 59: PORTCbits.RC6 = 1;
  1938  000516  8C82               	bsf	3970,6,c	;volatile
  1939                           
  1940                           ;converter.c: 60: PORTCbits.RC7 = 0;
  1941  000518  9E82               	bcf	3970,7,c	;volatile
  1942                           
  1943                           ;converter.c: 61: break;
  1944  00051A  0012               	return	
  1945  00051C                     i2l117:
  1946                           
  1947                           ;converter.c: 64: PORTCbits.RC1 = 1;
  1948  00051C  8282               	bsf	3970,1,c	;volatile
  1949                           
  1950                           ;converter.c: 65: PORTCbits.RC2 = 0;
  1951  00051E  9482               	bcf	3970,2,c	;volatile
  1952                           
  1953                           ;converter.c: 66: PORTCbits.RC3 = 0;
  1954  000520  9682               	bcf	3970,3,c	;volatile
  1955                           
  1956                           ;converter.c: 67: PORTCbits.RC4 = 1;
  1957  000522  8882               	bsf	3970,4,c	;volatile
  1958                           
  1959                           ;converter.c: 68: PORTCbits.RC5 = 1;
  1960  000524  8A82               	bsf	3970,5,c	;volatile
  1961                           
  1962                           ;converter.c: 69: PORTCbits.RC6 = 0;
  1963  000526  9C82               	bcf	3970,6,c	;volatile
  1964                           
  1965                           ;converter.c: 70: PORTCbits.RC7 = 0;
  1966  000528  9E82               	bcf	3970,7,c	;volatile
  1967                           
  1968                           ;converter.c: 71: break;
  1969  00052A  0012               	return	
  1970  00052C                     i2l118:
  1971                           
  1972                           ;converter.c: 73: PORTCbits.RC1 = 0;
  1973  00052C  9282               	bcf	3970,1,c	;volatile
  1974                           
  1975                           ;converter.c: 74: PORTCbits.RC2 = 1;
  1976  00052E  8482               	bsf	3970,2,c	;volatile
  1977                           
  1978                           ;converter.c: 75: PORTCbits.RC3 = 0;
  1979  000530  9682               	bcf	3970,3,c	;volatile
  1980                           
  1981                           ;converter.c: 76: PORTCbits.RC4 = 0;
  1982  000532  9882               	bcf	3970,4,c	;volatile
  1983                           
  1984                           ;converter.c: 77: PORTCbits.RC5 = 1;
  1985  000534  8A82               	bsf	3970,5,c	;volatile
  1986                           
  1987                           ;converter.c: 78: PORTCbits.RC6 = 0;
  1988  000536  9C82               	bcf	3970,6,c	;volatile
  1989                           
  1990                           ;converter.c: 79: PORTCbits.RC7 = 0;
  1991  000538  9E82               	bcf	3970,7,c	;volatile
  1992                           
  1993                           ;converter.c: 81: break;
  1994  00053A  0012               	return	
  1995  00053C                     i2l119:
  1996                           
  1997                           ;converter.c: 83: PORTCbits.RC1 = 0;
  1998  00053C  9282               	bcf	3970,1,c	;volatile
  1999                           
  2000                           ;converter.c: 84: PORTCbits.RC2 = 1;
  2001  00053E  8482               	bsf	3970,2,c	;volatile
  2002                           
  2003                           ;converter.c: 85: PORTCbits.RC3 = 0;
  2004  000540  9682               	bcf	3970,3,c	;volatile
  2005                           
  2006                           ;converter.c: 86: PORTCbits.RC4 = 0;
  2007  000542  9882               	bcf	3970,4,c	;volatile
  2008                           
  2009                           ;converter.c: 87: PORTCbits.RC5 = 0;
  2010  000544  9A82               	bcf	3970,5,c	;volatile
  2011                           
  2012                           ;converter.c: 88: PORTCbits.RC6 = 0;
  2013  000546  9C82               	bcf	3970,6,c	;volatile
  2014                           
  2015                           ;converter.c: 89: PORTCbits.RC7 = 0;
  2016  000548  9E82               	bcf	3970,7,c	;volatile
  2017                           
  2018                           ;converter.c: 90: break;
  2019  00054A  0012               	return	
  2020  00054C                     i2l120:
  2021                           
  2022                           ;converter.c: 93: PORTCbits.RC1 = 0;
  2023  00054C  9282               	bcf	3970,1,c	;volatile
  2024                           
  2025                           ;converter.c: 94: PORTCbits.RC2 = 0;
  2026  00054E  9482               	bcf	3970,2,c	;volatile
  2027                           
  2028                           ;converter.c: 95: PORTCbits.RC3 = 0;
  2029  000550  9682               	bcf	3970,3,c	;volatile
  2030                           
  2031                           ;converter.c: 96: PORTCbits.RC4 = 1;
  2032  000552  8882               	bsf	3970,4,c	;volatile
  2033                           
  2034                           ;converter.c: 97: PORTCbits.RC5 = 1;
  2035  000554  8A82               	bsf	3970,5,c	;volatile
  2036                           
  2037                           ;converter.c: 98: PORTCbits.RC6 = 1;
  2038  000556  8C82               	bsf	3970,6,c	;volatile
  2039                           
  2040                           ;converter.c: 99: PORTCbits.RC7 = 1;
  2041  000558  8E82               	bsf	3970,7,c	;volatile
  2042                           
  2043                           ;converter.c: 100: break;
  2044  00055A  0012               	return	
  2045  00055C                     i2l121:
  2046                           
  2047                           ;converter.c: 102: PORTCbits.RC1 = 0;
  2048  00055C  9282               	bcf	3970,1,c	;volatile
  2049                           
  2050                           ;converter.c: 103: PORTCbits.RC2 = 0;
  2051  00055E  9482               	bcf	3970,2,c	;volatile
  2052                           
  2053                           ;converter.c: 104: PORTCbits.RC3 = 0;
  2054  000560  9682               	bcf	3970,3,c	;volatile
  2055                           
  2056                           ;converter.c: 105: PORTCbits.RC4 = 0;
  2057  000562  9882               	bcf	3970,4,c	;volatile
  2058                           
  2059                           ;converter.c: 106: PORTCbits.RC5 = 0;
  2060  000564  9A82               	bcf	3970,5,c	;volatile
  2061                           
  2062                           ;converter.c: 107: PORTCbits.RC6 = 0;
  2063  000566  9C82               	bcf	3970,6,c	;volatile
  2064                           
  2065                           ;converter.c: 108: PORTCbits.RC7 = 0;
  2066  000568  9E82               	bcf	3970,7,c	;volatile
  2067                           
  2068                           ;converter.c: 109: break;
  2069  00056A  0012               	return	
  2070  00056C                     i2l122:
  2071                           
  2072                           ;converter.c: 111: PORTCbits.RC1 = 0;
  2073  00056C  9282               	bcf	3970,1,c	;volatile
  2074                           
  2075                           ;converter.c: 112: PORTCbits.RC2 = 0;
  2076  00056E  9482               	bcf	3970,2,c	;volatile
  2077                           
  2078                           ;converter.c: 113: PORTCbits.RC3 = 0;
  2079  000570  9682               	bcf	3970,3,c	;volatile
  2080                           
  2081                           ;converter.c: 114: PORTCbits.RC4 = 0;
  2082  000572  9882               	bcf	3970,4,c	;volatile
  2083                           
  2084                           ;converter.c: 115: PORTCbits.RC5 = 1;
  2085  000574  8A82               	bsf	3970,5,c	;volatile
  2086                           
  2087                           ;converter.c: 116: PORTCbits.RC6 = 0;
  2088  000576  9C82               	bcf	3970,6,c	;volatile
  2089                           
  2090                           ;converter.c: 117: PORTCbits.RC7 = 0;
  2091  000578  9E82               	bcf	3970,7,c	;volatile
  2092                           
  2093                           ;converter.c: 118: break;
  2094  00057A  0012               	return	
  2095  00057C                     i2l1590:
  2096  00057C  5001               	movf	i2segments@figure,w,c
  2097                           
  2098                           ; Switch size 1, requested type "space"
  2099                           ; Number of cases is 10, Range of values is 0 to 9
  2100                           ; switch strategies available:
  2101                           ; Name         Instructions Cycles
  2102                           ; simple_byte           31    16 (average)
  2103                           ;	Chosen strategy is simple_byte
  2104  00057E  0A00               	xorlw	0	; case 0
  2105  000580  B4D8               	btfsc	status,2,c
  2106  000582  D7AC               	goto	i2l112
  2107  000584  0A01               	xorlw	1	; case 1
  2108  000586  B4D8               	btfsc	status,2,c
  2109  000588  D7B1               	goto	i2l114
  2110  00058A  0A03               	xorlw	3	; case 2
  2111  00058C  B4D8               	btfsc	status,2,c
  2112  00058E  D7B6               	goto	i2l115
  2113  000590  0A01               	xorlw	1	; case 3
  2114  000592  B4D8               	btfsc	status,2,c
  2115  000594  D7BB               	goto	i2l116
  2116  000596  0A07               	xorlw	7	; case 4
  2117  000598  B4D8               	btfsc	status,2,c
  2118  00059A  D7C0               	goto	i2l117
  2119  00059C  0A01               	xorlw	1	; case 5
  2120  00059E  B4D8               	btfsc	status,2,c
  2121  0005A0  D7C5               	goto	i2l118
  2122  0005A2  0A03               	xorlw	3	; case 6
  2123  0005A4  B4D8               	btfsc	status,2,c
  2124  0005A6  D7CA               	goto	i2l119
  2125  0005A8  0A01               	xorlw	1	; case 7
  2126  0005AA  B4D8               	btfsc	status,2,c
  2127  0005AC  D7CF               	goto	i2l120
  2128  0005AE  0A0F               	xorlw	15	; case 8
  2129  0005B0  B4D8               	btfsc	status,2,c
  2130  0005B2  D7D4               	goto	i2l121
  2131  0005B4  0A01               	xorlw	1	; case 9
  2132  0005B6  A4D8               	btfss	status,2,c
  2133  0005B8  0012               	return	
  2134  0005BA  D7D8               	goto	i2l122
  2135  0005BC                     __end_ofi2_segments:
  2136                           	opt stack 0
  2137                           pclatu	equ	0xFFB
  2138                           pclath	equ	0xFFA
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           prodh	equ	0xFF4
  2144                           prodl	equ	0xFF3
  2145                           intcon	equ	0xFF2
  2146                           intcon2	equ	0xFF1
  2147                           fsr0h	equ	0xFEA
  2148                           fsr0l	equ	0xFE9
  2149                           wreg	equ	0xFE8
  2150                           fsr1h	equ	0xFE2
  2151                           fsr1l	equ	0xFE1
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function i2___lwmod *****************
  2157 ;; Defined at:
  2158 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  dividend        2    8[COMRAM] unsigned int 
  2161 ;;  divisor         2   10[COMRAM] unsigned int 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  __lwmod         1   13[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  2    8[COMRAM] unsigned int 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2177 ;;Total ram usage:        6 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		i2_rafraichissement
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text9
  2187  000712                     __ptext9:
  2188                           	opt stack 0
  2189  000712                     i2___lwmod:
  2190                           	opt stack 25
  2191                           
  2192                           ;incstack = 0
  2193  000712  500C               	movf	i2___lwmod@divisor+1,w,c
  2194  000714  100B               	iorwf	i2___lwmod@divisor,w,c
  2195  000716  B4D8               	btfsc	status,2,c
  2196  000718  D01A               	goto	i2l640
  2197  00071A  6E0D               	movwf	??i2___lwmod& (0+255),c
  2198  00071C  0E01               	movlw	1
  2199  00071E  6E0E               	movwf	i2___lwmod@counter,c
  2200  000720  500D               	movf	??i2___lwmod& (0+255),w,c
  2201  000722  D004               	goto	i2l1254
  2202  000724                     i2l1252:
  2203  000724  90D8               	bcf	status,0,c
  2204  000726  360B               	rlcf	i2___lwmod@divisor,f,c
  2205  000728  360C               	rlcf	i2___lwmod@divisor+1,f,c
  2206  00072A  2A0E               	incf	i2___lwmod@counter,f,c
  2207  00072C                     i2l1254:
  2208  00072C  AE0C               	btfss	i2___lwmod@divisor+1,7,c
  2209  00072E  D7FA               	goto	i2l1252
  2210  000730                     i2l1256:
  2211  000730  500B               	movf	i2___lwmod@divisor,w,c
  2212  000732  5C09               	subwf	i2___lwmod@dividend,w,c
  2213  000734  500C               	movf	i2___lwmod@divisor+1,w,c
  2214  000736  580A               	subwfb	i2___lwmod@dividend+1,w,c
  2215  000738  A0D8               	btfss	status,0,c
  2216  00073A  D004               	goto	i2l1260
  2217  00073C  500B               	movf	i2___lwmod@divisor,w,c
  2218  00073E  5E09               	subwf	i2___lwmod@dividend,f,c
  2219  000740  500C               	movf	i2___lwmod@divisor+1,w,c
  2220  000742  5A0A               	subwfb	i2___lwmod@dividend+1,f,c
  2221  000744                     i2l1260:
  2222  000744  90D8               	bcf	status,0,c
  2223  000746  320C               	rrcf	i2___lwmod@divisor+1,f,c
  2224  000748  320B               	rrcf	i2___lwmod@divisor,f,c
  2225  00074A  2E0E               	decfsz	i2___lwmod@counter,f,c
  2226  00074C  D7F1               	goto	i2l1256
  2227  00074E                     i2l640:
  2228  00074E  C009  F009         	movff	i2___lwmod@dividend,?i2___lwmod
  2229  000752  C00A  F00A         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2230  000756  0012               	return	
  2231  000758                     __end_ofi2___lwmod:
  2232                           	opt stack 0
  2233                           pclatu	equ	0xFFB
  2234                           pclath	equ	0xFFA
  2235                           tblptru	equ	0xFF8
  2236                           tblptrh	equ	0xFF7
  2237                           tblptrl	equ	0xFF6
  2238                           tablat	equ	0xFF5
  2239                           prodh	equ	0xFF4
  2240                           prodl	equ	0xFF3
  2241                           intcon	equ	0xFF2
  2242                           intcon2	equ	0xFF1
  2243                           fsr0h	equ	0xFEA
  2244                           fsr0l	equ	0xFE9
  2245                           wreg	equ	0xFE8
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           fsr2h	equ	0xFDA
  2249                           fsr2l	equ	0xFD9
  2250                           status	equ	0xFD8
  2251                           
  2252 ;; *************** function i2___lwdiv *****************
  2253 ;; Defined at:
  2254 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  dividend        2    0[COMRAM] unsigned int 
  2257 ;;  divisor         2    2[COMRAM] unsigned int 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  __lwdiv         2    5[COMRAM] unsigned int 
  2260 ;;  __lwdiv         1    7[COMRAM] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2    0[COMRAM] unsigned int 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;Total ram usage:        8 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		i2_rafraichissement
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text10
  2284  000676                     __ptext10:
  2285                           	opt stack 0
  2286  000676                     i2___lwdiv:
  2287                           	opt stack 25
  2288                           
  2289                           ;incstack = 0
  2290  000676  0E00               	movlw	0
  2291  000678  6E07               	movwf	i2___lwdiv@quotient+1,c
  2292  00067A  0E00               	movlw	0
  2293  00067C  6E06               	movwf	i2___lwdiv@quotient,c
  2294  00067E  5004               	movf	i2___lwdiv@divisor+1,w,c
  2295  000680  1003               	iorwf	i2___lwdiv@divisor,w,c
  2296  000682  B4D8               	btfsc	status,2,c
  2297  000684  D01E               	goto	i2l630
  2298  000686  6E05               	movwf	??i2___lwdiv& (0+255),c
  2299  000688  0E01               	movlw	1
  2300  00068A  6E08               	movwf	i2___lwdiv@counter,c
  2301  00068C  5005               	movf	??i2___lwdiv& (0+255),w,c
  2302  00068E  D004               	goto	i2l1218
  2303  000690                     i2l1216:
  2304  000690  90D8               	bcf	status,0,c
  2305  000692  3603               	rlcf	i2___lwdiv@divisor,f,c
  2306  000694  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  2307  000696  2A08               	incf	i2___lwdiv@counter,f,c
  2308  000698                     i2l1218:
  2309  000698  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  2310  00069A  D7FA               	goto	i2l1216
  2311  00069C                     i2l1220:
  2312  00069C  90D8               	bcf	status,0,c
  2313  00069E  3606               	rlcf	i2___lwdiv@quotient,f,c
  2314  0006A0  3607               	rlcf	i2___lwdiv@quotient+1,f,c
  2315  0006A2  5003               	movf	i2___lwdiv@divisor,w,c
  2316  0006A4  5C01               	subwf	i2___lwdiv@dividend,w,c
  2317  0006A6  5004               	movf	i2___lwdiv@divisor+1,w,c
  2318  0006A8  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  2319  0006AA  A0D8               	btfss	status,0,c
  2320  0006AC  D005               	goto	i2l1228
  2321  0006AE  5003               	movf	i2___lwdiv@divisor,w,c
  2322  0006B0  5E01               	subwf	i2___lwdiv@dividend,f,c
  2323  0006B2  5004               	movf	i2___lwdiv@divisor+1,w,c
  2324  0006B4  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  2325  0006B6  8006               	bsf	i2___lwdiv@quotient,0,c
  2326  0006B8                     i2l1228:
  2327  0006B8  90D8               	bcf	status,0,c
  2328  0006BA  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  2329  0006BC  3203               	rrcf	i2___lwdiv@divisor,f,c
  2330  0006BE  2E08               	decfsz	i2___lwdiv@counter,f,c
  2331  0006C0  D7ED               	goto	i2l1220
  2332  0006C2                     i2l630:
  2333  0006C2  C006  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  2334  0006C6  C007  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  2335  0006CA  0012               	return	
  2336  0006CC                     __end_ofi2___lwdiv:
  2337                           	opt stack 0
  2338  0000                     pclatu	equ	0xFFB
  2339                           pclath	equ	0xFFA
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           prodh	equ	0xFF4
  2345                           prodl	equ	0xFF3
  2346                           intcon	equ	0xFF2
  2347                           intcon2	equ	0xFF1
  2348                           fsr0h	equ	0xFEA
  2349                           fsr0l	equ	0xFE9
  2350                           wreg	equ	0xFE8
  2351                           fsr1h	equ	0xFE2
  2352                           fsr1l	equ	0xFE1
  2353                           fsr2h	equ	0xFDA
  2354                           fsr2l	equ	0xFD9
  2355                           status	equ	0xFD8
  2356                           pclatu	equ	0xFFB
  2357                           pclath	equ	0xFFA
  2358                           tblptru	equ	0xFF8
  2359                           tblptrh	equ	0xFF7
  2360                           tblptrl	equ	0xFF6
  2361                           tablat	equ	0xFF5
  2362                           prodh	equ	0xFF4
  2363                           prodl	equ	0xFF3
  2364                           intcon	equ	0xFF2
  2365                           intcon2	equ	0xFF1
  2366                           fsr0h	equ	0xFEA
  2367                           fsr0l	equ	0xFE9
  2368                           wreg	equ	0xFE8
  2369                           fsr1h	equ	0xFE2
  2370                           fsr1l	equ	0xFE1
  2371                           fsr2h	equ	0xFDA
  2372                           fsr2l	equ	0xFD9
  2373                           status	equ	0xFD8
  2374                           
  2375                           	psect	rparam
  2376  0000                     pclatu	equ	0xFFB
  2377                           pclath	equ	0xFFA
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           prodh	equ	0xFF4
  2383                           prodl	equ	0xFF3
  2384                           intcon	equ	0xFF2
  2385                           intcon2	equ	0xFF1
  2386                           fsr0h	equ	0xFEA
  2387                           fsr0l	equ	0xFE9
  2388                           wreg	equ	0xFE8
  2389                           fsr1h	equ	0xFE2
  2390                           fsr1l	equ	0xFE1
  2391                           fsr2h	equ	0xFDA
  2392                           fsr2l	equ	0xFD9
  2393                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      61
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_initialisation
    _initialisation->_rafraichissement
    _rafraichissement->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _low_interrupt in COMRAM

    _low_interrupt->i2_rafraichissement
    i2_rafraichissement->i2___lwmod
    i2___lwmod->i2___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_interrupt in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12     7      5    2831
                                             53 COMRAM     1     1      0
                                              0 BANK0     11     6      5
                     _initialisation
                   _rafraichissement
                           _segments
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       2     2      0    1332
                                             51 COMRAM     2     2      0
                   _rafraichissement
                           _segments
 ---------------------------------------------------------------------------------
 (1) _rafraichissement                                     4     2      2    1242
                                             47 COMRAM     4     2      2
                            ___lwdiv
                            ___lwmod
                           _segments
 ---------------------------------------------------------------------------------
 (1) _segments                                             1     1      0      22
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     589
                                             41 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     506
                                             33 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_interrupt                                       15    15      0    2399
                                             18 COMRAM    15    15      0
                 i2_rafraichissement
 ---------------------------------------------------------------------------------
 (5) i2_rafraichissement                                   4     2      2    2399
                                             14 COMRAM     4     2      2
                          i2___lwdiv
                          i2___lwmod
                         i2_segments
 ---------------------------------------------------------------------------------
 (6) i2_segments                                           1     1      0      73
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) i2___lwmod                                            6     2      4    1180
                                              8 COMRAM     6     2      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i2___lwdiv                                            8     4      4    1028
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
     _rafraichissement
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _segments
     _segments
   _rafraichissement
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _segments
   _segments

 _low_interrupt (ROOT)
   i2_rafraichissement
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_segments

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     36      3D       1       64.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48       6        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Sep 26 10:40:29 2014

__size_ofi2_rafraichissement 0124                           l72 033E                           l81 0382  
                         l85 03C2                           l86 03C6           i2___lwdiv@dividend 0001  
                        l120 0466                          l112 03F6                          l121 0476  
                        l122 0486                          l114 0406                          l115 0416  
                        l116 0426                          l117 0436                          l118 0446  
                        l119 0456                          l630 066C                          l640 0708  
                        _GIE 007F97                          _PSA 007EAB                          wreg 000FE8  
               __CFG_IESO$ON 000000               segments@figure 0022                         l1420 00D2  
                       l1432 016E                         l1424 0106                         l1416 00B2  
                       l1428 013A                         l1436 01A2                         l1524 0602  
                       l1560 0646                         l1556 063A                         l1580 06EA  
                       l1548 0496                         l1558 0642                         l1568 0662  
                       l1584 06FE                         l1576 06DE                         l1736 03DA  
                       l1680 02FC                         l1578 06E6                         _T0CS 007EAD  
                       _PEIE 007F96                         i2l68 0072                         _TMR0 000FD6  
           ??_initialisation 0034                __CFG_FCMEN$ON 000000                         _main 02F8  
                       _time 0037                         fsr0h 000FEA                         fsr1h 000FE2  
         i2___lwdiv@quotient 0006                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         fsr2l 000FD9                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3                         start 00AC  
                 i2_segments 04D6    __size_of_rafraichissement 0124                        ?_main 0060  
                      _T0PS0 007EA8                        _T0PS1 007EA9                        _T0PS2 007EAA  
            __end_of___lwdiv 0676                        i2l120 054C                        i2l112 04DC  
                      i2l121 055C              __end_of___lwmod 0712                        i2l122 056C  
                      i2l114 04EC                        i2l115 04FC                        i2l116 050C  
                      i2l117 051C                        i2l118 052C                        i2l119 053C  
                      i2l630 06C2                        i2l640 074E                        _PORTA 000F80  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
             __CFG_EBTRB$OFF 000000                        tablat 000FF5                        status 000FD8  
         __size_ofi2___lwdiv 0056           __size_ofi2___lwmod 0046              __initialization 0758  
               __end_of_main 03F0                main@delay_193 0067    rafraichissement@afficheur 0030  
                     ??_main 0036                __activetblptr 000002                       _ADCON1 000FC1  
                     _ANCON0 000F5D                       _T08BIT 007EAE                       i2l1220 069C  
                     i2l1216 0690                       i2l1218 0698                       i2l1228 06B8  
                     i2l1260 0744                       i2l1252 0724                       i2l1254 072C  
                     i2l1256 0730                       i2l1610 0292                       i2l1602 022A  
                     i2l1606 025E                       i2l1614 02C6                       i2l1630 0060  
                     i2l1632 0062                       i2l1590 057C               __CFG_WDTEN$OFF 000000  
                     i2l1594 01D6                       i2l1598 01F6                       _INTCON 000FF2  
                     _TMR0IE 007F95                       _TMR0IF 007F92                       _TMR0ON 007EAF  
      __end_of_low_interrupt 00AC                  ?i2_segments 0001               __CFG_XINST$OFF 000000  
                  ??___lwdiv 0026                    ??___lwmod 002E                       _valeur 003C  
                     _stance 003D             __end_of_segments 04D6                 __pdataCOMRAM 003D  
          __end_ofi2___lwdiv 06CC            __end_ofi2___lwmod 0758                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0060  
    __end_of__initialization 0776           i2___lwmod@dividend 0009               __pcstackCOMRAM 0001  
           _rafraichissement 00B0          __size_ofi2_segments 00E6   __end_ofi2_rafraichissement 02F8  
                    _INTEDG0 007F8E                _front_montant 003A                      __Hparam 0000  
                  ?_segments 0001                      __Lparam 0000                      ___lwdiv 0620  
                    ___lwmod 06CC                      __pcinit 0758                      __ramtop 0F00  
                    __ptext0 02F8                      __ptext1 05BC                      __ptext2 00B0  
                    __ptext3 03F0                      __ptext4 06CC                      __ptext5 0620  
                    __ptext7 01D4                      __ptext8 04D6                      __ptext9 0712  
             main@razdisplay 0069         end_of_initialization 0776                __Lmediumconst 0000  
               ??i2_segments 0001                   ??_segments 0022      __size_of_initialisation 0064  
                  _PORTCbits 000F82     initialisation@razdisplay 0034           __end_ofi2_segments 05BC  
   __end_of_rafraichissement 01D4            i2___lwdiv@divisor 0003                    i2___lwdiv 0676  
                  i2___lwmod 0712            i2___lwdiv@counter 0008                __pidataCOMRAM 0780  
        start_initialization 0758       __size_of_low_interrupt 00A4                   ?i2___lwdiv 0001  
                 ?i2___lwmod 0009  i2rafraichissement@afficheur 000F           i2_rafraichissement 01D4  
                __pbssCOMRAM 0037                __pcstackBANK0 0060            i2___lwmod@divisor 000B  
          i2___lwmod@counter 000E          ?i2_rafraichissement 000F             ___lwdiv@dividend 0022  
              _low_interrupt 0008                    __pintcode 0008               _initialisation 05BC  
       ??i2_rafraichissement 0011            __size_of_segments 00E6                     ?___lwdiv 0022  
                   ?___lwmod 002A             ___lwdiv@quotient 0027                  ??i2___lwdiv 0005  
                ??i2___lwmod 000D                    _old_state 003B       __end_of_initialisation 0620  
             ?_low_interrupt 0001                     _RCONbits 000FD0             __CFG_SOSCSEL$DIG 000000  
                  main@delay 0065            ?_rafraichissement 0030           ??_rafraichissement 0032  
                   __Hrparam 0000              ?_initialisation 0001                     __Lrparam 0000  
           __size_of___lwdiv 0056             __size_of___lwmod 0046                     _balayage 0039  
            ___lwdiv@divisor 0024              ___lwdiv@counter 0029                     __ptext10 0676  
              __size_of_main 00F8              ??_low_interrupt 0013                     _segments 03F0  
           i2segments@figure 0001                     main@argc 0060                     main@argv 0062  
                   intlevel2 0000             ___lwmod@dividend 002A              ___lwmod@divisor 002C  
            ___lwmod@counter 002F  
