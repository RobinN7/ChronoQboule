

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Sep 24 13:33:07 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _TMR0	set	4054
    19  0000                     _INTCON	set	4082
    20  0000                     _PORTA	set	3968
    21  0000                     _PORTC	set	3970
    22  0000                     _PORTCbits	set	3970
    23  0000                     _TRISA	set	3986
    24  0000                     _TRISB	set	3987
    25  0000                     _TRISC	set	3988
    26  0000                     _GIE	set	32663
    27  0000                     _PEIE	set	32662
    28  0000                     _PSA	set	32427
    29  0000                     _T08BIT	set	32430
    30  0000                     _T0CS	set	32429
    31  0000                     _T0PS0	set	32424
    32  0000                     _T0PS1	set	32425
    33  0000                     _T0PS2	set	32426
    34  0000                     _TMR0IE	set	32661
    35  0000                     _TMR0IF	set	32658
    36  0000                     _TMR0ON	set	32431
    37                           
    38 ;;
    39 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    40 ;;
    41 ;; *************** function _main *****************
    42 ;; Defined at:
    43 ;;		line 94 in file "main.c"
    44 ;; Parameters:    Size  Location     Type
    45 ;;  argc            2   30[COMRAM] int 
    46 ;;  argv            3   32[COMRAM] PTR PTR unsigned char 
    47 ;; Auto vars:     Size  Location     Type
    48 ;;  k               2   35[COMRAM] int 
    49 ;;  a               2   37[COMRAM] int 
    50 ;; Return value:  Size  Location     Type
    51 ;;                  2   30[COMRAM] int 
    52 ;; Registers used:
    53 ;;		wreg, status,2, status,0, cstack
    54 ;; Tracked objects:
    55 ;;		On entry : 0/0
    56 ;;		On exit  : 0/0
    57 ;;		Unchanged: 0/0
    58 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    59 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    60 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    61 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    62 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    63 ;;Total ram usage:        9 bytes
    64 ;; Hardware stack levels required when called:    4
    65 ;; This function calls:
    66 ;;		_initialisation
    67 ;; This function is called by:
    68 ;;		Startup code after reset
    69 ;; This function uses a non-reentrant model
    70 ;;
    71                           
    72                           	psect	text0
    73  000406                     __ptext0:
    74                           	opt stack 0
    75  000406                     _main:
    76                           	opt stack 27
    77                           
    78                           ;main.c: 95: initialisation();
    79                           
    80                           ;incstack = 0
    81  000406  EC28  F002         	call	_initialisation	;wreg free
    82                           
    83                           ;main.c: 96: PORTC=0b11111111;
    84  00040A  6882               	setf	3970,c	;volatile
    85  00040C                     l851:
    86                           
    87                           ;main.c: 103: for (int a=0 ; a <11111 ;a++)
    88  00040C  0E00               	movlw	0
    89  00040E  6E27               	movwf	main@a+1,c
    90  000410  0E00               	movlw	0
    91  000412  6E26               	movwf	main@a,c
    92  000414  5027               	movf	main@a+1,w,c
    93  000416  0A80               	xorlw	128
    94  000418  0F55               	addlw	-171
    95  00041A  0E67               	movlw	103
    96  00041C  B4D8               	btfsc	status,2,c
    97  00041E  5C26               	subwf	main@a,w,c
    98  000420  B0D8               	btfsc	status,0,c
    99  000422  D7F4               	goto	l851
   100                           
   101                           ;main.c: 104: {
   102                           ;main.c: 105: for( int k=0 ; k<7000;k++){}
   103  000424  0E00               	movlw	0
   104  000426  6E25               	movwf	main@k+1,c
   105  000428  0E00               	movlw	0
   106  00042A  6E24               	movwf	main@k,c
   107  00042C  5025               	movf	main@k+1,w,c
   108  00042E  0A80               	xorlw	128
   109  000430  0F65               	addlw	-155
   110  000432  0E58               	movlw	88
   111  000434  B4D8               	btfsc	status,2,c
   112  000436  5C24               	subwf	main@k,w,c
   113  000438  B0D8               	btfsc	status,0,c
   114  00043A  D003               	goto	l79
   115  00043C  4A24               	infsnz	main@k,f,c
   116  00043E  2A25               	incf	main@k+1,f,c
   117  000440  D7F5               	goto	L1
   118  000442                     l79:
   119                           
   120                           ;main.c: 106: time =a;
   121  000442  C026  F028         	movff	main@a,_time
   122  000446  C027  F029         	movff	main@a+1,_time+1
   123  00044A  4A26               	infsnz	main@a,f,c
   124  00044C  2A27               	incf	main@a+1,f,c
   125  00044E  D7E2               	goto	L2
   126  000450                     __end_of_main:
   127                           	opt stack 0
   128                           status	equ	0xFD8
   129                           
   130                           	psect	cinit
   131  00047A                     __pcinit:
   132                           	opt stack 0
   133  00047A                     start_initialization:
   134                           	opt stack 0
   135  00047A                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to COMRAM (12 bytes)
   139  00047A  EE00  F028         	lfsr	0,__pbssCOMRAM
   140  00047E  0E0C               	movlw	12
   141  000480                     clear_0:
   142  000480  6AEE               	clrf	postinc0,c
   143  000482  06E8               	decf	wreg,f,c
   144  000484  E1FD               	bnz	clear_0
   145  000486                     end_of_initialization:
   146                           	opt stack 0
   147  000486                     __end_of__initialization:
   148                           	opt stack 0
   149  000486  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  000488  6EF8               	movwf	tblptru,c
   151  00048A  0100               	movlb	0
   152  00048C  EF03  F002         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           postinc0	equ	0xFEE
   155                           wreg	equ	0xFE8
   156                           status	equ	0xFD8
   157                           
   158                           	psect	bssCOMRAM
   159  000028                     __pbssCOMRAM:
   160                           	opt stack 0
   161  000028                     _time:
   162                           	opt stack 0
   163  000028                     	ds	2
   164  00002A                     _balayage:
   165                           	opt stack 0
   166  00002A                     	ds	1
   167  00002B                     _centaine_milliseconde:
   168                           	opt stack 0
   169  00002B                     	ds	1
   170  00002C                     _dizaine_milliseconde:
   171                           	opt stack 0
   172  00002C                     	ds	1
   173  00002D                     _dizaine_seconde:
   174                           	opt stack 0
   175  00002D                     	ds	1
   176  00002E                     _front_montant:
   177                           	opt stack 0
   178  00002E                     	ds	1
   179  00002F                     _milliseconde:
   180                           	opt stack 0
   181  00002F                     	ds	1
   182  000030                     _old_state:
   183                           	opt stack 0
   184  000030                     	ds	1
   185  000031                     _seconde:
   186                           	opt stack 0
   187  000031                     	ds	1
   188  000032                     _stance:
   189                           	opt stack 0
   190  000032                     	ds	1
   191  000033                     _valeur:
   192                           	opt stack 0
   193  000033                     	ds	1
   194                           tblptru	equ	0xFF8
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           status	equ	0xFD8
   198                           
   199                           	psect	cstackCOMRAM
   200  000001                     __pcstackCOMRAM:
   201                           	opt stack 0
   202  000001                     ?___awdiv:
   203                           	opt stack 0
   204  000001                     segments@figure:
   205                           	opt stack 0
   206  000001                     ___awdiv@dividend:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x0
   210  000001                     	ds	1
   211  000002                     rafraichissement@afficheur:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x1
   215  000002                     	ds	1
   216  000003                     ___awdiv@divisor:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x2
   220  000003                     	ds	1
   221  000004                     ??_rafraichissement:
   222                           
   223                           ; 0 bytes @ 0x3
   224  000004                     	ds	1
   225  000005                     ___awdiv@counter:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x4
   229  000005                     	ds	1
   230  000006                     ___awdiv@sign:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x5
   234  000006                     	ds	1
   235  000007                     ___awdiv@quotient:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x6
   239  000007                     	ds	2
   240  000009                     ?___awmod:
   241                           	opt stack 0
   242  000009                     ___awmod@dividend:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x8
   246  000009                     	ds	2
   247  00000B                     ___awmod@divisor:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0xA
   251  00000B                     	ds	2
   252  00000D                     ___awmod@counter:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0xC
   256  00000D                     	ds	1
   257  00000E                     ___awmod@sign:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0xD
   261  00000E                     	ds	1
   262  00000F                     time_converter@time:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0xE
   266  00000F                     	ds	2
   267  000011                     ??_low_interrupt:
   268                           
   269                           ; 0 bytes @ 0x10
   270  000011                     	ds	14
   271  00001F                     
   272                           ; 2 bytes @ 0x1E
   273  00001F                     	ds	2
   274  000021                     
   275                           ; 3 bytes @ 0x20
   276  000021                     	ds	3
   277  000024                     main@k:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x23
   281  000024                     	ds	2
   282  000026                     main@a:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x25
   286  000026                     	ds	2
   287                           tblptru	equ	0xFF8
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           status	equ	0xFD8
   291                           
   292 ;; *************** function _initialisation *****************
   293 ;; Defined at:
   294 ;;		line 179 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;		None               void
   301 ;; Registers used:
   302 ;;		wreg, status,2
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels used:    1
   314 ;; Hardware stack levels required when called:    3
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text1
   323  000450                     __ptext1:
   324                           	opt stack 0
   325  000450                     _initialisation:
   326                           	opt stack 27
   327                           
   328                           ;main.c: 182: INTCON = 0b11100000;
   329                           
   330                           ;incstack = 0
   331  000450  0EE0               	movlw	224
   332  000452  6EF2               	movwf	intcon,c	;volatile
   333                           
   334                           ;main.c: 184: TRISA = 0;
   335  000454  0E00               	movlw	0
   336  000456  6E92               	movwf	3986,c	;volatile
   337                           
   338                           ;main.c: 185: TRISC = 0;
   339  000458  0E00               	movlw	0
   340  00045A  6E94               	movwf	3988,c	;volatile
   341                           
   342                           ;main.c: 186: TRISB = 0;
   343  00045C  0E00               	movlw	0
   344  00045E  6E93               	movwf	3987,c	;volatile
   345                           
   346                           ;main.c: 187: PORTC = 0b00000000;
   347  000460  0E00               	movlw	0
   348  000462  6E82               	movwf	3970,c	;volatile
   349                           
   350                           ;main.c: 207: T0PS0 = 0;
   351  000464  90D5               	bcf	4053,0,c	;volatile
   352                           
   353                           ;main.c: 208: T0PS1 = 1;
   354  000466  82D5               	bsf	4053,1,c	;volatile
   355                           
   356                           ;main.c: 209: T0PS2 = 0;
   357  000468  94D5               	bcf	4053,2,c	;volatile
   358                           
   359                           ;main.c: 210: PSA = 0;
   360  00046A  96D5               	bcf	4053,3,c	;volatile
   361                           
   362                           ;main.c: 211: T0CS = 0;
   363  00046C  9AD5               	bcf	4053,5,c	;volatile
   364                           
   365                           ;main.c: 212: T08BIT = 1;
   366  00046E  8CD5               	bsf	4053,6,c	;volatile
   367                           
   368                           ;main.c: 213: TMR0IE = 1;
   369  000470  8AF2               	bsf	intcon,5,c	;volatile
   370                           
   371                           ;main.c: 214: PEIE = 1;
   372  000472  8CF2               	bsf	intcon,6,c	;volatile
   373                           
   374                           ;main.c: 215: GIE = 1;
   375  000474  8EF2               	bsf	intcon,7,c	;volatile
   376                           
   377                           ;main.c: 217: TMR0ON = 1;
   378  000476  8ED5               	bsf	4053,7,c	;volatile
   379  000478  0012               	return	
   380  00047A                     __end_of_initialisation:
   381                           	opt stack 0
   382                           tblptru	equ	0xFF8
   383                           intcon	equ	0xFF2
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           status	equ	0xFD8
   387                           
   388 ;; *************** function _low_interrupt *****************
   389 ;; Defined at:
   390 ;;		line 54 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;		None               void
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, prodl, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   406 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   407 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   408 ;;Total ram usage:       14 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:    2
   411 ;; This function calls:
   412 ;;		_rafraichissement
   413 ;;		_time_converter
   414 ;; This function is called by:
   415 ;;		Interrupt level 2
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	intcode
   420  000008                     __pintcode:
   421                           	opt stack 0
   422  000008                     _low_interrupt:
   423                           	opt stack 27
   424                           
   425                           ;incstack = 0
   426  000008  CFFA F011          	movff	pclath,??_low_interrupt
   427  00000C  CFFB F012          	movff	pclatu,??_low_interrupt+1
   428  000010  CFE9 F013          	movff	fsr0l,??_low_interrupt+2
   429  000014  CFEA F014          	movff	fsr0h,??_low_interrupt+3
   430  000018  CFE1 F015          	movff	fsr1l,??_low_interrupt+4
   431  00001C  CFE2 F016          	movff	fsr1h,??_low_interrupt+5
   432  000020  CFD9 F017          	movff	fsr2l,??_low_interrupt+6
   433  000024  CFDA F018          	movff	fsr2h,??_low_interrupt+7
   434  000028  CFF3 F019          	movff	prodl,??_low_interrupt+8
   435  00002C  CFF4 F01A          	movff	prodh,??_low_interrupt+9
   436  000030  CFF6 F01B          	movff	tblptrl,??_low_interrupt+10
   437  000034  CFF7 F01C          	movff	tblptrh,??_low_interrupt+11
   438  000038  CFF8 F01D          	movff	tblptru,??_low_interrupt+12
   439  00003C  CFF5 F01E          	movff	tablat,??_low_interrupt+13
   440                           
   441                           ;main.c: 56: if (TMR0IE && TMR0IF) {
   442  000040  BAF2               	btfsc	intcon,5,c	;volatile
   443  000042  A4F2               	btfss	intcon,2,c	;volatile
   444  000044  D018               	goto	i2l72
   445                           
   446                           ;main.c: 58: TMR0 = 14;
   447  000046  0E00               	movlw	0
   448  000048  6ED7               	movwf	4055,c	;volatile
   449  00004A  0E0E               	movlw	14
   450  00004C  6ED6               	movwf	4054,c	;volatile
   451                           
   452                           ;main.c: 63: if (balayage == 4) {
   453  00004E  502A               	movf	_balayage,w,c
   454  000050  0A04               	xorlw	4
   455  000052  A4D8               	btfss	status,2,c
   456  000054  D003               	goto	i2l839
   457                           
   458                           ;main.c: 64: balayage = 0;
   459  000056  0E00               	movlw	0
   460  000058  6E2A               	movwf	_balayage,c
   461                           
   462                           ;main.c: 65: } else {
   463  00005A  D001               	goto	i2l841
   464  00005C                     i2l839:
   465                           
   466                           ;main.c: 66: balayage++;
   467  00005C  2A2A               	incf	_balayage,f,c
   468  00005E                     i2l841:
   469                           
   470                           ;main.c: 67: }
   471                           ;main.c: 68: time_converter(time);
   472  00005E  C028  F00F         	movff	_time,time_converter@time
   473  000062  C029  F010         	movff	_time+1,time_converter@time+1
   474  000066  ECCC  F000         	call	_time_converter	;wreg free
   475                           
   476                           ;main.c: 69: rafraichissement(balayage);
   477  00006A  C02A  F002         	movff	_balayage,rafraichissement@afficheur
   478  00006E  6A03               	clrf	rafraichissement@afficheur+1,c
   479  000070  ECCB  F001         	call	_rafraichissement	;wreg free
   480                           
   481                           ;main.c: 71: TMR0IF = 0;
   482  000074  94F2               	bcf	intcon,2,c	;volatile
   483  000076                     i2l72:
   484  000076  C01E  FFF5         	movff	??_low_interrupt+13,tablat
   485  00007A  C01D  FFF8         	movff	??_low_interrupt+12,tblptru
   486  00007E  C01C  FFF7         	movff	??_low_interrupt+11,tblptrh
   487  000082  C01B  FFF6         	movff	??_low_interrupt+10,tblptrl
   488  000086  C01A  FFF4         	movff	??_low_interrupt+9,prodh
   489  00008A  C019  FFF3         	movff	??_low_interrupt+8,prodl
   490  00008E  C018  FFDA         	movff	??_low_interrupt+7,fsr2h
   491  000092  C017  FFD9         	movff	??_low_interrupt+6,fsr2l
   492  000096  C016  FFE2         	movff	??_low_interrupt+5,fsr1h
   493  00009A  C015  FFE1         	movff	??_low_interrupt+4,fsr1l
   494  00009E  C014  FFEA         	movff	??_low_interrupt+3,fsr0h
   495  0000A2  C013  FFE9         	movff	??_low_interrupt+2,fsr0l
   496  0000A6  C012  FFFB         	movff	??_low_interrupt+1,pclatu
   497  0000AA  C011  FFFA         	movff	??_low_interrupt,pclath
   498  0000AE  0011               	retfie		f
   499  0000B0                     __end_of_low_interrupt:
   500                           	opt stack 0
   501                           pclatu	equ	0xFFB
   502                           pclath	equ	0xFFA
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           prodh	equ	0xFF4
   508                           prodl	equ	0xFF3
   509                           intcon	equ	0xFF2
   510                           postinc0	equ	0xFEE
   511                           fsr0h	equ	0xFEA
   512                           fsr0l	equ	0xFE9
   513                           wreg	equ	0xFE8
   514                           fsr1h	equ	0xFE2
   515                           fsr1l	equ	0xFE1
   516                           fsr2h	equ	0xFDA
   517                           fsr2l	equ	0xFD9
   518                           status	equ	0xFD8
   519                           
   520 ;; *************** function _time_converter *****************
   521 ;; Defined at:
   522 ;;		line 221 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  time            2   14[COMRAM] int 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;		None               void
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, prodl, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   540 ;;Total ram usage:        2 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    1
   543 ;; This function calls:
   544 ;;		___awdiv
   545 ;;		___awmod
   546 ;; This function is called by:
   547 ;;		_low_interrupt
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text3
   552  000198                     __ptext3:
   553                           	opt stack 0
   554  000198                     _time_converter:
   555                           	opt stack 27
   556                           
   557                           ;main.c: 222: milliseconde = time % 10;
   558                           
   559                           ;incstack = 0
   560  000198  C00F  F009         	movff	time_converter@time,___awmod@dividend
   561  00019C  C010  F00A         	movff	time_converter@time+1,___awmod@dividend+1
   562  0001A0  0E00               	movlw	0
   563  0001A2  6E0C               	movwf	___awmod@divisor+1,c
   564  0001A4  0E0A               	movlw	10
   565  0001A6  6E0B               	movwf	___awmod@divisor,c
   566  0001A8  EC83  F001         	call	___awmod	;wreg free
   567  0001AC  5009               	movf	?___awmod,w,c
   568  0001AE  6E2F               	movwf	_milliseconde,c
   569                           
   570                           ;main.c: 223: dizaine_milliseconde = (time / 10) % 10;
   571  0001B0  0E00               	movlw	0
   572  0001B2  6E04               	movwf	___awdiv@divisor+1,c
   573  0001B4  0E0A               	movlw	10
   574  0001B6  6E03               	movwf	___awdiv@divisor,c
   575  0001B8  C00F  F001         	movff	time_converter@time,___awdiv@dividend
   576  0001BC  C010  F002         	movff	time_converter@time+1,___awdiv@dividend+1
   577  0001C0  EC31  F001         	call	___awdiv	;wreg free
   578  0001C4  C001  F009         	movff	?___awdiv,___awmod@dividend
   579  0001C8  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   580  0001CC  0E00               	movlw	0
   581  0001CE  6E0C               	movwf	___awmod@divisor+1,c
   582  0001D0  0E0A               	movlw	10
   583  0001D2  6E0B               	movwf	___awmod@divisor,c
   584  0001D4  EC83  F001         	call	___awmod	;wreg free
   585  0001D8  5009               	movf	?___awmod,w,c
   586  0001DA  6E2C               	movwf	_dizaine_milliseconde,c
   587                           
   588                           ;main.c: 224: centaine_milliseconde = (time / 100) % 10;
   589  0001DC  0E00               	movlw	0
   590  0001DE  6E04               	movwf	___awdiv@divisor+1,c
   591  0001E0  0E64               	movlw	100
   592  0001E2  6E03               	movwf	___awdiv@divisor,c
   593  0001E4  C00F  F001         	movff	time_converter@time,___awdiv@dividend
   594  0001E8  C010  F002         	movff	time_converter@time+1,___awdiv@dividend+1
   595  0001EC  EC31  F001         	call	___awdiv	;wreg free
   596  0001F0  C001  F009         	movff	?___awdiv,___awmod@dividend
   597  0001F4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   598  0001F8  0E00               	movlw	0
   599  0001FA  6E0C               	movwf	___awmod@divisor+1,c
   600  0001FC  0E0A               	movlw	10
   601  0001FE  6E0B               	movwf	___awmod@divisor,c
   602  000200  EC83  F001         	call	___awmod	;wreg free
   603  000204  5009               	movf	?___awmod,w,c
   604  000206  6E2B               	movwf	_centaine_milliseconde,c
   605                           
   606                           ;main.c: 225: seconde = (time / 1000) % 10;
   607  000208  0E03               	movlw	3
   608  00020A  6E04               	movwf	___awdiv@divisor+1,c
   609  00020C  0EE8               	movlw	232
   610  00020E  6E03               	movwf	___awdiv@divisor,c
   611  000210  C00F  F001         	movff	time_converter@time,___awdiv@dividend
   612  000214  C010  F002         	movff	time_converter@time+1,___awdiv@dividend+1
   613  000218  EC31  F001         	call	___awdiv	;wreg free
   614  00021C  C001  F009         	movff	?___awdiv,___awmod@dividend
   615  000220  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   616  000224  0E00               	movlw	0
   617  000226  6E0C               	movwf	___awmod@divisor+1,c
   618  000228  0E0A               	movlw	10
   619  00022A  6E0B               	movwf	___awmod@divisor,c
   620  00022C  EC83  F001         	call	___awmod	;wreg free
   621  000230  5009               	movf	?___awmod,w,c
   622  000232  6E31               	movwf	_seconde,c
   623                           
   624                           ;main.c: 226: dizaine_seconde = (time / 10000) % 10;
   625  000234  0E27               	movlw	39
   626  000236  6E04               	movwf	___awdiv@divisor+1,c
   627  000238  0E10               	movlw	16
   628  00023A  6E03               	movwf	___awdiv@divisor,c
   629  00023C  C00F  F001         	movff	time_converter@time,___awdiv@dividend
   630  000240  C010  F002         	movff	time_converter@time+1,___awdiv@dividend+1
   631  000244  EC31  F001         	call	___awdiv	;wreg free
   632  000248  C001  F009         	movff	?___awdiv,___awmod@dividend
   633  00024C  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   634  000250  0E00               	movlw	0
   635  000252  6E0C               	movwf	___awmod@divisor+1,c
   636  000254  0E0A               	movlw	10
   637  000256  6E0B               	movwf	___awmod@divisor,c
   638  000258  EC83  F001         	call	___awmod	;wreg free
   639  00025C  5009               	movf	?___awmod,w,c
   640  00025E  6E2D               	movwf	_dizaine_seconde,c
   641  000260  0012               	return	
   642  000262                     __end_of_time_converter:
   643                           	opt stack 0
   644                           pclatu	equ	0xFFB
   645                           pclath	equ	0xFFA
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           prodh	equ	0xFF4
   651                           prodl	equ	0xFF3
   652                           intcon	equ	0xFF2
   653                           postinc0	equ	0xFEE
   654                           fsr0h	equ	0xFEA
   655                           fsr0l	equ	0xFE9
   656                           wreg	equ	0xFE8
   657                           fsr1h	equ	0xFE2
   658                           fsr1l	equ	0xFE1
   659                           fsr2h	equ	0xFDA
   660                           fsr2l	equ	0xFD9
   661                           status	equ	0xFD8
   662                           
   663 ;; *************** function ___awmod *****************
   664 ;; Defined at:
   665 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/awmod.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  dividend        2    8[COMRAM] int 
   668 ;;  divisor         2   10[COMRAM] int 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  sign            1   13[COMRAM] unsigned char 
   671 ;;  counter         1   12[COMRAM] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  2    8[COMRAM] int 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, prodl
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   685 ;;Total ram usage:        6 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_time_converter
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text4
   695  000306                     __ptext4:
   696                           	opt stack 0
   697  000306                     ___awmod:
   698                           	opt stack 27
   699                           
   700                           ;incstack = 0
   701  000306  0E00               	movlw	0
   702  000308  6E0E               	movwf	___awmod@sign,c
   703  00030A  500A               	movf	___awmod@dividend+1,w,c
   704  00030C  0A80               	xorlw	128
   705  00030E  6EF3               	movwf	prodl,c
   706  000310  0E80               	movlw	128
   707  000312  5CF3               	subwf	prodl,w,c
   708  000314  0E00               	movlw	0
   709  000316  B4D8               	btfsc	status,2,c
   710  000318  5C09               	subwf	___awmod@dividend,w,c
   711  00031A  B0D8               	btfsc	status,0,c
   712  00031C  D006               	goto	i2l749
   713  00031E  6C09               	negf	___awmod@dividend,c
   714  000320  1E0A               	comf	___awmod@dividend+1,f,c
   715  000322  B0D8               	btfsc	status,0,c
   716  000324  2A0A               	incf	___awmod@dividend+1,f,c
   717  000326  0E01               	movlw	1
   718  000328  6E0E               	movwf	___awmod@sign,c
   719  00032A                     i2l749:
   720  00032A  500C               	movf	___awmod@divisor+1,w,c
   721  00032C  0A80               	xorlw	128
   722  00032E  6EF3               	movwf	prodl,c
   723  000330  0E80               	movlw	128
   724  000332  5CF3               	subwf	prodl,w,c
   725  000334  0E00               	movlw	0
   726  000336  B4D8               	btfsc	status,2,c
   727  000338  5C0B               	subwf	___awmod@divisor,w,c
   728  00033A  B0D8               	btfsc	status,0,c
   729  00033C  D004               	goto	i2l753
   730  00033E  6C0B               	negf	___awmod@divisor,c
   731  000340  1E0C               	comf	___awmod@divisor+1,f,c
   732  000342  B0D8               	btfsc	status,0,c
   733  000344  2A0C               	incf	___awmod@divisor+1,f,c
   734  000346                     i2l753:
   735  000346  500C               	movf	___awmod@divisor+1,w,c
   736  000348  100B               	iorwf	___awmod@divisor,w,c
   737  00034A  B4D8               	btfsc	status,2,c
   738  00034C  D018               	goto	i2l769
   739  00034E  0E01               	movlw	1
   740  000350  6E0D               	movwf	___awmod@counter,c
   741  000352  D004               	goto	i2l759
   742  000354                     i2l757:
   743  000354  90D8               	bcf	status,0,c
   744  000356  360B               	rlcf	___awmod@divisor,f,c
   745  000358  360C               	rlcf	___awmod@divisor+1,f,c
   746  00035A  2A0D               	incf	___awmod@counter,f,c
   747  00035C                     i2l759:
   748  00035C  AE0C               	btfss	___awmod@divisor+1,7,c
   749  00035E  D7FA               	goto	i2l757
   750  000360                     i2l761:
   751  000360  500B               	movf	___awmod@divisor,w,c
   752  000362  5C09               	subwf	___awmod@dividend,w,c
   753  000364  500C               	movf	___awmod@divisor+1,w,c
   754  000366  580A               	subwfb	___awmod@dividend+1,w,c
   755  000368  A0D8               	btfss	status,0,c
   756  00036A  D004               	goto	i2l765
   757  00036C  500B               	movf	___awmod@divisor,w,c
   758  00036E  5E09               	subwf	___awmod@dividend,f,c
   759  000370  500C               	movf	___awmod@divisor+1,w,c
   760  000372  5A0A               	subwfb	___awmod@dividend+1,f,c
   761  000374                     i2l765:
   762  000374  90D8               	bcf	status,0,c
   763  000376  320C               	rrcf	___awmod@divisor+1,f,c
   764  000378  320B               	rrcf	___awmod@divisor,f,c
   765  00037A  2E0D               	decfsz	___awmod@counter,f,c
   766  00037C  D7F1               	goto	i2l761
   767  00037E                     i2l769:
   768  00037E  500E               	movf	___awmod@sign,w,c
   769  000380  B4D8               	btfsc	status,2,c
   770  000382  D004               	goto	i2l773
   771  000384  6C09               	negf	___awmod@dividend,c
   772  000386  1E0A               	comf	___awmod@dividend+1,f,c
   773  000388  B0D8               	btfsc	status,0,c
   774  00038A  2A0A               	incf	___awmod@dividend+1,f,c
   775  00038C                     i2l773:
   776  00038C  C009  F009         	movff	___awmod@dividend,?___awmod
   777  000390  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   778  000394  0012               	return	
   779  000396                     __end_of___awmod:
   780                           	opt stack 0
   781                           pclatu	equ	0xFFB
   782                           pclath	equ	0xFFA
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           prodh	equ	0xFF4
   788                           prodl	equ	0xFF3
   789                           intcon	equ	0xFF2
   790                           postinc0	equ	0xFEE
   791                           fsr0h	equ	0xFEA
   792                           fsr0l	equ	0xFE9
   793                           wreg	equ	0xFE8
   794                           fsr1h	equ	0xFE2
   795                           fsr1l	equ	0xFE1
   796                           fsr2h	equ	0xFDA
   797                           fsr2l	equ	0xFD9
   798                           status	equ	0xFD8
   799                           
   800 ;; *************** function ___awdiv *****************
   801 ;; Defined at:
   802 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/awdiv.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  dividend        2    0[COMRAM] int 
   805 ;;  divisor         2    2[COMRAM] int 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  quotient        2    6[COMRAM] int 
   808 ;;  sign            1    5[COMRAM] unsigned char 
   809 ;;  counter         1    4[COMRAM] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  2    0[COMRAM] int 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0, prodl
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   823 ;;Total ram usage:        8 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_time_converter
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text5
   833  000262                     __ptext5:
   834                           	opt stack 0
   835  000262                     ___awdiv:
   836                           	opt stack 27
   837                           
   838                           ;incstack = 0
   839  000262  0E00               	movlw	0
   840  000264  6E06               	movwf	___awdiv@sign,c
   841  000266  5004               	movf	___awdiv@divisor+1,w,c
   842  000268  0A80               	xorlw	128
   843  00026A  6EF3               	movwf	prodl,c
   844  00026C  0E80               	movlw	128
   845  00026E  5CF3               	subwf	prodl,w,c
   846  000270  0E00               	movlw	0
   847  000272  B4D8               	btfsc	status,2,c
   848  000274  5C03               	subwf	___awdiv@divisor,w,c
   849  000276  B0D8               	btfsc	status,0,c
   850  000278  D006               	goto	i2l705
   851  00027A  6C03               	negf	___awdiv@divisor,c
   852  00027C  1E04               	comf	___awdiv@divisor+1,f,c
   853  00027E  B0D8               	btfsc	status,0,c
   854  000280  2A04               	incf	___awdiv@divisor+1,f,c
   855  000282  0E01               	movlw	1
   856  000284  6E06               	movwf	___awdiv@sign,c
   857  000286                     i2l705:
   858  000286  5002               	movf	___awdiv@dividend+1,w,c
   859  000288  0A80               	xorlw	128
   860  00028A  6EF3               	movwf	prodl,c
   861  00028C  0E80               	movlw	128
   862  00028E  5CF3               	subwf	prodl,w,c
   863  000290  0E00               	movlw	0
   864  000292  B4D8               	btfsc	status,2,c
   865  000294  5C01               	subwf	___awdiv@dividend,w,c
   866  000296  B0D8               	btfsc	status,0,c
   867  000298  D006               	goto	i2l711
   868  00029A  6C01               	negf	___awdiv@dividend,c
   869  00029C  1E02               	comf	___awdiv@dividend+1,f,c
   870  00029E  B0D8               	btfsc	status,0,c
   871  0002A0  2A02               	incf	___awdiv@dividend+1,f,c
   872  0002A2  0E01               	movlw	1
   873  0002A4  1A06               	xorwf	___awdiv@sign,f,c
   874  0002A6                     i2l711:
   875  0002A6  0E00               	movlw	0
   876  0002A8  6E08               	movwf	___awdiv@quotient+1,c
   877  0002AA  0E00               	movlw	0
   878  0002AC  6E07               	movwf	___awdiv@quotient,c
   879  0002AE  5004               	movf	___awdiv@divisor+1,w,c
   880  0002B0  1003               	iorwf	___awdiv@divisor,w,c
   881  0002B2  B4D8               	btfsc	status,2,c
   882  0002B4  D01C               	goto	i2l733
   883  0002B6  0E01               	movlw	1
   884  0002B8  6E05               	movwf	___awdiv@counter,c
   885  0002BA  D004               	goto	i2l719
   886  0002BC                     i2l717:
   887  0002BC  90D8               	bcf	status,0,c
   888  0002BE  3603               	rlcf	___awdiv@divisor,f,c
   889  0002C0  3604               	rlcf	___awdiv@divisor+1,f,c
   890  0002C2  2A05               	incf	___awdiv@counter,f,c
   891  0002C4                     i2l719:
   892  0002C4  AE04               	btfss	___awdiv@divisor+1,7,c
   893  0002C6  D7FA               	goto	i2l717
   894  0002C8                     i2l721:
   895  0002C8  90D8               	bcf	status,0,c
   896  0002CA  3607               	rlcf	___awdiv@quotient,f,c
   897  0002CC  3608               	rlcf	___awdiv@quotient+1,f,c
   898  0002CE  5003               	movf	___awdiv@divisor,w,c
   899  0002D0  5C01               	subwf	___awdiv@dividend,w,c
   900  0002D2  5004               	movf	___awdiv@divisor+1,w,c
   901  0002D4  5802               	subwfb	___awdiv@dividend+1,w,c
   902  0002D6  A0D8               	btfss	status,0,c
   903  0002D8  D005               	goto	i2l729
   904  0002DA  5003               	movf	___awdiv@divisor,w,c
   905  0002DC  5E01               	subwf	___awdiv@dividend,f,c
   906  0002DE  5004               	movf	___awdiv@divisor+1,w,c
   907  0002E0  5A02               	subwfb	___awdiv@dividend+1,f,c
   908  0002E2  8007               	bsf	___awdiv@quotient,0,c
   909  0002E4                     i2l729:
   910  0002E4  90D8               	bcf	status,0,c
   911  0002E6  3204               	rrcf	___awdiv@divisor+1,f,c
   912  0002E8  3203               	rrcf	___awdiv@divisor,f,c
   913  0002EA  2E05               	decfsz	___awdiv@counter,f,c
   914  0002EC  D7ED               	goto	i2l721
   915  0002EE                     i2l733:
   916  0002EE  5006               	movf	___awdiv@sign,w,c
   917  0002F0  B4D8               	btfsc	status,2,c
   918  0002F2  D004               	goto	i2l737
   919  0002F4  6C07               	negf	___awdiv@quotient,c
   920  0002F6  1E08               	comf	___awdiv@quotient+1,f,c
   921  0002F8  B0D8               	btfsc	status,0,c
   922  0002FA  2A08               	incf	___awdiv@quotient+1,f,c
   923  0002FC                     i2l737:
   924  0002FC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   925  000300  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   926  000304  0012               	return	
   927  000306                     __end_of___awdiv:
   928                           	opt stack 0
   929                           pclatu	equ	0xFFB
   930                           pclath	equ	0xFFA
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           prodh	equ	0xFF4
   936                           prodl	equ	0xFF3
   937                           intcon	equ	0xFF2
   938                           postinc0	equ	0xFEE
   939                           fsr0h	equ	0xFEA
   940                           fsr0l	equ	0xFE9
   941                           wreg	equ	0xFE8
   942                           fsr1h	equ	0xFE2
   943                           fsr1l	equ	0xFE1
   944                           fsr2h	equ	0xFDA
   945                           fsr2l	equ	0xFD9
   946                           status	equ	0xFD8
   947                           
   948 ;; *************** function _rafraichissement *****************
   949 ;; Defined at:
   950 ;;		line 148 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  afficheur       2    1[COMRAM] int 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;		None               void
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;Total ram usage:        4 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		_segments
   973 ;; This function is called by:
   974 ;;		_low_interrupt
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text6
   979  000396                     __ptext6:
   980                           	opt stack 0
   981  000396                     _rafraichissement:
   982                           	opt stack 27
   983                           
   984                           ;main.c: 151: switch (afficheur) {
   985                           
   986                           ;incstack = 0
   987  000396  D01E               	goto	i2l801
   988  000398                     i2l781:
   989                           
   990                           ;main.c: 154: segments(milliseconde);
   991  000398  502F               	movf	_milliseconde,w,c
   992  00039A  EC5A  F000         	call	_segments
   993                           
   994                           ;main.c: 155: PORTA = 0b00000001;
   995  00039E  0E01               	movlw	1
   996  0003A0  6E80               	movwf	3968,c	;volatile
   997                           
   998                           ;main.c: 156: break;
   999  0003A2  0012               	return	
  1000  0003A4                     i2l785:
  1001                           
  1002                           ;main.c: 158: segments(dizaine_milliseconde);
  1003  0003A4  502C               	movf	_dizaine_milliseconde,w,c
  1004  0003A6  EC5A  F000         	call	_segments
  1005                           
  1006                           ;main.c: 159: PORTA = 0b00000010;
  1007  0003AA  0E02               	movlw	2
  1008  0003AC  6E80               	movwf	3968,c	;volatile
  1009                           
  1010                           ;main.c: 160: break;
  1011  0003AE  0012               	return	
  1012  0003B0                     i2l789:
  1013                           
  1014                           ;main.c: 162: segments(centaine_milliseconde);
  1015  0003B0  502B               	movf	_centaine_milliseconde,w,c
  1016  0003B2  EC5A  F000         	call	_segments
  1017                           
  1018                           ;main.c: 163: PORTA = 0b00000100;
  1019  0003B6  0E04               	movlw	4
  1020  0003B8  6E80               	movwf	3968,c	;volatile
  1021                           
  1022                           ;main.c: 164: break;
  1023  0003BA  0012               	return	
  1024  0003BC                     i2l793:
  1025                           
  1026                           ;main.c: 166: segments(seconde);
  1027  0003BC  5031               	movf	_seconde,w,c
  1028  0003BE  EC5A  F000         	call	_segments
  1029                           
  1030                           ;main.c: 167: PORTA = 0b00001000;
  1031  0003C2  0E08               	movlw	8
  1032  0003C4  6E80               	movwf	3968,c	;volatile
  1033                           
  1034                           ;main.c: 168: break;
  1035  0003C6  0012               	return	
  1036  0003C8                     i2l797:
  1037                           
  1038                           ;main.c: 170: segments(dizaine_seconde);
  1039  0003C8  502D               	movf	_dizaine_seconde,w,c
  1040  0003CA  EC5A  F000         	call	_segments
  1041                           
  1042                           ;main.c: 171: PORTA = 0b00100000;
  1043  0003CE  0E20               	movlw	32
  1044  0003D0  6E80               	movwf	3968,c	;volatile
  1045                           
  1046                           ;main.c: 172: break;
  1047  0003D2  0012               	return	
  1048  0003D4                     i2l801:
  1049  0003D4  C002  F004         	movff	rafraichissement@afficheur,??_rafraichissement
  1050  0003D8  C003  F005         	movff	rafraichissement@afficheur+1,??_rafraichissement+1
  1051                           
  1052                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1053                           ; Switch size 1, requested type "space"
  1054                           ; Number of cases is 1, Range of values is 0 to 0
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte            4     3 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059  0003DC  5005               	movf	??_rafraichissement+1,w,c
  1060  0003DE  0A00               	xorlw	0	; case 0
  1061  0003E0  A4D8               	btfss	status,2,c
  1062  0003E2  0012               	return	
  1063                           
  1064                           ; Switch size 1, requested type "space"
  1065                           ; Number of cases is 5, Range of values is 0 to 4
  1066                           ; switch strategies available:
  1067                           ; Name         Instructions Cycles
  1068                           ; simple_byte           16     9 (average)
  1069                           ;	Chosen strategy is simple_byte
  1070  0003E4  5004               	movf	??_rafraichissement,w,c
  1071  0003E6  0A00               	xorlw	0	; case 0
  1072  0003E8  B4D8               	btfsc	status,2,c
  1073  0003EA  D7D6               	goto	i2l781
  1074  0003EC  0A01               	xorlw	1	; case 1
  1075  0003EE  B4D8               	btfsc	status,2,c
  1076  0003F0  D7D9               	goto	i2l785
  1077  0003F2  0A03               	xorlw	3	; case 2
  1078  0003F4  B4D8               	btfsc	status,2,c
  1079  0003F6  D7DC               	goto	i2l789
  1080  0003F8  0A01               	xorlw	1	; case 3
  1081  0003FA  B4D8               	btfsc	status,2,c
  1082  0003FC  D7DF               	goto	i2l793
  1083  0003FE  0A07               	xorlw	7	; case 4
  1084  000400  A4D8               	btfss	status,2,c
  1085  000402  0012               	return	
  1086  000404  D7E1               	goto	i2l797
  1087  000406                     __end_of_rafraichissement:
  1088                           	opt stack 0
  1089                           pclatu	equ	0xFFB
  1090                           pclath	equ	0xFFA
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           prodh	equ	0xFF4
  1096                           prodl	equ	0xFF3
  1097                           intcon	equ	0xFF2
  1098                           postinc0	equ	0xFEE
  1099                           fsr0h	equ	0xFEA
  1100                           fsr0l	equ	0xFE9
  1101                           wreg	equ	0xFE8
  1102                           fsr1h	equ	0xFE2
  1103                           fsr1l	equ	0xFE1
  1104                           fsr2h	equ	0xFDA
  1105                           fsr2l	equ	0xFD9
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _segments *****************
  1109 ;; Defined at:
  1110 ;;		line 15 in file "converter.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  figure          1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  figure          1    0[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_rafraichissement
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text7
  1138  0000B4                     __ptext7:
  1139                           	opt stack 0
  1140  0000B4                     _segments:
  1141                           	opt stack 27
  1142                           
  1143                           ;incstack = 0
  1144                           ;segments@figure stored from wreg
  1145  0000B4  6E01               	movwf	segments@figure,c
  1146                           
  1147                           ;converter.c: 31: switch (figure) {
  1148  0000B6  D050               	goto	i2l695
  1149  0000B8                     i2l105:
  1150                           
  1151                           ;converter.c: 33: PORTCbits.RC1 = 0;
  1152  0000B8  9282               	bcf	3970,1,c	;volatile
  1153                           
  1154                           ;converter.c: 34: PORTCbits.RC2 = 0;
  1155  0000BA  9482               	bcf	3970,2,c	;volatile
  1156                           
  1157                           ;converter.c: 35: PORTCbits.RC3 = 0;
  1158  0000BC  9682               	bcf	3970,3,c	;volatile
  1159                           
  1160                           ;converter.c: 36: PORTCbits.RC4 = 0;
  1161  0000BE  9882               	bcf	3970,4,c	;volatile
  1162                           
  1163                           ;converter.c: 37: PORTCbits.RC5 = 0;
  1164  0000C0  9A82               	bcf	3970,5,c	;volatile
  1165                           
  1166                           ;converter.c: 38: PORTCbits.RC6 = 0;
  1167  0000C2  9C82               	bcf	3970,6,c	;volatile
  1168                           
  1169                           ;converter.c: 39: PORTCbits.RC7 = 1;
  1170  0000C4  8E82               	bsf	3970,7,c	;volatile
  1171                           
  1172                           ;converter.c: 40: break;
  1173  0000C6  0012               	return	
  1174  0000C8                     i2l107:
  1175                           
  1176                           ;converter.c: 43: PORTCbits.RC1 = 1;
  1177  0000C8  8282               	bsf	3970,1,c	;volatile
  1178                           
  1179                           ;converter.c: 44: PORTCbits.RC2 = 0;
  1180  0000CA  9482               	bcf	3970,2,c	;volatile
  1181                           
  1182                           ;converter.c: 45: PORTCbits.RC3 = 0;
  1183  0000CC  9682               	bcf	3970,3,c	;volatile
  1184                           
  1185                           ;converter.c: 46: PORTCbits.RC4 = 1;
  1186  0000CE  8882               	bsf	3970,4,c	;volatile
  1187                           
  1188                           ;converter.c: 47: PORTCbits.RC5 = 1;
  1189  0000D0  8A82               	bsf	3970,5,c	;volatile
  1190                           
  1191                           ;converter.c: 48: PORTCbits.RC6 = 1;
  1192  0000D2  8C82               	bsf	3970,6,c	;volatile
  1193                           
  1194                           ;converter.c: 49: PORTCbits.RC7 = 1;
  1195  0000D4  8E82               	bsf	3970,7,c	;volatile
  1196                           
  1197                           ;converter.c: 50: break;
  1198  0000D6  0012               	return	
  1199  0000D8                     i2l108:
  1200                           
  1201                           ;converter.c: 52: PORTCbits.RC1 = 0;
  1202  0000D8  9282               	bcf	3970,1,c	;volatile
  1203                           
  1204                           ;converter.c: 53: PORTCbits.RC2 = 0;
  1205  0000DA  9482               	bcf	3970,2,c	;volatile
  1206                           
  1207                           ;converter.c: 54: PORTCbits.RC3 = 1;
  1208  0000DC  8682               	bsf	3970,3,c	;volatile
  1209                           
  1210                           ;converter.c: 55: PORTCbits.RC4 = 0;
  1211  0000DE  9882               	bcf	3970,4,c	;volatile
  1212                           
  1213                           ;converter.c: 56: PORTCbits.RC5 = 0;
  1214  0000E0  9A82               	bcf	3970,5,c	;volatile
  1215                           
  1216                           ;converter.c: 57: PORTCbits.RC6 = 1;
  1217  0000E2  8C82               	bsf	3970,6,c	;volatile
  1218                           
  1219                           ;converter.c: 58: PORTCbits.RC7 = 0;
  1220  0000E4  9E82               	bcf	3970,7,c	;volatile
  1221                           
  1222                           ;converter.c: 59: break;
  1223  0000E6  0012               	return	
  1224  0000E8                     i2l109:
  1225                           
  1226                           ;converter.c: 61: PORTCbits.RC1 = 0;
  1227  0000E8  9282               	bcf	3970,1,c	;volatile
  1228                           
  1229                           ;converter.c: 62: PORTCbits.RC2 = 0;
  1230  0000EA  9482               	bcf	3970,2,c	;volatile
  1231                           
  1232                           ;converter.c: 63: PORTCbits.RC3 = 0;
  1233  0000EC  9682               	bcf	3970,3,c	;volatile
  1234                           
  1235                           ;converter.c: 64: PORTCbits.RC4 = 0;
  1236  0000EE  9882               	bcf	3970,4,c	;volatile
  1237                           
  1238                           ;converter.c: 65: PORTCbits.RC5 = 1;
  1239  0000F0  8A82               	bsf	3970,5,c	;volatile
  1240                           
  1241                           ;converter.c: 66: PORTCbits.RC6 = 1;
  1242  0000F2  8C82               	bsf	3970,6,c	;volatile
  1243                           
  1244                           ;converter.c: 67: PORTCbits.RC7 = 0;
  1245  0000F4  9E82               	bcf	3970,7,c	;volatile
  1246                           
  1247                           ;converter.c: 68: break;
  1248  0000F6  0012               	return	
  1249  0000F8                     i2l110:
  1250                           
  1251                           ;converter.c: 71: PORTCbits.RC1 = 1;
  1252  0000F8  8282               	bsf	3970,1,c	;volatile
  1253                           
  1254                           ;converter.c: 72: PORTCbits.RC2 = 0;
  1255  0000FA  9482               	bcf	3970,2,c	;volatile
  1256                           
  1257                           ;converter.c: 73: PORTCbits.RC3 = 0;
  1258  0000FC  9682               	bcf	3970,3,c	;volatile
  1259                           
  1260                           ;converter.c: 74: PORTCbits.RC4 = 1;
  1261  0000FE  8882               	bsf	3970,4,c	;volatile
  1262                           
  1263                           ;converter.c: 75: PORTCbits.RC5 = 1;
  1264  000100  8A82               	bsf	3970,5,c	;volatile
  1265                           
  1266                           ;converter.c: 76: PORTCbits.RC6 = 0;
  1267  000102  9C82               	bcf	3970,6,c	;volatile
  1268                           
  1269                           ;converter.c: 77: PORTCbits.RC7 = 0;
  1270  000104  9E82               	bcf	3970,7,c	;volatile
  1271                           
  1272                           ;converter.c: 78: break;
  1273  000106  0012               	return	
  1274  000108                     i2l111:
  1275                           
  1276                           ;converter.c: 80: PORTCbits.RC1 = 0;
  1277  000108  9282               	bcf	3970,1,c	;volatile
  1278                           
  1279                           ;converter.c: 81: PORTCbits.RC2 = 1;
  1280  00010A  8482               	bsf	3970,2,c	;volatile
  1281                           
  1282                           ;converter.c: 82: PORTCbits.RC3 = 0;
  1283  00010C  9682               	bcf	3970,3,c	;volatile
  1284                           
  1285                           ;converter.c: 83: PORTCbits.RC4 = 0;
  1286  00010E  9882               	bcf	3970,4,c	;volatile
  1287                           
  1288                           ;converter.c: 84: PORTCbits.RC5 = 1;
  1289  000110  8A82               	bsf	3970,5,c	;volatile
  1290                           
  1291                           ;converter.c: 85: PORTCbits.RC6 = 0;
  1292  000112  9C82               	bcf	3970,6,c	;volatile
  1293                           
  1294                           ;converter.c: 86: PORTCbits.RC7 = 0;
  1295  000114  9E82               	bcf	3970,7,c	;volatile
  1296                           
  1297                           ;converter.c: 88: break;
  1298  000116  0012               	return	
  1299  000118                     i2l112:
  1300                           
  1301                           ;converter.c: 90: PORTCbits.RC1 = 0;
  1302  000118  9282               	bcf	3970,1,c	;volatile
  1303                           
  1304                           ;converter.c: 91: PORTCbits.RC2 = 1;
  1305  00011A  8482               	bsf	3970,2,c	;volatile
  1306                           
  1307                           ;converter.c: 92: PORTCbits.RC3 = 0;
  1308  00011C  9682               	bcf	3970,3,c	;volatile
  1309                           
  1310                           ;converter.c: 93: PORTCbits.RC4 = 0;
  1311  00011E  9882               	bcf	3970,4,c	;volatile
  1312                           
  1313                           ;converter.c: 94: PORTCbits.RC5 = 0;
  1314  000120  9A82               	bcf	3970,5,c	;volatile
  1315                           
  1316                           ;converter.c: 95: PORTCbits.RC6 = 0;
  1317  000122  9C82               	bcf	3970,6,c	;volatile
  1318                           
  1319                           ;converter.c: 96: PORTCbits.RC7 = 0;
  1320  000124  9E82               	bcf	3970,7,c	;volatile
  1321                           
  1322                           ;converter.c: 97: break;
  1323  000126  0012               	return	
  1324  000128                     i2l113:
  1325                           
  1326                           ;converter.c: 100: PORTCbits.RC1 = 0;
  1327  000128  9282               	bcf	3970,1,c	;volatile
  1328                           
  1329                           ;converter.c: 101: PORTCbits.RC2 = 0;
  1330  00012A  9482               	bcf	3970,2,c	;volatile
  1331                           
  1332                           ;converter.c: 102: PORTCbits.RC3 = 0;
  1333  00012C  9682               	bcf	3970,3,c	;volatile
  1334                           
  1335                           ;converter.c: 103: PORTCbits.RC4 = 1;
  1336  00012E  8882               	bsf	3970,4,c	;volatile
  1337                           
  1338                           ;converter.c: 104: PORTCbits.RC5 = 1;
  1339  000130  8A82               	bsf	3970,5,c	;volatile
  1340                           
  1341                           ;converter.c: 105: PORTCbits.RC6 = 1;
  1342  000132  8C82               	bsf	3970,6,c	;volatile
  1343                           
  1344                           ;converter.c: 106: PORTCbits.RC7 = 1;
  1345  000134  8E82               	bsf	3970,7,c	;volatile
  1346                           
  1347                           ;converter.c: 107: break;
  1348  000136  0012               	return	
  1349  000138                     i2l114:
  1350                           
  1351                           ;converter.c: 109: PORTCbits.RC1 = 0;
  1352  000138  9282               	bcf	3970,1,c	;volatile
  1353                           
  1354                           ;converter.c: 110: PORTCbits.RC2 = 0;
  1355  00013A  9482               	bcf	3970,2,c	;volatile
  1356                           
  1357                           ;converter.c: 111: PORTCbits.RC3 = 0;
  1358  00013C  9682               	bcf	3970,3,c	;volatile
  1359                           
  1360                           ;converter.c: 112: PORTCbits.RC4 = 0;
  1361  00013E  9882               	bcf	3970,4,c	;volatile
  1362                           
  1363                           ;converter.c: 113: PORTCbits.RC5 = 0;
  1364  000140  9A82               	bcf	3970,5,c	;volatile
  1365                           
  1366                           ;converter.c: 114: PORTCbits.RC6 = 0;
  1367  000142  9C82               	bcf	3970,6,c	;volatile
  1368                           
  1369                           ;converter.c: 115: PORTCbits.RC7 = 0;
  1370  000144  9E82               	bcf	3970,7,c	;volatile
  1371                           
  1372                           ;converter.c: 116: break;
  1373  000146  0012               	return	
  1374  000148                     i2l115:
  1375                           
  1376                           ;converter.c: 118: PORTCbits.RC1 = 0;
  1377  000148  9282               	bcf	3970,1,c	;volatile
  1378                           
  1379                           ;converter.c: 119: PORTCbits.RC2 = 0;
  1380  00014A  9482               	bcf	3970,2,c	;volatile
  1381                           
  1382                           ;converter.c: 120: PORTCbits.RC3 = 0;
  1383  00014C  9682               	bcf	3970,3,c	;volatile
  1384                           
  1385                           ;converter.c: 121: PORTCbits.RC4 = 0;
  1386  00014E  9882               	bcf	3970,4,c	;volatile
  1387                           
  1388                           ;converter.c: 122: PORTCbits.RC5 = 1;
  1389  000150  8A82               	bsf	3970,5,c	;volatile
  1390                           
  1391                           ;converter.c: 123: PORTCbits.RC6 = 0;
  1392  000152  9C82               	bcf	3970,6,c	;volatile
  1393                           
  1394                           ;converter.c: 124: PORTCbits.RC7 = 0;
  1395  000154  9E82               	bcf	3970,7,c	;volatile
  1396                           
  1397                           ;converter.c: 125: break;
  1398  000156  0012               	return	
  1399  000158                     i2l695:
  1400  000158  5001               	movf	segments@figure,w,c
  1401                           
  1402                           ; Switch size 1, requested type "space"
  1403                           ; Number of cases is 10, Range of values is 0 to 9
  1404                           ; switch strategies available:
  1405                           ; Name         Instructions Cycles
  1406                           ; simple_byte           31    16 (average)
  1407                           ;	Chosen strategy is simple_byte
  1408  00015A  0A00               	xorlw	0	; case 0
  1409  00015C  B4D8               	btfsc	status,2,c
  1410  00015E  D7AC               	goto	i2l105
  1411  000160  0A01               	xorlw	1	; case 1
  1412  000162  B4D8               	btfsc	status,2,c
  1413  000164  D7B1               	goto	i2l107
  1414  000166  0A03               	xorlw	3	; case 2
  1415  000168  B4D8               	btfsc	status,2,c
  1416  00016A  D7B6               	goto	i2l108
  1417  00016C  0A01               	xorlw	1	; case 3
  1418  00016E  B4D8               	btfsc	status,2,c
  1419  000170  D7BB               	goto	i2l109
  1420  000172  0A07               	xorlw	7	; case 4
  1421  000174  B4D8               	btfsc	status,2,c
  1422  000176  D7C0               	goto	i2l110
  1423  000178  0A01               	xorlw	1	; case 5
  1424  00017A  B4D8               	btfsc	status,2,c
  1425  00017C  D7C5               	goto	i2l111
  1426  00017E  0A03               	xorlw	3	; case 6
  1427  000180  B4D8               	btfsc	status,2,c
  1428  000182  D7CA               	goto	i2l112
  1429  000184  0A01               	xorlw	1	; case 7
  1430  000186  B4D8               	btfsc	status,2,c
  1431  000188  D7CF               	goto	i2l113
  1432  00018A  0A0F               	xorlw	15	; case 8
  1433  00018C  B4D8               	btfsc	status,2,c
  1434  00018E  D7D4               	goto	i2l114
  1435  000190  0A01               	xorlw	1	; case 9
  1436  000192  A4D8               	btfss	status,2,c
  1437  000194  0012               	return	
  1438  000196  D7D8               	goto	i2l115
  1439  000198                     __end_of_segments:
  1440                           	opt stack 0
  1441  0000                     pclatu	equ	0xFFB
  1442                           pclath	equ	0xFFA
  1443                           tblptru	equ	0xFF8
  1444                           tblptrh	equ	0xFF7
  1445                           tblptrl	equ	0xFF6
  1446                           tablat	equ	0xFF5
  1447                           prodh	equ	0xFF4
  1448                           prodl	equ	0xFF3
  1449                           intcon	equ	0xFF2
  1450                           postinc0	equ	0xFEE
  1451                           fsr0h	equ	0xFEA
  1452                           fsr0l	equ	0xFE9
  1453                           wreg	equ	0xFE8
  1454                           fsr1h	equ	0xFE2
  1455                           fsr1l	equ	0xFE1
  1456                           fsr2h	equ	0xFDA
  1457                           fsr2l	equ	0xFD9
  1458                           status	equ	0xFD8
  1459                           pclatu	equ	0xFFB
  1460                           pclath	equ	0xFFA
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           intcon	equ	0xFF2
  1468                           postinc0	equ	0xFEE
  1469                           fsr0h	equ	0xFEA
  1470                           fsr0l	equ	0xFE9
  1471                           wreg	equ	0xFE8
  1472                           fsr1h	equ	0xFE2
  1473                           fsr1l	equ	0xFE1
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478                           	psect	rparam
  1479  0000                     pclatu	equ	0xFFB
  1480                           pclath	equ	0xFFA
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           intcon	equ	0xFF2
  1488                           postinc0	equ	0xFEE
  1489                           fsr0h	equ	0xFEA
  1490                           fsr0l	equ	0xFE9
  1491                           wreg	equ	0xFE8
  1492                           fsr1h	equ	0xFE2
  1493                           fsr1l	equ	0xFE1
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_interrupt in COMRAM

    _low_interrupt->_time_converter
    _time_converter->___awmod
    ___awmod->___awdiv
    _rafraichissement->_segments

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_interrupt in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5      75
                                             30 COMRAM     9     4      5
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_interrupt                                       14    14      0    1175
                                             16 COMRAM    14    14      0
                   _rafraichissement
                     _time_converter
 ---------------------------------------------------------------------------------
 (3) _time_converter                                       2     0      2    1111
                                             14 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     535
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     467
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rafraichissement                                     4     2      2      64
                                              1 COMRAM     4     2      2
                           _segments
 ---------------------------------------------------------------------------------
 (4) _segments                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _low_interrupt (ROOT)
   _rafraichissement
     _segments
   _time_converter
     ___awdiv
     ___awmod
       ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      33       1       53.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33       6        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Sep 24 13:33:07 2014

                       l79 0442               ___awdiv@sign 0006      _centaine_milliseconde 002B  
         ??_time_converter 0011                        l851 040C                        _GIE 007F97  
                      _PSA 007EAB               ___awmod@sign 000E                        wreg 000FE8  
           segments@figure 0001                       _T0CS 007EAD                       _PEIE 007F96  
                     i2l72 0076                       _TMR0 000FD6           ??_initialisation 001F  
                     _main 0406                       _time 0028                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       fsr2l 000FD9                       pclat 000FFA  
                     prodh 000FF4                       prodl 000FF3                       start 00B0  
__size_of_rafraichissement 0070                      ?_main 001F            __end_of___awdiv 0306  
          __end_of___awmod 0396            ___awdiv@divisor 0003                      _T0PS0 007EA8  
                    _T0PS1 007EA9                      _T0PS2 007EAA                      i2l110 00F8  
                    i2l111 0108                      i2l112 0118                      i2l113 0128  
                    i2l105 00B8                      i2l114 0138                      i2l115 0148  
                    i2l107 00C8                      i2l108 00D8                      i2l109 00E8  
                    i2l711 02A6                      i2l801 03D4                      i2l721 02C8  
                    i2l705 0286                      i2l717 02BC                      i2l733 02EE  
                    i2l719 02C4                      i2l737 02FC                      i2l729 02E4  
                    i2l761 0360                      i2l753 0346                      i2l841 005E  
                    i2l781 0398                      i2l773 038C                      i2l765 0374  
                    i2l757 0354                      i2l749 032A                      i2l695 0158  
                    i2l759 035C                      i2l839 005C                      i2l793 03BC  
                    i2l785 03A4                      i2l769 037E            ___awdiv@counter 0005  
                    i2l797 03C8                      i2l789 03B0                      _PORTA 000F80  
                    _PORTC 000F82                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94                      main@a 0026                      main@k 0024  
                    tablat 000FF5                      status 000FD8            __initialization 047A  
             __end_of_main 0450  rafraichissement@afficheur 0002                     ??_main 0024  
       time_converter@time 000F              __activetblptr 000002                     _T08BIT 007EAE  
         ___awdiv@dividend 0001                     _INTCON 000FF2                     _TMR0IE 007F95  
                   _TMR0IF 007F92                     _TMR0ON 007EAF      __end_of_low_interrupt 00B0  
           __CFG_XINST$OFF 000000                  ??___awdiv 0005                  ??___awmod 000D  
                   clear_0 0480           ___awdiv@quotient 0007            ___awmod@divisor 000B  
                   _valeur 0033            ___awmod@counter 000D                     _stance 0032  
         __end_of_segments 0198                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0060    __end_of__initialization 0486  
           __pcstackCOMRAM 0001           _rafraichissement 0396              _front_montant 002E  
                  __Hparam 0000                  ?_segments 0001                    __Lparam 0000  
                  ___awdiv 0262                    ___awmod 0306                    __pcinit 047A  
                  __ramtop 0F00                    __ptext0 0406                    __ptext1 0450  
                  __ptext3 0198                    __ptext4 0306                    __ptext5 0262  
                  __ptext6 0396                    __ptext7 00B4           ___awmod@dividend 0009  
                  _seconde 0031       end_of_initialization 0486    __size_of_time_converter 00CA  
            __Lmediumconst 0000                 ??_segments 0001                    postinc0 000FEE  
  __size_of_initialisation 002A                  _PORTCbits 000F82   __end_of_rafraichissement 0406  
      start_initialization 047A     __size_of_low_interrupt 00A8                __pbssCOMRAM 0028  
           _time_converter 0198              _low_interrupt 0008                  __pintcode 0008  
           _initialisation 0450          __size_of_segments 00E4                   ?___awdiv 0001  
                 ?___awmod 0009     __end_of_time_converter 0262                  _old_state 0030  
             _milliseconde 002F     __end_of_initialisation 047A             ?_low_interrupt 0001  
          ?_time_converter 000F          ?_rafraichissement 0002         ??_rafraichissement 0004  
                 __Hrparam 0000            ?_initialisation 0001                   __Lrparam 0000  
         __size_of___awdiv 00A4           __size_of___awmod 0090                   _balayage 002A  
            __size_of_main 004A            ??_low_interrupt 0011                   _segments 00B4  
          _dizaine_seconde 002D                   main@argc 001F                   main@argv 0021  
                 intlevel2 0000       _dizaine_milliseconde 002C  
